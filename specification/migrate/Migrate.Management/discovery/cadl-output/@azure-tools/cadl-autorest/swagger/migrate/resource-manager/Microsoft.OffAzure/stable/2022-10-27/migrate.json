{
  "swagger": "2.0",
  "info": {
    "title": "SingleSPNAttribute",
    "version": "2022-10-27",
    "description": "Azure OffAzure Resource Provider management API.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "HypervClusterController"
    },
    {
      "name": "Sites"
    },
    {
      "name": "VmwareOperationsStatus"
    },
    {
      "name": "VmwarePropertiesController"
    },
    {
      "name": "WebAppPropertiesController"
    },
    {
      "name": "DependencyMapController"
    },
    {
      "name": "VmwareSites"
    },
    {
      "name": "MachinesController"
    },
    {
      "name": "VmwareMachinesController"
    },
    {
      "name": "VcenterController"
    },
    {
      "name": "RunAsAccountsController"
    },
    {
      "name": "VmwareHostController"
    },
    {
      "name": "JobsController"
    },
    {
      "name": "HypervDependencyMapController"
    },
    {
      "name": "HypervSitesController"
    },
    {
      "name": "HypervSites"
    },
    {
      "name": "HypervJobs"
    },
    {
      "name": "HypervHostController"
    },
    {
      "name": "HypervMachinesController"
    },
    {
      "name": "HypervRunAsAccountsController"
    },
    {
      "name": "ServersController"
    },
    {
      "name": "ServerSitesController"
    },
    {
      "name": "ServerDependencyMapController"
    },
    {
      "name": "ServerRunAsAccounts"
    },
    {
      "name": "ServerJobsController"
    },
    {
      "name": "ImportJobsController"
    },
    {
      "name": "ImportMachinesController"
    },
    {
      "name": "ImportSitesController"
    },
    {
      "name": "MasterSitesController"
    },
    {
      "name": "ApplianceNonceController"
    },
    {
      "name": "MasterSitesOperationsStatusController"
    },
    {
      "name": "PrivateEndpointConnectionController"
    },
    {
      "name": "PrivateEndpointConnectionProxyController"
    },
    {
      "name": "PrivateLinkResourcesController"
    },
    {
      "name": "SqlSitesController"
    },
    {
      "name": "WebAppSitesController"
    },
    {
      "name": "TomcatWebApplicationsController"
    },
    {
      "name": "TomcatWebServersController"
    },
    {
      "name": "IisWebApplicationsController"
    },
    {
      "name": "IisWebServersController"
    },
    {
      "name": "WebAppDiscoverySiteDataSourcesController"
    },
    {
      "name": "WebAppExtendedMachinesController"
    },
    {
      "name": "WebApplicationsController"
    },
    {
      "name": "WebAppRunAsAccountsController"
    },
    {
      "name": "WebServersController"
    },
    {
      "name": "SqlAvailabilityGroupController"
    },
    {
      "name": "SqlServersController"
    },
    {
      "name": "SqlDatabasesController"
    },
    {
      "name": "SqlJobsController"
    },
    {
      "name": "SqlRunAsAccountsController"
    },
    {
      "name": "SqlDiscoverySiteDataSourceController"
    },
    {
      "name": "SqlOperationsStatusController"
    }
  ],
  "paths": {
    "/providers/Microsoft.OffAzure/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/hypervSites": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVSites_ListBySubscription",
        "summary": "Get all hyperv  sites.",
        "description": "Get all the hyperv  sites in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/importSites": {
      "get": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSites_ListBySubscription",
        "description": "List ImportSiteResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/masterSites": {
      "get": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_ListBySubscription",
        "description": "Get all the sites in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/serverSites": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServerSites_ListBySubscription",
        "description": "List ServerSiteResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/vmwareSites": {
      "get": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "VMwareSites_ListBySubscription",
        "summary": "Get all vmware sites.",
        "description": "Get all the vmware sites in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HypervSites_ListByResourceGroup",
        "summary": "Get all hyperv sites.",
        "description": "Get all the hyperv sites in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}": {
      "get": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_Get",
        "description": "Get a HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSite"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_Create",
        "description": "Create a HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HypervSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSite"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_Update",
        "description": "Update a HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/HypervSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_Delete",
        "description": "Delete a HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clientGroupMembers": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVDependencyMapController_ClientGroupMembersAsync",
        "description": "API to list client group members for the selected client group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsClientGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clusters": {
      "get": {
        "tags": [
          "HypervClusterController"
        ],
        "operationId": "HyperVClusters_List",
        "description": "List HypervCluster resources by HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervClusterCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clusters/{clusterName}": {
      "get": {
        "tags": [
          "HypervClusterController"
        ],
        "operationId": "HyperVClusters_Get",
        "description": "Method to get a Hyper-V cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": " Cluster ARM name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervCluster"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HypervClusterController"
        ],
        "operationId": "HyperVClusters_Create",
        "description": "Create a HypervCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": " Cluster ARM name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HypervCluster"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/errorSummary": {
      "get": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSitesController_GetErrorSummary",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance Name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/exportDependencies": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVDependencyMapController_ExportDependencies",
        "description": "API to generate report containing agentless dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/exportMachineErrors": {
      "post": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSitesController_ExportMachineErrors",
        "description": "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/generateCoarseMap": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVDependencyMapController_GenerateCoarseMapAsync",
        "description": "API to generate coarse map for the list of machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/generateDetailedMap": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVDependencyMapController_GenerateDetailedMapAsync",
        "description": "API to generate detailed map for a selected machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/healthSummary": {
      "post": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_ListHealthSummary",
        "description": "Method to get site health summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/hosts": {
      "get": {
        "tags": [
          "HypervHostController"
        ],
        "operationId": "HyperVHosts_List",
        "description": "List HypervHost resources by HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervHostCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/hosts/{hostName}": {
      "get": {
        "tags": [
          "HypervHostController"
        ],
        "operationId": "HyperVHosts_Get",
        "description": "Get a HypervHost",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Host name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervHost"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HypervHostController"
        ],
        "operationId": "HyperVHosts_Create",
        "description": "Create a HypervHost",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Host name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HypervHost"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "HypervJobs"
        ],
        "operationId": "HyperVJobs_List",
        "description": "List HypervJob resources by HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervJobCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "HypervJobs"
        ],
        "operationId": "HyperVJobs_GetJ",
        "description": "Get a HypervJob",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Job name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines": {
      "get": {
        "tags": [
          "HypervMachinesController"
        ],
        "operationId": "HyperVMachines_List",
        "description": "List HypervMachine resources by HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervMachineCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "HypervMachinesController"
        ],
        "operationId": "HyperVMachines_Get",
        "description": "Get a HypervMachine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " HypervMachine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervMachine"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}/applications": {
      "get": {
        "tags": [
          "HypervMachinesController"
        ],
        "operationId": "HyperVMachinesController_GetHyperVMachineApplications",
        "description": "Method to get machine with application and roles present in it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " HypervMachine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervMachine"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}/softwareInventory/default": {
      "get": {
        "tags": [
          "HypervMachinesController"
        ],
        "operationId": "HypervMachinesController_GetMachineSoftwareInventory",
        "description": "Method to get a machines software inventory like applications and roles.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " HypervMachine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervVmSoftwareInventory"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVOperationsStatus_GetOperationStatus",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_RefreshSite",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "HypervRunAsAccountsController"
        ],
        "operationId": "HyperVRunAsAccounts_List",
        "description": "List HypervRunAsAccountResource resources by HypervSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervRunAsAccountResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "HypervRunAsAccountsController"
        ],
        "operationId": "HyperVRunAsAccounts_Get",
        "description": "Get a HypervRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervRunAsAccountResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/serverGroupMembers": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVDependencyMapController_ServerGroupMembersAsync",
        "description": "API to list server group members for the selected server group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsServerGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/summary": {
      "post": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSites_GetSummary",
        "description": "Method to get site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/updateDependencyMapStatus": {
      "post": {
        "tags": [
          "HypervDependencyMapController"
        ],
        "operationId": "HyperVMachinesController_UpdateDependencyMapStatus",
        "description": "Method to enable disable dependency map status for machines\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/UpdateMachineDepMapStatus"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "HypervMachinesController"
        ],
        "operationId": "HypervMachinesController_UpdateProperties",
        "description": "Method to update custom properties for HYPERV machines\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "metaData",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/usage": {
      "get": {
        "tags": [
          "HypervSitesController"
        ],
        "operationId": "HyperVSitesController_GetUsage",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteUsageResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites": {
      "get": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_ListByResourceGroup",
        "description": "Get all import sites.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}": {
      "get": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_Get",
        "description": "Get a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_Create",
        "description": "Create a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_Update",
        "description": "Update a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_Delete",
        "description": "Delete a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteImportedMachines": {
      "post": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_DeleteImportedMachines",
        "description": "Deletes the imported machines for site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/V20190501PreviewSasUriResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deletejobs": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_ListDeletejobs",
        "description": "Method to get all delete import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedImportDeleteImportMachinesJobDeleteImportMachinesJobCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteJobs/{jobName}": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_GetDeletejob",
        "description": "Gets the delete imported machines job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_Update",
        "description": "Patch the delete imported machines job object.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Job body with updated properties.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportjobs": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_ListExportjobs",
        "description": "Method to get all export import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedV20200201ExportImportedMachinesJobExportImportedMachinesJobCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportJobs/{jobName}": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_GetExportjobs",
        "description": "Gets the export imported machines job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201ExportImportedMachinesJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importJob/{jobName}": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_GetImportJob",
        "description": "Gets the import job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201ImportMachinesJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importjobs": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_List",
        "description": "Method to get all import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedV20200201ImportMachinesJobImportMachinesJobCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importUri": {
      "post": {
        "tags": [
          "ImportSitesController"
        ],
        "operationId": "ImportSitesController_ImportUri",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_ListByImportSiteResource",
        "description": "List ImportJobResource resources by ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportJobResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobsController_Get",
        "description": "Get a ImportJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportJobResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines": {
      "get": {
        "tags": [
          "ImportMachinesController"
        ],
        "operationId": "ImportMachinesController_ListByImportSiteResource",
        "description": "List ImportMachineResource resources by ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportMachineResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "ImportMachinesController"
        ],
        "operationId": "ImportMachinesController_Get",
        "description": "Get a ImportMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportMachineResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportMachinesController"
        ],
        "operationId": "ImportMachinesController_Delete",
        "description": "Delete a ImportMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites": {
      "get": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_List",
        "summary": "Get all sites.",
        "description": "Get all the sites in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}": {
      "get": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_Get",
        "summary": "Method to get a master site.",
        "description": "Get a MasterSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_Create",
        "description": "Method to create or update a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_Delete",
        "description": "Method to delete a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      },
      "patch": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_Update",
        "description": "Method to update an existing site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/MasterSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/applianceRegistrationInfo": {
      "post": {
        "tags": [
          "ApplianceNonceController"
        ],
        "operationId": "ApplianceNonceController_ApplianceRegistrationInfo",
        "description": "Method to create and get Nonce.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/NonceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplianceNonce"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/errorSummary": {
      "post": {
        "tags": [
          "MasterSitesController"
        ],
        "operationId": "MasterSites_GetErrorSummary",
        "description": "Method to get error summary from master site for an appliance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "MasterSitesOperationsStatusController"
        ],
        "operationId": "MasterSitesOperationsStatusController_GetOperationStatus",
        "description": "A operation status resource belonging to a master site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnectionProxies": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_List",
        "description": "Gets the private endpoint connection proxy resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxyCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnectionProxies/{pecProxyName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_Get",
        "description": "Gets the private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "pecProxyName",
            "in": "path",
            "required": true,
            "description": " Private endpoint connection proxy name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_Delete",
        "description": "Deletes the private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "pecProxyName",
            "in": "path",
            "required": true,
            "description": " Private endpoint connection proxy name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_Create",
        "description": "Creates  the private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "pecProxyName",
            "in": "path",
            "required": true,
            "description": " Private endpoint connection proxy name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionProxy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnectionProxies/{pecProxyName}/operationsStatus": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_GetOperationStatus",
        "description": "Gets the private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "pecProxyName",
            "in": "path",
            "required": true,
            "description": " Private endpoint connection proxy name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IarmAsyncOperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnectionProxies/{pecProxyName}/validate": {
      "post": {
        "tags": [
          "PrivateEndpointConnectionProxyController"
        ],
        "operationId": "PrivateEndpointConnectionProxyController_ValidatePrivateEndpointConnectionProxy",
        "description": "Gets the private endpoint connection proxy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "pecProxyName",
            "in": "path",
            "required": true,
            "description": " Private endpoint connection proxy name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Request body.",
            "schema": {
              "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointBodyPrivateEndpointConnectionProxyRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointBodyPrivateEndpointConnectionProxyRequestBody"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "PrivateEndpointConnectionController_List",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnections/{peConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "PrivateEndpointConnectionController_Get",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "description": " Private link resource name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "PrivateEndpointConnectionController_Delete",
        "description": "Deletes the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "description": " Private link resource name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "PrivateEndpointConnectionController_Create",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "description": " Private link resource name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResourcesController"
        ],
        "operationId": "PrivateLinkResourcesController_List",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResourcesController"
        ],
        "operationId": "PrivateLinkResourcesController_Get",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "required": true,
            "description": "Private link resource name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites": {
      "get": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_List",
        "description": "Method to get all sites.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}": {
      "get": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_Get",
        "description": "Method to get a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_Delete",
        "description": "Deletes the SQL site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_Create",
        "description": "Method to create a SQL site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/SqlSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlSite"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_Update",
        "description": "Method to update an existing site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/SqlSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlSite"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/discoverySiteDataSources": {
      "get": {
        "tags": [
          "SqlDiscoverySiteDataSourceController"
        ],
        "operationId": "SqlDiscoverySiteDataSourceController_ListSqlDiscoverySiteDataSourcesInSite",
        "description": "List SqlDiscoverySiteDataSourceResource resources by SqlSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDiscoverySiteDataSourceResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/discoverySiteDataSources/{discoverySiteDataSourceName}": {
      "get": {
        "tags": [
          "SqlDiscoverySiteDataSourceController"
        ],
        "operationId": "SqlDiscoverySiteDataSourceController_GetSqlDiscoverySiteDataSource",
        "description": "Get a SqlDiscoverySiteDataSourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "SQL Discovery site data source name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDiscoverySiteDataSourceResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SqlDiscoverySiteDataSourceController"
        ],
        "operationId": "SqlDiscoverySiteDataSourceController_CreateSqlDiscoverySiteDataSource",
        "description": "Create a SqlDiscoverySiteDataSourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "SQL Discovery site data source name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/SqlDiscoverySiteDataSourceResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "SqlDiscoverySiteDataSourceController"
        ],
        "operationId": "SqlDiscoverySiteDataSourceController_DeleteSqlDiscoverySiteDataSource",
        "description": "Delete a SqlDiscoverySiteDataSourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "SQL Discovery site data source name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/errorSummary": {
      "post": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_GetSiteErrorSummary",
        "description": "Method to get error summary from SQL site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/exportSqlServers": {
      "post": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_ExportSqlServers",
        "description": "Method to generate report containing SQL servers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": false,
            "description": "Appliance name.",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter options.",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "SqlOperationsStatusController"
        ],
        "operationId": "SqlOperationsStatus_GetOperationStatus",
        "description": "Method to get operation status.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/refresh": {
      "post": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_RefreshSite",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/SqlSiteRefreshBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/runAsAccounts": {
      "get": {
        "tags": [
          "SqlRunAsAccountsController"
        ],
        "operationId": "SqlRunAsAccounts_List",
        "description": "List SqlRunAsAccountResource resources by SqlSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRunAsAccountResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "SqlRunAsAccountsController"
        ],
        "operationId": "SqlRunAsAccounts_Get",
        "description": "Get a SqlRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "SQL RunAsAccounts name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRunAsAccountResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlAvailabilityGroups": {
      "get": {
        "tags": [
          "SqlAvailabilityGroupController"
        ],
        "operationId": "SqlAvailabilityGroupController_ListSqlAvailabilityGroups",
        "description": "Gets the sql availability groups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlAvailabilityGroupCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlAvailabilityGroups/{sqlAvailabilityGroupName}": {
      "get": {
        "tags": [
          "SqlAvailabilityGroupController"
        ],
        "operationId": "SqlAvailabilityGroupController_GetSqlAvailabilityGroup",
        "description": "Gets the sql availability group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlAvailabilityGroupName",
            "in": "path",
            "required": true,
            "description": "SQL availability group name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlAvailabilityGroup"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlDatabases": {
      "get": {
        "tags": [
          "SqlDatabasesController"
        ],
        "operationId": "SqlDatabasesController_ListSqlDatabases",
        "description": "Gets the sql Databases.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDatabaseCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlDatabases/{sqlDatabaseName}": {
      "get": {
        "tags": [
          "SqlDatabasesController"
        ],
        "operationId": "SqlDatabasesController_GetSqlDatabase",
        "description": "Gets the sql Database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlDatabaseName",
            "in": "path",
            "required": true,
            "description": "SQL Database name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDatabase"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlJobs": {
      "get": {
        "tags": [
          "SqlJobsController"
        ],
        "operationId": "SqlJobsController_ListSqlJobs",
        "summary": "Gets the sql Jobs.",
        "description": "List SqlJob resources by SqlSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlJobCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlJobs/{sqlJobName}": {
      "get": {
        "tags": [
          "SqlJobsController"
        ],
        "operationId": "SqlJobsController_GetSqlJob",
        "summary": "Gets the sql Job.",
        "description": "Get a SqlJob",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlJobName",
            "in": "path",
            "required": true,
            "description": "SQL Job name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlServers": {
      "get": {
        "tags": [
          "SqlServersController"
        ],
        "operationId": "SqlServersController_ListSqlServers",
        "description": "Gets the sql servers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlServerCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlServers/{sqlServerName}": {
      "get": {
        "tags": [
          "SqlServersController"
        ],
        "operationId": "SqlServersController_GetSqlServer",
        "description": "Gets the sql server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlServerName",
            "in": "path",
            "required": true,
            "description": "SQL server name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlServer"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/summary": {
      "post": {
        "tags": [
          "SqlSitesController"
        ],
        "operationId": "SqlSitesController_GetSummary",
        "description": "Method to get site usage/summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "sqlSiteName",
            "in": "path",
            "required": true,
            "description": "SQL site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites": {
      "get": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_List",
        "description": "Method to get all sites.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}": {
      "get": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_Get",
        "description": "Method to get a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_Delete",
        "description": "Deletes the WebApp site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_Create",
        "description": "Method to create a WebApp site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/WebAppSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppSite"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_Update",
        "description": "Method to update an existing site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/WebAppSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppSite"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/discoverySiteDataSources": {
      "get": {
        "tags": [
          "WebAppDiscoverySiteDataSourcesController"
        ],
        "operationId": "WebAppDiscoverySiteDataSourceController_ListDataSources",
        "description": "Method to get all Web app data sources in site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoverySiteDataSourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/discoverySiteDataSources/{discoverySiteDataSourceName}": {
      "get": {
        "tags": [
          "WebAppDiscoverySiteDataSourcesController"
        ],
        "operationId": "WebAppDiscoverySiteDataSourceController_GetDataSource",
        "description": "Method to get a Web app data source in site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "Data Source ARM name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoverySiteDataSource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebAppDiscoverySiteDataSourcesController"
        ],
        "operationId": "WebAppDiscoverySiteDataSourceController_DeleteDataSource",
        "description": "Method to delete a Web app data source in site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "Data Source ARM name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "WebAppDiscoverySiteDataSourcesController"
        ],
        "operationId": "WebAppDiscoverySiteDataSourceController_CreateDataSource",
        "description": "Method to create or update a Web app data source in site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "discoverySiteDataSourceName",
            "in": "path",
            "required": true,
            "description": "Data Source ARM name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DiscoverySiteDataSource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/errorSummary": {
      "post": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_GetSiteErrorSummary",
        "description": "Method to get error summary from web app site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/exportInventory": {
      "post": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_ExportInventory",
        "description": "Method to generate report containing web app inventory.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/extendedMachines": {
      "get": {
        "tags": [
          "WebAppExtendedMachinesController"
        ],
        "operationId": "WebAppExtendedMachinesController_ListMachineExtensions",
        "description": "Method to get all extended machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppExtendedMachineCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/extendedMachines/{extendedMachineName}": {
      "get": {
        "tags": [
          "WebAppExtendedMachinesController"
        ],
        "operationId": "WebAppExtendedMachinesController_GetMachineExtension",
        "description": "Method to get a extended machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "extendedMachineName",
            "in": "path",
            "required": true,
            "description": "Extended machine name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppExtendedMachine"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebApplications": {
      "get": {
        "tags": [
          "IisWebApplicationsController"
        ],
        "operationId": "IisWebApplicationsController_ListWebApplications",
        "description": "Method to get all IIS web application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IisWebApplicationsCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebApplications/{webApplicationName}": {
      "get": {
        "tags": [
          "IisWebApplicationsController"
        ],
        "operationId": "IisWebApplicationsController_GetWebApplication",
        "description": "Method to get an IIS web application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webApplicationName",
            "in": "path",
            "required": true,
            "description": "Web application name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IisWebApplications"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebServers": {
      "get": {
        "tags": [
          "IisWebServersController"
        ],
        "operationId": "IisWebServersController_ListWebServers",
        "description": "Method to get all IIS web servers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IisWebServersCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebServers/{webServerName}": {
      "get": {
        "tags": [
          "IisWebServersController"
        ],
        "operationId": "IisWebServersController_GetWebServer",
        "description": "Method to get an IIS web server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webServerName",
            "in": "path",
            "required": true,
            "description": "Web server name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IisWebServers"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/refresh": {
      "post": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_RefreshSite",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/ProxySiteRefreshBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/runasaccounts": {
      "get": {
        "tags": [
          "WebAppRunAsAccountsController"
        ],
        "operationId": "WebAppRunAsAccountsController_ListRunAsAccounts",
        "description": "Method to get all run as accounts.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppRunAsAccountCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/runasaccounts/{accountName}": {
      "get": {
        "tags": [
          "WebAppRunAsAccountsController"
        ],
        "operationId": "WebAppRunAsAccountsController_GetRunAsAccount",
        "description": "Method to get run as account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Run as account ARM name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppRunAsAccount"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/summary": {
      "post": {
        "tags": [
          "WebAppSitesController"
        ],
        "operationId": "WebAppSitesController_GetSummary",
        "description": "Method to get site usage/summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebAppSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebApplications": {
      "get": {
        "tags": [
          "TomcatWebApplicationsController"
        ],
        "operationId": "TomcatWebApplicationsController_ListWebApplications",
        "description": "Method to get all Tomcat web application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TomcatWebApplicationsCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebApplications/{webApplicationName}": {
      "get": {
        "tags": [
          "TomcatWebApplicationsController"
        ],
        "operationId": "TomcatWebApplicationsController_GetWebApplication",
        "description": "Method to get an Tomcat web application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webApplicationName",
            "in": "path",
            "required": true,
            "description": "Web application name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TomcatWebApplications"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebServers": {
      "get": {
        "tags": [
          "TomcatWebServersController"
        ],
        "operationId": "TomcatWebServersController_ListWebServers",
        "description": "Method to get all Tomcat web servers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TomcatWebServersCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebServers/{webServerName}": {
      "get": {
        "tags": [
          "TomcatWebServersController"
        ],
        "operationId": "TomcatWebServersController_GetWebServer",
        "description": "Method to get an Tomcat web server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webServerName",
            "in": "path",
            "required": true,
            "description": "Web server name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TomcatWebServers"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/updateProperties": {
      "post": {
        "tags": [
          "WebAppPropertiesController"
        ],
        "operationId": "WebAppPropertiesController_UpdateProperties",
        "description": "Method to update properties for web applications.\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/WebAppPropertiesCollection"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/webApplications": {
      "get": {
        "tags": [
          "WebApplicationsController"
        ],
        "operationId": "WebApplicationsController_ListWebApplications",
        "description": "Method to get all IIS web applications.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebRoleV202011PreviewWebApplicationCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/webServers": {
      "get": {
        "tags": [
          "WebServersController"
        ],
        "operationId": "WebServersController_ListWebServers",
        "description": "Method to get all web servers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "webAppSiteName",
            "in": "path",
            "required": true,
            "description": "Web app site name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebServerCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_Get",
        "description": "Get a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_Create",
        "description": "Create a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_Update",
        "description": "Update a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_Delete",
        "description": "Delete a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/clientGroupMembers": {
      "post": {
        "tags": [
          "ServerDependencyMapController"
        ],
        "operationId": "ServerDependencyMapController_ClientGroupMembersAsync",
        "description": "API to list client group members for the selected client group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsClientGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/errorSummary": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_GetErrorSummary",
        "description": "Get the error summary for a server site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportApplications": {
      "post": {
        "tags": [
          "ServerSitesController"
        ],
        "operationId": "ServerSitesController_ExportApplications",
        "description": "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportDependencies": {
      "post": {
        "tags": [
          "ServerDependencyMapController"
        ],
        "operationId": "ServerDependencyMapController_ExportDependencies",
        "description": "API to generate report containing agentless dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportMachineErrors": {
      "post": {
        "tags": [
          "ServerSitesController"
        ],
        "operationId": "ServerSitesController_ExportMachineErrors",
        "description": "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/generateCoarseMap": {
      "post": {
        "tags": [
          "ServerDependencyMapController"
        ],
        "operationId": "ServerDependencyMapController_GenerateCoarseMapAsync",
        "description": "API to generate coarse map for the list of machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/generateDetailedMap": {
      "post": {
        "tags": [
          "ServerDependencyMapController"
        ],
        "operationId": "ServerDependencyMapController_GenerateDetailedMapAsync",
        "description": "API to generate detailed map for a selected machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/healthSummary": {
      "post": {
        "tags": [
          "ServerSitesController"
        ],
        "operationId": "ServerSitesController_ListHealthSummary",
        "description": "Method to get site health summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ServerJobsController"
        ],
        "operationId": "ServerJobsController_ListByServerSiteResource",
        "description": "List ServerJobResource resources by ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerJobResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ServerJobsController"
        ],
        "operationId": "ServerJobsController_Get",
        "description": "Get a ServerJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerJobResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_ListMachines",
        "description": "Get all machines in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerMachineResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_GetMachine",
        "description": "Get a ServerMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerMachineResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_CreateMachine",
        "description": "Create a ServerMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ServerMachineResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_DeleteMachine",
        "description": "Delete a ServerMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}/applications": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_GetHyperVMachineApplications",
        "description": "Method to get machine with application and roles present in it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerMachineResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}/softwareInventory/default": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_GetServerSoftwareInventory",
        "description": "Method to get a machines software inventory like applications and roles.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSoftwareInventory"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServerSiteOperationsStatus_Get",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/refreshSite": {
      "post": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_RefreshSite",
        "description": "Operation to refresh a site",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "operationId": "ServerRunAsAccounts_ListByServerSiteResource",
        "description": "List ServerRunAsAccountResource resources by ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccountResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "operationId": "ServerRunAsAccounts_Get",
        "description": "Get a ServerRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccountResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/serverGroupMembers": {
      "post": {
        "tags": [
          "ServerDependencyMapController"
        ],
        "operationId": "ServerDependencyMapController_ServerGroupMembersAsync",
        "description": "API to list server group members for the selected server group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsServerGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/summary": {
      "post": {
        "tags": [
          "ServerSitesController"
        ],
        "operationId": "ServerSitesController_GetSummary",
        "description": "Method to get site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/updateDependencyMapStatus": {
      "post": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_UpdateDependencyMapStatus",
        "description": "Method to enable disable dependency map status for machines\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/UpdateMachineDepMapStatus"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServersController_UpdateProperties",
        "description": "Operation to update custom properties for servers",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "metaData",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/usage": {
      "get": {
        "tags": [
          "ServersController"
        ],
        "operationId": "ServerSiteResources_GetUsage",
        "description": "Get a serve site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteUsageResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites": {
      "get": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "VmwareSites_ListByResourceGroup",
        "summary": "Get all vmware sites.",
        "description": "Get all the vmware sites in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSiteCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_Get",
        "description": "Get a VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_Delete",
        "description": "Delete a VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      },
      "put": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_Create",
        "description": "Create a VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/VmwareSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSite"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_Update",
        "description": "Update a VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/VmwareSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSite"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/clientGroupMembers": {
      "post": {
        "tags": [
          "DependencyMapController"
        ],
        "operationId": "DependencyMapController_ClientGroupMembersAsync",
        "description": "API to list client group members for the selected client group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsClientGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/errorSummary": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_GetErrorSummary",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportApplications": {
      "post": {
        "tags": [
          "Sites"
        ],
        "operationId": "SitesController_ExportApplications",
        "description": "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportDependencies": {
      "post": {
        "tags": [
          "DependencyMapController"
        ],
        "operationId": "DependencyMapController_ExportDependencies",
        "description": "API to generate report containing agentless dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportMachineErrors": {
      "post": {
        "tags": [
          "Sites"
        ],
        "operationId": "SitesController_ExportMachineErrors",
        "description": "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportMachines": {
      "post": {
        "tags": [
          "Sites"
        ],
        "operationId": "SitesController_ExportMachines",
        "description": "Method to generate report containing \r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/generateCoarseMap": {
      "post": {
        "tags": [
          "DependencyMapController"
        ],
        "operationId": "DependencyMapController_GenerateCoarseMapAsync",
        "description": "API to generate coarse map for the list of machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/generateDetailedMap": {
      "post": {
        "tags": [
          "DependencyMapController"
        ],
        "operationId": "DependencyMapController_GenerateDetailedMapAsync",
        "description": "API to generate detailed map for a selected machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/healthSummary": {
      "post": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_ListHealthSummary",
        "description": "Method to get site health summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/hosts": {
      "get": {
        "tags": [
          "VmwareHostController"
        ],
        "operationId": "VmwareHostController_ListByVmwareSite",
        "description": "List VmwareHostResource resources by VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareHostResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/hosts/{hostName}": {
      "get": {
        "tags": [
          "VmwareHostController"
        ],
        "operationId": "VmwareHostController_Get",
        "description": "Get a VmwareHostResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Hosts name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareHostResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "JobsController"
        ],
        "operationId": "Jobs_List",
        "description": "List VmwareJobResource resources by VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareJobResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "JobsController"
        ],
        "operationId": "Jobs_Get",
        "description": "Get a VmwareJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareJobResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines": {
      "get": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "Machines_ListAsync",
        "description": "List MachineResource resources by VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "Machines_Get",
        "description": "Get a MachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResource"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "Machines_UpdateTags",
        "description": "Patches the VMware machine tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/MachineResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/applications": {
      "get": {
        "tags": [
          "VmwareMachinesController"
        ],
        "operationId": "VmwareMachinesController_GetApplications",
        "description": "Method to get machine with application and roles present in it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/softwareInventory/default": {
      "get": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "MachinesController_GetMachineSoftwareInventory",
        "description": "Method to get a machines software inventory like applications and roles.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareMachineSoftwareInventory"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/start": {
      "post": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "Machines_Start",
        "description": "Method to start a machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/stop": {
      "post": {
        "tags": [
          "MachinesController"
        ],
        "operationId": "Machines_Stop",
        "description": "Method to stop a machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "VmwareOperationsStatus"
        ],
        "operationId": "VMwareOperationsStatus_Get",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_Refresh",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "RunAsAccountsController"
        ],
        "operationId": "RunAsAccounts_List",
        "description": "List VmwareRunAsAccountResource resources by VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareRunAsAccountResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "RunAsAccountsController"
        ],
        "operationId": "RunAsAccounts_Get",
        "description": "Get a VmwareRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareRunAsAccountResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/serverGroupMembers": {
      "post": {
        "tags": [
          "DependencyMapController"
        ],
        "operationId": "DependencyMapController_ServerGroupMembersAsync",
        "description": "API to list server group members for the selected server group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "mapRequest",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsServerGroupMembersRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/summary": {
      "post": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_GetSummary",
        "description": "Method to get site usage/summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateDependencyMapStatus": {
      "post": {
        "tags": [
          "VmwarePropertiesController"
        ],
        "operationId": "MwarePropertiesController_UpdateDependencyMapStatus",
        "description": "Method to enable disable dependency map status for machines\n            in a\nsite.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "updateMachineDepMapStatus",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/UpdateMachineDepMapStatus"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "VmwarePropertiesController"
        ],
        "operationId": "VmwarePropertiesController_UpdateProperties",
        "description": "Method to update properties for machines   in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "metaData",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateRunAsAccount": {
      "post": {
        "tags": [
          "VmwarePropertiesController"
        ],
        "operationId": "VmwarePropertiesController_UpdateRunAsAccount",
        "description": "Method to associate Run as account to machine\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "updateMachineRunAsAccount",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/UpdateMachineRunAsAccount"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateTags": {
      "post": {
        "tags": [
          "VmwarePropertiesController"
        ],
        "operationId": "VmwarePropertiesController_UpdateTags",
        "description": "Method to associate Run as account to machine\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "updateMachineTags",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/UpdateMachineTags"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/usage": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "VMwareSitesController_GetUsage",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareSiteUsage"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/vCenters": {
      "get": {
        "tags": [
          "VcenterController"
        ],
        "operationId": "VCenters_List",
        "description": "List Vcenter resources by VmwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VcenterCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/vCenters/{vcenterName}": {
      "get": {
        "tags": [
          "VcenterController"
        ],
        "operationId": "VCenters_Get",
        "description": "Get a Vcenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Vcenter"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VcenterController"
        ],
        "operationId": "VCenters_Create",
        "description": "Create a Vcenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Vcenter"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "VcenterController"
        ],
        "operationId": "VCenters_Delete",
        "description": "Delete a Vcenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    }
  },
  "definitions": {
    "ApplianceNonce": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplianceNonceValueProperties",
          "description": "Gets or sets the nested properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "AgentManifestNonce REST Resource."
    },
    "ApplianceNonceValueProperties": {
      "type": "object",
      "properties": {
        "appendedNonce": {
          "type": "string",
          "description": "Gets or sets the value of nonce appended with Master Site Id."
        }
      },
      "description": "Class for nonce properties."
    },
    "Application": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the Application.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the Application.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "description": "Gets or sets Provider of the Application.",
          "readOnly": true
        }
      },
      "description": "Application in the guest virtual machine."
    },
    "ApplicationDiscovery": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/ApplicationDiscoveryScopeStatus",
          "description": "Gets discovery scope status.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related application and roles discovery scope."
    },
    "ApplicationDiscoveryScopeStatus": {
      "type": "string",
      "description": "Application Discovery Scope Status",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "ApplicationDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "AppsAndRoles": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Application[]",
          "description": "Gets or sets Applications of the AppsAndRoles.",
          "readOnly": true
        },
        "webApplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationAppsAndRolesModel"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationAppsAndRolesModel[]",
          "description": "Gets or sets WebApplications of the AppsAndRoles.",
          "readOnly": true
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Feature[]",
          "description": "Gets or sets Features of the AppsAndRoles.",
          "readOnly": true
        },
        "sqlServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlServerApplication"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SqlServerApplication[]",
          "description": "Gets or sets SQLServers of the AppsAndRoles.",
          "readOnly": true
        },
        "sharePointServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointServer"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SharePointServer[]",
          "description": "Gets or sets SharePointServers of the AppsAndRoles.",
          "readOnly": true
        },
        "systemCenters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemCenter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SystemCenter[]",
          "description": "Gets or sets SystemCenters of the AppsAndRoles.",
          "readOnly": true
        },
        "bizTalkServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BizTalkServer"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "BizTalkServer[]",
          "description": "Gets or sets BizTalkServers of the AppsAndRoles.",
          "readOnly": true
        },
        "exchangeServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeServer"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ExchangeServer[]",
          "description": "Gets or sets ExchangeServers of the AppsAndRoles.",
          "readOnly": true
        },
        "otherDatabases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherDatabase"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "OtherDatabase[]",
          "description": "Gets or sets OtherDatabaseServers of the AppsAndRoles.",
          "readOnly": true
        }
      },
      "description": "AppsAndRoles in the guest virtual machine."
    },
    "BizTalkServer": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the BizTalkServer.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the BizTalkServer.",
          "readOnly": true
        }
      },
      "description": "BizTalkServer in the guest virtual machine."
    },
    "ConnectorUnit": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontEndBinding"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "FrontEndBinding[]",
          "description": "Gets or sets the bindings for the connector."
        }
      },
      "description": "The connectors of the web server."
    },
    "CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState": {
      "type": "string",
      "description": "Cosmos db Imported Machines JobEntity",
      "enum": [
        "Unknown",
        "Verified",
        "VerifiedWithErrors",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState",
        "modelAsString": true
      }
    },
    "CosmosDBImportMachinesJobEntityImportMachinesJobPropertiesJobResult": {
      "type": "string",
      "description": "JobResultValues",
      "enum": [
        "Unknown",
        "Completed",
        "CompletedWithWarnings",
        "CompletedWithErrors",
        "Failed",
        "WaitingForBlobUpload",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "CosmosDBImportMachinesJobEntityImportMachinesJobPropertiesJobResult",
        "modelAsString": true
      }
    },
    "CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "errorSasUri": {
          "type": "string",
          "description": "error Sas Uri"
        },
        "jobState": {
          "$ref": "#/definitions/CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState",
          "description": "job State"
        },
        "numberOfMachinesDeleted": {
          "type": "integer",
          "format": "int32",
          "description": "number Of Machines Deleted"
        },
        "deletionConfirmation": {
          "type": "boolean",
          "description": "deletion Confirmation"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "errors list",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Delete Imported Machines Job Properties"
    },
    "CosmosDbExportImportedMachinesJobEntityExportImportedMachinesJobEntityProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "sasUri": {
          "type": "string",
          "description": "sas uri"
        }
      },
      "description": " Export Imported Machines JobEntity Properties "
    },
    "DependencyMapDiscovery": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DependencyMapDiscoveryScopeStatus",
          "description": "Gets discovery scope status.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related dependency map discovery scope."
    },
    "DependencyMapDiscoveryScopeStatus": {
      "type": "string",
      "description": "DependencyMap DiscoveryScope Status",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "DependencyMapDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "DependencyMapServiceMapExtensionsClientGroupMembersRequest": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "id of machine"
        },
        "processGroupName": {
          "type": "string",
          "description": "process group name "
        },
        "processName": {
          "type": "string",
          "description": "name of process"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsDependencyMapRequestFilters",
          "description": "optional filters"
        }
      },
      "description": "DependencyMap ServiceMap Extensions Client GroupMembers Request"
    },
    "DependencyMapServiceMapExtensionsDependencyMapRequestFilters": {
      "type": "object",
      "properties": {
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of machine ids"
        },
        "processIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of process Ids"
        }
      },
      "description": "DependencyMap Service Map Extensions Dependency Map Request Filters"
    },
    "DependencyMapServiceMapExtensionsExportDependenciesRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        }
      },
      "description": "DependencyMap ServiceMap Extensions ExportDependencies Request"
    },
    "DependencyMapServiceMapExtensionsScopeMapRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsDependencyMapRequestFilters",
          "description": "optional filters"
        }
      },
      "description": "DependencyMap ServiceMapExtensions Scope MapRequest"
    },
    "DependencyMapServiceMapExtensionsServerGroupMembersRequest": {
      "type": "object",
      "properties": {
        "serverPort": {
          "type": "integer",
          "format": "int32",
          "description": "port of server"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsDependencyMapRequestFilters",
          "description": "optional filters"
        }
      },
      "description": "DependencyMap ServiceMap Extensions ServerGroup Members Request"
    },
    "DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "id of machine"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsDependencyMapRequestFilters",
          "description": "optional filters"
        }
      },
      "description": "DependencyMap ServiceMap Extensions SingleMachine DetailedMap Request"
    },
    "DirectoryPath": {
      "type": "object",
      "properties": {
        "virtual": {
          "type": "string",
          "description": "Gets or sets the virtual path for the directory."
        },
        "physical": {
          "type": "string",
          "description": "Gets or sets the physical path of the directory on the web server."
        }
      },
      "description": "Second level entity for virtual directories."
    },
    "DiscoveryScopeErrorSummary": {
      "type": "object",
      "properties": {
        "affectedResourceType": {
          "type": "string",
          "description": "Gets or sets the affected resource type."
        },
        "affectedObjectsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of affected objects."
        },
        "discoveryScope": {
          "$ref": "#/definitions/DiscoveryScopes",
          "description": "Gets or sets the count of affected objects."
        }
      },
      "description": "The site error summary model.",
      "required": [
        "affectedResourceType",
        "affectedObjectsCount",
        "discoveryScope"
      ]
    },
    "DiscoveryScopeStatus": {
      "type": "string",
      "description": "Discovery Scope.",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "DiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "DiscoveryScopes": {
      "type": "string",
      "description": "Discovery scopes",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "DiscoveryScopes",
        "modelAsString": true
      }
    },
    "DiscoverySiteDataSource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoverySiteDataSourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web app data source web model.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiscoverySiteDataSourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoverySiteDataSource"
          },
          "x-cadl-name": "DiscoverySiteDataSource[]",
          "description": "The DiscoverySiteDataSource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a DiscoverySiteDataSource list operation."
    },
    "DiscoverySiteDataSourceProperties": {
      "type": "object",
      "properties": {
        "discoverySiteId": {
          "type": "string",
          "description": "Gets or sets the discovery site Id."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Discovery site data source properties class."
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "isAgentReportedError": {
          "type": "boolean",
          "description": "Gets a value indicating whether the error originated from a agent or not.",
          "readOnly": true
        },
        "agentErrorCode": {
          "type": "string",
          "description": "Gets the agent error code.",
          "readOnly": true
        },
        "agentErrorMessage": {
          "type": "string",
          "description": "Gets the error message from the agent.",
          "readOnly": true
        },
        "agentErrorPossibleCauses": {
          "type": "string",
          "description": "Gets possible causes for the agent error.",
          "readOnly": true
        },
        "agentErrorRecommendedAction": {
          "type": "string",
          "description": "Gets the recommended action for the agent error.",
          "readOnly": true
        }
      },
      "description": "Error contract returned when some exception occurs in Rest API."
    },
    "Errors": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Gets the message parameters.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the error ID.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the error name.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the error summary message.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/MicrosoftAzureFDSWebRoleHealthErrorDetailsSource",
          "description": "Gets the error source.",
          "readOnly": true
        },
        "updatedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time stamp when the error was updated.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets run as account id used while performing discovery             of entity.",
          "readOnly": true
        },
        "discoveryScope": {
          "$ref": "#/definitions/HealthErrorDetailsDiscoveryScope",
          "description": "Gets discovery scope for which             error is encountered.",
          "readOnly": true
        }
      },
      "description": "The properties of a server machine tracked resource"
    },
    "ExchangeServer": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the ExchangeServer.",
          "readOnly": true
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets Edition of the ExchangeServer.",
          "readOnly": true
        },
        "roles": {
          "type": "string",
          "description": "Gets or sets Roles of the ExchangeServer.",
          "readOnly": true
        },
        "servicePack": {
          "type": "string",
          "description": "Gets or sets ServicePack of the ExchangeServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the ExchangeServer.",
          "readOnly": true
        }
      },
      "description": "ExchangeServer in the guest virtual machine."
    },
    "FCIInstanceState": {
      "type": "string",
      "description": "fci instance state ",
      "enum": [
        "Unknown",
        "Inherited",
        "Initializing",
        "Online",
        "Offline",
        "Failed",
        "Pending",
        "OnlinePending",
        "OfflinePending"
      ],
      "x-ms-enum": {
        "name": "FCIInstanceState",
        "modelAsString": true
      }
    },
    "FciProperties": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/FCIInstanceState",
          "description": "Gets or sets the state of the FCI instance."
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets the FCI Network Name used to connect to this FCI instance."
        },
        "isMultiSubnet": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the FCI is hosted on possible owners\nwhich are in multiple subnets."
        },
        "sharedDiskCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the count of Shared Disks for SQL FCI."
        }
      },
      "description": "The class representing the properties for an FCI instance."
    },
    "Feature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the Feature.",
          "readOnly": true
        },
        "featureType": {
          "type": "string",
          "description": "Gets or sets FeatureType of the Feature.",
          "readOnly": true
        },
        "parent": {
          "type": "string",
          "description": "Gets or sets Parent of the Feature.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the Feature.",
          "readOnly": true
        }
      },
      "description": "Feature in the guest virtual machine."
    },
    "FileMetaData": {
      "type": "object",
      "properties": {
        "logicalName": {
          "type": "string",
          "description": "Gets or sets the logical name of the file."
        },
        "physicalFullName": {
          "type": "string",
          "description": "Gets or sets the operating-system full path of the file."
        },
        "fileType": {
          "$ref": "#/definitions/FileType",
          "description": "Gets or sets the database file type."
        },
        "sizeInMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets the size of the file in MB."
        },
        "isMemoryOptimizedDataOptionEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory optimized data option is enabled."
        }
      },
      "description": "File Metadata web model."
    },
    "FileType": {
      "type": "string",
      "description": "file type",
      "enum": [
        "Rows",
        "Log",
        "Filestream",
        "NotSupported",
        "Fulltext"
      ],
      "x-ms-enum": {
        "name": "FileType",
        "modelAsString": true
      }
    },
    "FrontEndBinding": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "Gets or sets the Binding protocol."
        },
        "hostName": {
          "type": "string",
          "description": "Gets or sets the Host name."
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the Port number."
        },
        "ipAddress": {
          "type": "string",
          "description": "Gets or sets the IP Address."
        }
      },
      "description": "Frontend bindings for a web application."
    },
    "GroupConnectivityInformation": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "group id"
        },
        "memberName": {
          "type": "string",
          "description": "member name"
        },
        "customerVisibleFqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "customer visible Fqdns array"
        },
        "internalFqdn": {
          "type": "string",
          "description": "internal Fqdn"
        },
        "redirectMapId": {
          "type": "string",
          "description": "redirect Map Id"
        },
        "privateLinkServiceArmRegion": {
          "type": "string",
          "description": "private link service Arm Region"
        }
      },
      "description": "group connectivity information model"
    },
    "GuestOsDetails": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object.  Data related to a machine's operating system.             Serialized and stored as part of Machine Rest object. "
    },
    "HealthErrorDetails": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Gets the message parameters.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the error ID.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the error name.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the error summary message.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/HealthErrorDetailsSource",
          "description": "Gets the error source.",
          "readOnly": true
        },
        "updatedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time stamp when the error was updated.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets run as account id used while performing discovery             of entity.",
          "readOnly": true
        },
        "discoveryScope": {
          "$ref": "#/definitions/HealthErrorDetailsDiscoveryScope",
          "description": "Gets discovery scope for which             error is encountered.",
          "readOnly": true
        }
      },
      "description": "Error contract returned when some exception occurs in Rest API."
    },
    "HealthErrorDetailsDiscoveryScope": {
      "type": "string",
      "description": "Gets discovery scope for which             error is encountered.",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "HealthErrorDetailsDiscoveryScope",
        "modelAsString": true
      }
    },
    "HealthErrorDetailsSource": {
      "type": "string",
      "description": "HealthError Details Source",
      "enum": [
        "RefreshFabricLayout",
        "RefreshFabricLayoutGuest",
        "RefreshFabricLayoutDependencyMap"
      ],
      "x-ms-enum": {
        "name": "HealthErrorDetailsSource",
        "modelAsString": true
      }
    },
    "HighAvailability": {
      "type": "string",
      "description": "Value indicating whether the VM is highly available",
      "enum": [
        "Unknown",
        "No",
        "Yes"
      ],
      "x-ms-enum": {
        "name": "HighAvailability",
        "modelAsString": true
      }
    },
    "HighAvailabilityValues": {
      "type": "string",
      "description": "Value indicating whether the VM is highly available",
      "enum": [
        "Unknown",
        "No",
        "Yes"
      ],
      "x-ms-enum": {
        "name": "HighAvailabilityValues",
        "modelAsString": true
      }
    },
    "HypervCluster": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HypervClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A cluster resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervClusterCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervCluster"
          },
          "x-cadl-name": "HypervCluster[]",
          "description": "The HypervCluster items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervCluster list operation."
    },
    "HypervClusterProperties": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking Hyper-V cluster creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the Hyper-V cluster.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V cluster."
        },
        "functionalLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the functional level of the Hyper-V cluster.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status of the Hyper-V cluster.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets Run as account ID of the Hyper-V cluster."
        },
        "hostFqdnList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets list of hosts (FQDN) currently being tracked by the cluster."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of Hyperv Cluster"
    },
    "HypervDisk": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string",
          "description": "Id of the disk.",
          "readOnly": true
        },
        "vhdId": {
          "type": "string",
          "description": "VHD Id of the disk.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "HypervHost": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HypervHostProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervHostCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervHost"
          },
          "x-cadl-name": "HypervHost[]",
          "description": "The HypervHost items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervHost list operation."
    },
    "HypervHostProperties": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking Hyper-V host creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the Hyper-V host.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V host."
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the Hyper-V host."
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the Hyper-V host.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of Hyperv Host"
    },
    "HypervJob": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A job resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervJob"
          },
          "x-cadl-name": "HypervJob[]",
          "description": "The HypervJob items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervJob list operation."
    },
    "HypervMachine": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HypervMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA",
          "readOnly": true
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervMachineCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervMachine"
          },
          "x-cadl-name": "HypervMachine[]",
          "description": "The HypervMachine items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervMachine list operation."
    },
    "HypervMachineProperties": {
      "type": "object",
      "properties": {
        "hostProcessorInfo": {
          "$ref": "#/definitions/ProcessorInfo",
          "description": "Gets the Information about Host Processor.",
          "readOnly": true
        },
        "instanceUuid": {
          "type": "string",
          "description": "On-premise Instance UUID of the machine.",
          "readOnly": true
        },
        "hostFqdn": {
          "type": "string",
          "description": "Host FQDN/IPAddress.",
          "readOnly": true
        },
        "hostId": {
          "type": "string",
          "description": "Host ARM ID.",
          "readOnly": true
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Generation of the virtual machine.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "VM version.",
          "readOnly": true
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "description": "Value indicating whether the VM is highly available.",
          "readOnly": true
        },
        "clusterFqdn": {
          "type": "string",
          "description": "Cluster FQDN/IPAddress.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "Cluster ARM ID.",
          "readOnly": true
        },
        "maxMemoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "Max memory of the virtual machine in MB.",
          "readOnly": true
        },
        "isDynamicMemoryEnabled": {
          "type": "boolean",
          "description": "Value indicating whether dynamic memory is enabled for the VM.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervDisk"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "HypervDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervNetworkAdapter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "HypervNetworkAdapter[]",
          "description": "Network adapters attached to the machine.",
          "readOnly": true
        },
        "managementServerType": {
          "type": "string",
          "description": "Management server type captured as a string representation of the\n           \n{Microsoft.Azure.FDS.WebRole.HyperVMachineBase.HyperVMachineBaseProperties.ManagementServerType}\nenumeration.",
          "readOnly": true
        },
        "secureBootTemplateId": {
          "type": "string",
          "description": "Gets or sets the SecureBootTemplateId setting of the VM.",
          "readOnly": true
        },
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether Secure boot is enabled for the VM.",
          "readOnly": true
        },
        "secureBootTemplate": {
          "type": "string",
          "description": "Gets or sets the SecureBootTemplateId setting of the VM.",
          "readOnly": true
        },
        "tpmEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether trusted platform module is enabled on\nthe VM.",
          "readOnly": true
        },
        "ksdEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether key storage device is enabled on the VM.",
          "readOnly": true
        },
        "shieldingRequested": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether shielding is enabled for the VM.",
          "readOnly": true
        },
        "dataProtectionRequested": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether data protection is requested for a VM.",
          "readOnly": true
        },
        "encryptStateAndVmMigrationTraffic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether encryption of state and migration\ntraffic is enabled for the VM.",
          "readOnly": true
        },
        "virtualizationBasedSecurityOptOut": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether VM virtualization based security is\nenabled for the VM.",
          "readOnly": true
        },
        "powerStatus": {
          "type": "string",
          "description": "Gets the Machine power status.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Gets the VM FQDN.",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "type": "string",
          "description": "Gets the Root location of the VM configuration file.",
          "readOnly": true
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOsDetails": {
          "$ref": "#/definitions/GuestOsDetails",
          "description": "Operating System Details extracted from the guest             bu executing script inside the guest VM. ",
          "readOnly": true
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of applications installed in the guest VM.",
          "readOnly": true
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered\n            or the\nerror while discovering guest details based discovery\n            of the\nmachine.",
          "readOnly": true
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "Whether Refresh Fabric Layout Guest Details has been completed once.\n         \n  Portal will show discovery in progress, if this value is true.",
          "readOnly": true
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not\n            for\nthe VM.",
          "readOnly": true
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection is last started.",
          "readOnly": true
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "description": "Gets or sets when dependency mapping collection was last disabled.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Errors for machine.",
          "readOnly": true
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/ApplicationDiscovery",
          "description": "Gets the data related to application discovery.",
          "readOnly": true
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DependencyMapDiscovery",
          "description": "Gets the data related to dependency map discovery.",
          "readOnly": true
        },
        "staticDiscovery": {
          "$ref": "#/definitions/StaticDiscovery",
          "description": "Gets the data related to static discovery.",
          "readOnly": true
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SqlDiscovery",
          "description": "Gets the data related to SQL discovery.",
          "readOnly": true
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "Gets the data related to Web application discovery.",
          "readOnly": true
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Gets the data related to Oracle discovery.",
          "readOnly": true
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Gets the data related to SpringBoot discovery.",
          "readOnly": true
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMb": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of AddressResource"
    },
    "HypervNetworkAdapter": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Network Id.",
          "readOnly": true
        },
        "subnetName": {
          "type": "string",
          "description": "Name of the VM subnet within the virtual network the NIC is attached to.",
          "readOnly": true
        },
        "staticIpAddress": {
          "type": "string",
          "description": "Static IP address.",
          "readOnly": true
        },
        "nicType": {
          "type": "string",
          "description": "Mac address of the NIC.",
          "readOnly": true
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets Mac address of the NIC."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets IP addresses for the machine.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets Network Name."
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets Type of the IP address."
        }
      },
      "description": "Second level object represented in responses as part of Machine REST resource."
    },
    "HypervOperationsStatusResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HypervClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A cluster resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervRunAsAccountResource"
          },
          "x-cadl-name": "HypervRunAsAccountResource[]",
          "description": "The HypervRunAsAccountResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervRunAsAccountResource list operation."
    },
    "HypervSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A HyperV SiteResource",
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HypervSiteCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervSite"
          },
          "x-cadl-name": "HypervSite[]",
          "description": "The HypervSite items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a HypervSite list operation."
    },
    "HypervSiteUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/HypervSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the HypervSite."
    },
    "HypervSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the HypervSite."
    },
    "HypervSiteUsage": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "hostCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of hosts part of the site."
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of clusters part of the site."
        }
      },
      "description": "Hyper-V site usage."
    },
    "HypervVmSoftwareInventory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative URL to get this VMWare machine.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the machine.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/MachineSoftwareInventoryProperties",
          "description": "Gets or sets software inventory properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "HyperV VM software inventory REST resource."
    },
    "IarmAsyncOperationStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Gets the status of the operation. ARM expects the terminal status to be one\nof\n            Succeeded/ Failed/ Canceled. All other values imply that the\noperation is still running.",
          "readOnly": true
        }
      },
      "description": "ARM async operation status response model."
    },
    "IisApplicationUnit": {
      "type": "object",
      "properties": {
        "applicationPoolName": {
          "type": "string",
          "description": "Gets or sets the path of the directory."
        },
        "managedPipelineMode": {
          "type": "string",
          "description": "Gets or sets the managed pipeline mode."
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Gets or sets the runtime version."
        },
        "enable32BitApiOnWin64": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether 32 bit applications are allowed to run\non 64 bit."
        },
        "path": {
          "$ref": "#/definitions/DirectoryPath",
          "description": "Gets or sets the path of the directory."
        },
        "directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectoryPath"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "DirectoryPath[]",
          "description": "Gets or sets the list of directories."
        }
      },
      "description": "Second-level object for identification of application units in a web site\nhosted on IIS."
    },
    "IisVirtualApplicationUnit": {
      "type": "object",
      "properties": {
        "isVirtualDirectory": {
          "type": "boolean",
          "description": "Gets a value indicating whether the application corresponds to a directory.",
          "readOnly": true
        },
        "path": {
          "$ref": "#/definitions/DirectoryPath",
          "description": "Gets or sets the path of the directory."
        },
        "directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectoryPath"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "DirectoryPath[]",
          "description": "Gets or sets the list of directories."
        }
      },
      "description": "Second-level object for identification of virtual applications in a web site\nhosted on IIS."
    },
    "IisWebApplicationProperties": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IisApplicationUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "IisApplicationUnit[]",
          "description": "Gets the list of application units for the web site.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets or sets the tags on IIS Web application."
        },
        "virtualApplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IisVirtualApplicationUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "IisVirtualApplicationUnit[]",
          "description": "Gets the list of application units for the web site.",
          "readOnly": true
        },
        "webServerId": {
          "type": "string",
          "description": "Gets the web server id.",
          "readOnly": true
        },
        "webServerName": {
          "type": "string",
          "description": "Gets the web server name.",
          "readOnly": true
        },
        "virtualPath": {
          "type": "string",
          "description": "Gets the virtual path of the application.",
          "readOnly": true
        },
        "physicalPath": {
          "type": "string",
          "description": "Gets the physical path of the application.",
          "readOnly": true
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontEndBinding"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "FrontEndBinding[]",
          "description": "Gets the front end bindings for the application.",
          "readOnly": true
        },
        "frameworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationFramework"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationFramework[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationConfigurationUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationConfigurationUnit[]",
          "description": "Gets the configuration.",
          "readOnly": true
        },
        "directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationDirectoryUnit"
          },
          "x-cadl-name": "WebApplicationDirectoryUnit[]",
          "description": "Gets the directories.",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web application properties."
    },
    "IisWebApplications": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IisWebApplicationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web application REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IisWebApplicationsCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IisWebApplications"
          },
          "x-cadl-name": "IisWebApplications[]",
          "description": "The IisWebApplications items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a IisWebApplications list operation."
    },
    "IisWebServerProperties": {
      "type": "object",
      "properties": {
        "configurationLocation": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of machines.",
          "readOnly": true
        },
        "webApplications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of web applications.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "serverFqdn": {
          "type": "string",
          "description": "Gets the server FQDN.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets the run as account id.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web server properties."
    },
    "IisWebServers": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IisWebServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web server REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IisWebServersCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IisWebServers"
          },
          "x-cadl-name": "IisWebServers[]",
          "description": "The IisWebServers items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a IisWebServers list operation."
    },
    "ImportDeleteImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/ImportSites/DeleteJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties",
          "description": "Gets or sets the delete import machines job properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "The delete import machines job web model."
    },
    "ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportDeleteImportMachinesJob"
          },
          "x-cadl-name": "ImportDeleteImportMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Delete import machines job collection."
    },
    "ImportJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImportJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportJobResource"
          },
          "x-cadl-name": "ImportJobResource[]",
          "description": "The ImportJobResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ImportJobResource list operation."
    },
    "ImportMachineProperties": {
      "type": "object",
      "properties": {
        "firmware": {
          "type": "string",
          "description": "Firmware of the machine.",
          "readOnly": true
        },
        "percentageCpuUtilization": {
          "type": "number",
          "format": "float",
          "description": "CPU utilization.",
          "readOnly": true
        },
        "percentageMemoryUtilization": {
          "type": "number",
          "format": "float",
          "description": "Memory utilization.",
          "readOnly": true
        },
        "numberOfDisks": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks.",
          "readOnly": true
        },
        "totalDiskReadOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Total disk read operations per second.",
          "readOnly": true
        },
        "totalDiskWriteOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Total disk write operations per second.",
          "readOnly": true
        },
        "totalDiskWriteThroughput": {
          "type": "number",
          "format": "float",
          "description": "Total disk write throughput.",
          "readOnly": true
        },
        "totalDiskReadThroughput": {
          "type": "number",
          "format": "float",
          "description": "Total disk read throughput.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address.",
          "readOnly": true
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "IP Addresses.",
          "readOnly": true
        },
        "machineId": {
          "type": "string",
          "description": "Machine ID.",
          "readOnly": true
        },
        "machineManagerId": {
          "type": "string",
          "description": "Machine manager ID.",
          "readOnly": true
        },
        "numberOfNetworkAdapters": {
          "type": "integer",
          "format": "int32",
          "description": "Number of network adapters.",
          "readOnly": true
        },
        "networkInThroughput": {
          "type": "number",
          "format": "float",
          "description": "Network in throughput.",
          "readOnly": true
        },
        "networkOutThroughput": {
          "type": "number",
          "format": "float",
          "description": "Network out throughput.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Server type.",
          "readOnly": true
        },
        "hypervisor": {
          "type": "string",
          "description": "Fabric type.",
          "readOnly": true
        },
        "hypervisorVersionNumber": {
          "type": "string",
          "description": "Hypervisor version number.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebRoleImportDisk"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "x-cadl-name": "WebRoleImportDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Server FQDN.",
          "readOnly": true
        },
        "storageInUseGb": {
          "type": "number",
          "format": "float",
          "description": "Total storage in use.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMb": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/WebRoleOperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for machine properties."
    },
    "ImportMachineResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        }
      },
      "description": "An machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImportMachineResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportMachineResource"
          },
          "x-cadl-name": "ImportMachineResource[]",
          "description": "The ImportMachineResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ImportMachineResource list operation."
    },
    "ImportMachinesJobEntityImportMachinesJobProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "blobSasUri": {
          "type": "string",
          "description": "blob sasUri"
        },
        "jobResult": {
          "$ref": "#/definitions/CosmosDBImportMachinesJobEntityImportMachinesJobPropertiesJobResult",
          "description": "job Result"
        },
        "numberOfMachinesImported": {
          "type": "integer",
          "format": "int32",
          "description": "number Of Machines Imported"
        },
        "blobCreationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "blob Creation TimeStamp"
        },
        "errorSummary": {
          "$ref": "#/definitions/ImportMachinesJobEntityImportMachinesJobPropertiesJobErrorSummary",
          "description": "error summary"
        }
      },
      "description": "ImportMachines JobProperties"
    },
    "ImportMachinesJobEntityImportMachinesJobPropertiesJobErrorSummary": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "errors list"
        },
        "errorCount": {
          "type": "integer",
          "format": "int32",
          "description": "error count"
        },
        "warningCount": {
          "type": "integer",
          "format": "int32",
          "description": "warning Count"
        }
      },
      "description": "Job Error Summary"
    },
    "ImportSiteResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportSitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        }
      },
      "description": "A ImportSiteResource",
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ImportSiteResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportSiteResource"
          },
          "x-cadl-name": "ImportSiteResource[]",
          "description": "The ImportSiteResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ImportSiteResource list operation."
    },
    "ImportSiteResourceUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ImportSiteResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ImportSiteResource."
    },
    "ImportSiteResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the ImportSiteResource."
    },
    "ImportSitesProperties": {
      "type": "object",
      "properties": {
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "masterSiteId": {
          "type": "string",
          "description": "Gets the Master Site this site is linked to.",
          "readOnly": true
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of ImportSiteResource"
    },
    "IpConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id value"
        },
        "privateIpAddress": {
          "type": "string",
          "description": "private Ip Address"
        },
        "linkIdentifier": {
          "type": "string",
          "description": "link identifier"
        },
        "groupId": {
          "type": "string",
          "description": "group id"
        },
        "memberName": {
          "type": "string",
          "description": "member name"
        }
      },
      "description": "ip configuration model"
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Gets operation status.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Gets operation start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Gets operation end time.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the display name of the Job.",
          "readOnly": true
        },
        "clientRequestId": {
          "type": "string",
          "description": "Gets the client request Id used in the operation execution context.",
          "readOnly": true
        },
        "activityId": {
          "type": "string",
          "description": "Gets the activity Id used in the operation execution context.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Job REST Resource."
    },
    "MachineMetadata": {
      "type": "object",
      "properties": {
        "machineArmId": {
          "type": "string",
          "description": "arm id of the machine."
        },
        "dependencyMapping": {
          "type": "string",
          "description": "value representing state of dependency mapping (enabled/disabled)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "machine tags"
        }
      },
      "description": "The properties of Machine MetaData",
      "required": [
        "machineArmId",
        "dependencyMapping",
        "tags"
      ]
    },
    "MachineMetadataList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineMetadata"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "MachineMetadata[]",
          "description": "The list of Machine MetaData."
        }
      },
      "description": "The list of Machine MetaData.",
      "required": [
        "value"
      ]
    },
    "MachineResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VmwareMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA",
          "readOnly": true
        }
      },
      "description": "An machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MachineResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineResource"
          },
          "x-cadl-name": "MachineResource[]",
          "description": "The MachineResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a MachineResource list operation."
    },
    "MachineResourceUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MachineResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the MachineResource."
    },
    "MachineResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMb": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the MachineResource."
    },
    "MachineSoftwareInventoryProperties": {
      "type": "object",
      "properties": {
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the machine entity.",
          "readOnly": true
        }
      },
      "description": "Class for machine software inventory properties."
    },
    "MasterSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MasterSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A MasterSite",
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MasterSiteCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterSite"
          },
          "x-cadl-name": "MasterSite[]",
          "description": "The MasterSite items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a MasterSite list operation."
    },
    "MasterSiteProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/V202007MasterSitePropertiesPublicNetworkAccess",
          "description": "Gets or sets the state of public network access."
        },
        "allowMultipleSites": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether multiple sites per site type are\nallowed."
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the sites that are a part of Master Site.\n            The key\nshould contain the Site ARM name."
        },
        "customerStorageAccountArmId": {
          "type": "string",
          "description": "Gets or sets a value for customer storage account ARM id."
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PendpointConnection"
          },
          "x-cadl-name": "PendpointConnection[]",
          "description": "Gets the private endpoint connections.",
          "readOnly": true
        },
        "nestedSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the nested sites under Master Site.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for site properties."
    },
    "MasterSiteUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/MasterSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the MasterSite."
    },
    "MasterSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/V202007MasterSitePropertiesPublicNetworkAccess",
          "description": "Gets or sets the state of public network access."
        },
        "allowMultipleSites": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether multiple sites per site type are\nallowed."
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the sites that are a part of Master Site.\n            The key\nshould contain the Site ARM name."
        },
        "customerStorageAccountArmId": {
          "type": "string",
          "description": "Gets or sets a value for customer storage account ARM id."
        }
      },
      "description": "The updatable properties of the MasterSite."
    },
    "MicrosoftAzureFDSWebRoleHealthErrorDetailsSource": {
      "type": "string",
      "description": "HealthError Details Source",
      "enum": [
        "RefreshFabricLayout",
        "RefreshFabricLayoutGuest",
        "RefreshFabricLayoutDependencyMap"
      ],
      "x-ms-enum": {
        "name": "MicrosoftAzureFDSWebRoleHealthErrorDetailsSource",
        "modelAsString": true
      }
    },
    "MicrosoftAzureMigratePrivateEndpointBodyPrivateEndpointConnectionProxyRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Relative URL to get this resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets the resource type.",
          "readOnly": true
        },
        "remotePrivateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointDetails",
          "description": "private endpoint details"
        }
      },
      "description": "Private Endpoint Connection Proxy Request Body"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsGroupConnectivityInformation": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "group Id"
        },
        "memberName": {
          "type": "string",
          "description": "member Name"
        },
        "customerVisibleFqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "customer Visible Fqdns"
        },
        "internalFqdn": {
          "type": "string",
          "description": "internal Fqdn"
        },
        "redirectMapId": {
          "type": "string",
          "description": "redirect Map Id"
        },
        "privateLinkServiceArmRegion": {
          "type": "string",
          "description": "privateLink ServiceArm Region"
        }
      },
      "description": "PrivateEndpoint ModelsGroup Connectivity Information"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsIpConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id value"
        },
        "privateIpAddress": {
          "type": "string",
          "description": "private Ip Address"
        },
        "linkIdentifier": {
          "type": "string",
          "description": "link Identifier"
        },
        "groupId": {
          "type": "string",
          "description": "group Id"
        },
        "memberName": {
          "type": "string",
          "description": "member Name"
        }
      },
      "description": "PrivateEndpoint Models Ip Configuration"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateEndpointDetails": {
      "type": "object",
      "properties": {
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnection[]",
          "description": "manual PrivateLink Service Connections"
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnection[]",
          "description": "private Link ServiceConnections"
        },
        "privateLinkServiceProxies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceProxy"
          },
          "x-cadl-name": "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceProxy[]",
          "description": "privateLink Service Proxies",
          "x-ms-identifiers": []
        },
        "connectionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsIpConfiguration"
          },
          "x-cadl-name": "MicrosoftAzureMigratePrivateEndpointModelsIpConfiguration[]",
          "description": "connection Details",
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "PrivateEndpoint Models PrivateEndpoint Details"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name values"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "group ids"
        },
        "requestMessage": {
          "type": "string",
          "description": "request Message"
        }
      },
      "description": "PrivateEndpoint Models Private LinkServiceConnection"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus",
          "description": "status value"
        },
        "description": {
          "type": "string",
          "description": "description value"
        },
        "actionsRequired": {
          "type": "string",
          "description": "actions Required"
        }
      },
      "description": "PrivateEndpoint Models PrivateLink ServiceConnection State"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus": {
      "type": "string",
      "description": "PrivateLinkServiceConnectionStateStatus",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus",
        "modelAsString": true
      }
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceProxy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id value"
        },
        "groupConnectivityInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsGroupConnectivityInformation"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "MicrosoftAzureMigratePrivateEndpointModelsGroupConnectivityInformation[]",
          "description": "group Connectivity Information"
        },
        "remotePrivateEndpointConnection": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsResourceId",
          "description": "remote PrivateEndpoint Connection"
        },
        "remotePrivateLinkServiceConnectionState": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionState",
          "description": "remote PrivateLink ServiceConnection State"
        }
      },
      "description": "PrivateEndpoint Models PrivateLink Service Proxy"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id value",
          "readOnly": true
        }
      },
      "description": "PrivateEndpoint Models ResourceId"
    },
    "NonceRequest": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        }
      },
      "description": "Nonce Request REST Resource."
    },
    "OperatingSystem": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "OperationStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the operation name.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status of the operation. ARM expects the terminal status to be one\nof\n            Succeeded/ Failed/ Canceled. All other values imply that the\noperation is still running.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Gets the error.",
          "readOnly": true
        }
      },
      "description": "Operation status REST resource."
    },
    "OperationStatusError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        }
      },
      "description": "Class for operation status errors."
    },
    "OracleDiscovery": {
      "type": "object",
      "properties": {
        "totalInstanceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered instances."
        },
        "totalDatabaseCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered databases."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's Oracle discovery.",
      "required": [
        "totalInstanceCount",
        "totalDatabaseCount",
        "discoveryScopeStatus"
      ]
    },
    "OtherDatabase": {
      "type": "object",
      "properties": {
        "databaseType": {
          "type": "string",
          "description": "Gets or sets DatabaseType of the OtherDatabase.",
          "readOnly": true
        },
        "instance": {
          "type": "string",
          "description": "Gets or sets Instance of the OtherDatabase.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the OtherDatabase.",
          "readOnly": true
        }
      },
      "description": "OtherDatabase in the guest virtual machine."
    },
    "PagedImportDeleteImportMachinesJobDeleteImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection[]",
          "description": "The ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "Paged collection of ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection items"
    },
    "PagedV20200201ExportImportedMachinesJobExportImportedMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection[]",
          "description": "The V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "Paged collection of V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection items"
    },
    "PagedV20200201ImportMachinesJobImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ImportMachinesJobImportMachinesJobCollection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "V20200201ImportMachinesJobImportMachinesJobCollection[]",
          "description": "The V20200201ImportMachinesJobImportMachinesJobCollection items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "Paged collection of V20200201ImportMachinesJobImportMachinesJobCollection items"
    },
    "PendpointConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Relative URL to get this Sites.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets the resource type.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "Gets the tag for optimistic concurrency control.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionPropertiesV2",
          "description": "Gets the properties of the object.",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      },
      "description": "REST model used to encapsulate the user visible state of a PrivateEndpoint."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionPropertiesV2",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        }
      },
      "description": "REST model used to encapsulate Private Link properties for tracked resources.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-cadl-name": "PrivateEndpointConnection[]",
          "description": "The PrivateEndpointConnection items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a PrivateEndpointConnection list operation."
    },
    "PrivateEndpointConnectionPropertiesV2": {
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of group ids",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/ResourceId",
          "description": "private endpoints",
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "private endpoints connection state"
        }
      },
      "description": "PrivateEndpointConnectionProperties V2"
    },
    "PrivateEndpointConnectionProxy": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateEndpointDetails",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A vcenter resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionProxyCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionProxy"
          },
          "x-cadl-name": "PrivateEndpointConnectionProxy[]",
          "description": "The PrivateEndpointConnectionProxy items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a PrivateEndpointConnectionProxy list operation."
    },
    "PrivateEndpointDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "idvalue"
        },
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "PrivateLinkServiceConnection[]",
          "description": "PrivateLinkServiceConnection array"
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "PrivateLinkServiceConnection[]",
          "description": "PrivateLinkServiceConnection array"
        },
        "privateLinkServiceProxies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceProxy"
          },
          "x-cadl-name": "PrivateLinkServiceProxy[]",
          "description": "PrivateLinkServiceProxy array"
        },
        "connectionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpConfiguration"
          },
          "x-cadl-name": "IpConfiguration[]",
          "description": "IpConfiguration array"
        }
      },
      "description": "priate endpoint details"
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "REST model used to encapsulate Private Link properties for tracked resources.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "x-cadl-name": "PrivateLinkResource[]",
          "description": "The PrivateLinkResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a PrivateLinkResource list operation."
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "required members"
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "required zone names"
        },
        "groupId": {
          "type": "string",
          "description": "group id"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "private link resource properties model"
    },
    "PrivateLinkServiceConnection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name value"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "group ids"
        },
        "requestMessage": {
          "type": "string",
          "description": "request message"
        }
      },
      "description": "private link service connection model"
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStateStatus",
          "description": "state status"
        },
        "description": {
          "type": "string",
          "description": "description string"
        },
        "actionsRequired": {
          "type": "string",
          "description": "actions required"
        }
      },
      "description": "Service Connection State"
    },
    "PrivateLinkServiceConnectionStateStatus": {
      "type": "string",
      "description": "PrivateLinkServiceConnectionState",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStateStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkServiceProxy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id value"
        },
        "groupConnectivityInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupConnectivityInformation"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "GroupConnectivityInformation[]",
          "description": "group connectivity information"
        },
        "remotePrivateEndpointConnection": {
          "$ref": "#/definitions/ResourceId",
          "description": "remote private endpoint connection"
        },
        "remotePrivateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "remote private link service connection state"
        }
      },
      "description": "private link service proxy model"
    },
    "ProcessorInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name\\model of a processor."
        },
        "numberOfSockets": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of sockets."
        },
        "numberOfCoresPerSocket": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the total number of cores in a socket."
        }
      },
      "description": "Processor Information."
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ProxySiteRefreshBody": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the appliance name of the agent in the site."
        }
      },
      "description": "Request body for Proxy site refresh action."
    },
    "ResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id name",
          "readOnly": true
        }
      },
      "description": "PrivateEndpointModelsResourceId"
    },
    "RunAsAccountProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the run as account.",
          "readOnly": true
        },
        "credentialType": {
          "type": "string",
          "description": "Gets the credential type of the run as account.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Timestamp marking run as account creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Timestamp marking last updated on the run as account.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name of the run as account.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for run as account properties."
    },
    "RunAsAccountRunAsAccountProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the run as account.",
          "readOnly": true
        },
        "credentialType": {
          "type": "string",
          "description": "Gets the credential type of the run as account.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Timestamp marking run as account creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Timestamp marking last updated on the run as account.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name of the run as account.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for run as account properties."
    },
    "SQLDiscoveryScopeStatus": {
      "type": "string",
      "description": "SQLDiscoveryScope Status",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "SQLDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "SQLDiscoverySqlMetadataDiscoveryPipe": {
      "type": "string",
      "description": "SQLDiscovery SqlMetadataDiscoveryPipe",
      "enum": [
        "Unknown",
        "VMware",
        "PowerShell",
        "SSH",
        "CIM",
        "Other"
      ],
      "x-ms-enum": {
        "name": "SQLDiscoverySqlMetadataDiscoveryPipe",
        "modelAsString": true
      }
    },
    "SasUriResponse": {
      "type": "object",
      "properties": {
        "jobArmId": {
          "type": "string",
          "description": "Gets or sets the job ARM ID."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the SAS URI."
        }
      },
      "description": "Import URI response class."
    },
    "ServerDisk": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets Id of the disk."
        },
        "generatedId": {
          "type": "string",
          "description": "Gets or sets generated Id of the disk."
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Server disk details."
    },
    "ServerJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerJobResource"
          },
          "x-cadl-name": "ServerJobResource[]",
          "description": "The ServerJobResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ServerJobResource list operation."
    },
    "ServerMachineResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA",
          "readOnly": true
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerMachineResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerMachineResource"
          },
          "x-cadl-name": "ServerMachineResource[]",
          "description": "The ServerMachineResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ServerMachineResource list operation."
    },
    "ServerNetworkAdapter": {
      "type": "object",
      "properties": {
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets Mac address of the NIC."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets IP addresses for the machine.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets Network Name."
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets Type of the IP address."
        }
      },
      "description": "Second level object represented in responses as part of Machine REST resource."
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.\n            For server entity hydrated\nFQDN is set as display name\n            as the server id and server name are\nsame.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the server."
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerNetworkAdapter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ServerNetworkAdapter[]",
          "description": "Gets or sets the network adapters of the server."
        },
        "hydratedFqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN of machine which can be changed."
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerDisk"
          },
          "x-cadl-name": "ServerDisk[]",
          "description": "Gets or sets the disk details of server."
        },
        "validationRequired": {
          "type": "string",
          "description": "Gets or sets the validation required for the machine."
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOsDetails": {
          "$ref": "#/definitions/GuestOsDetails",
          "description": "Operating System Details extracted from the guest\n            bu executing\nscript inside the guest VM.",
          "readOnly": true
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of applications installed in the guest VM.",
          "readOnly": true
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered\n            or the\nerror while discovering guest details based discovery\n            of the\nmachine.",
          "readOnly": true
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "Whether Refresh Fabric Layout Guest Details has been completed once.\n         \n  Portal will show discovery in progress, if this value is true.",
          "readOnly": true
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not\n            for\nthe VM.",
          "readOnly": true
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection is last started.",
          "readOnly": true
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "description": "Gets or sets when dependency mapping collection was last disabled.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Errors for machine.",
          "readOnly": true
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/ApplicationDiscovery",
          "description": "Gets the data related to application discovery.",
          "readOnly": true
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DependencyMapDiscovery",
          "description": "Gets the data related to dependency map discovery.",
          "readOnly": true
        },
        "staticDiscovery": {
          "$ref": "#/definitions/StaticDiscovery",
          "description": "Gets the data related to static discovery.",
          "readOnly": true
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SqlDiscovery",
          "description": "Gets the data related to SQL discovery.",
          "readOnly": true
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "Gets the data related to Web application discovery.",
          "readOnly": true
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Gets the data related to Oracle discovery.",
          "readOnly": true
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Gets the data related to SpringBoot discovery.",
          "readOnly": true
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the server resource."
        }
      },
      "description": "Server REST resource."
    },
    "ServerRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A run as account resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerRunAsAccountResource"
          },
          "x-cadl-name": "ServerRunAsAccountResource[]",
          "description": "The ServerRunAsAccountResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ServerRunAsAccountResource list operation."
    },
    "ServerSiteResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        }
      },
      "description": "A ServerSiteResource",
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServerSiteResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerSiteResource"
          },
          "x-cadl-name": "ServerSiteResource[]",
          "description": "The ServerSiteResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a ServerSiteResource list operation."
    },
    "ServerSiteResourceUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ServerSiteResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ServerSiteResource."
    },
    "ServerSiteResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the ServerSiteResource."
    },
    "ServerSiteUsage": {
      "type": "object",
      "properties": {
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "serverCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of servers part of the site."
        }
      },
      "description": "Server site usage."
    },
    "ServerSiteUsageResponse": {
      "type": "object",
      "properties": {
        "runAsAccounts": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "serverCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of servers part of the site."
        }
      },
      "description": "The properties of ServerSiteUsageResponse.",
      "required": [
        "runAsAccounts",
        "serverCount"
      ]
    },
    "ServerSoftwareInventory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative URL to get this Server machine.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the machine.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/MachineSoftwareInventoryProperties",
          "description": "Gets or sets software inventory properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Server machine software inventory REST resource."
    },
    "SharePointServer": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the SharePointServer.",
          "readOnly": true
        },
        "isEnterprise": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the SharePointServer is Enterprise.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the SharePointServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SharePointServer.",
          "readOnly": true
        }
      },
      "description": "SharePointServer in the guest virtual machine."
    },
    "SiteAgentProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the ID of the agent.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the agent.",
          "readOnly": true
        },
        "lastHeartBeatUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the last heartbeat time of the agent in UTC.",
          "readOnly": true
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Gets or sets the key vault URI."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Gets or sets the key vault ARM Id."
        }
      },
      "description": "Class for site agent properties."
    },
    "SiteApplianceProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": " Gets or sets the service principal identity details used by agent for  communication              to the service.  "
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        }
      },
      "description": "Class for site appliance properties."
    },
    "SiteErrorSummary": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Appliance Name."
        },
        "discoveryScopeErrorSummaries": {
          "$ref": "#/definitions/DiscoveryScopeErrorSummary",
          "description": "Gets the error message."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to fetch more models."
        }
      },
      "description": "The properties of ServerSiteResource.",
      "required": [
        "applianceName",
        "discoveryScopeErrorSummaries"
      ]
    },
    "SiteHealthSummary": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name.",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the summary message.",
          "readOnly": true
        },
        "errorId": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the error Id.",
          "readOnly": true
        },
        "errorCode": {
          "type": "string",
          "description": "Gets the error code.",
          "readOnly": true
        },
        "affectedObjectsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the count of affected objects."
        },
        "hitCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the hit count of the error."
        },
        "severity": {
          "type": "string",
          "description": "Gets the severity of error.",
          "readOnly": true
        },
        "remediationGuidance": {
          "type": "string",
          "description": "Gets the remediation guidance.",
          "readOnly": true
        },
        "affectedResourceType": {
          "type": "string",
          "description": "Gets the affected resource type.",
          "readOnly": true
        },
        "affectedResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the affected resources."
        },
        "fabricLayoutUpdateSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteHealthSummaryFabricLayoutUpdateSourcesItem"
          },
          "x-cadl-name": "SiteHealthSummaryFabricLayoutUpdateSourcesItem[]",
          "description": "Gets or sets sources of the exception."
        }
      },
      "description": "The properties of ServerSiteResource."
    },
    "SiteHealthSummaryCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteHealthSummary"
          },
          "x-ms-identifiers": [
            "applianceName"
          ],
          "x-cadl-name": "SiteHealthSummary[]",
          "description": "Gets the list of SiteHealthSummary.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of SiteHealthSummary."
    },
    "SiteHealthSummaryFabricLayoutUpdateSourcesItem": {
      "type": "string",
      "description": "SiteHealthSummary FabricLayout UpdateSources"
    },
    "SiteProperties": {
      "type": "object",
      "properties": {
        "masterSiteId": {
          "type": "string",
          "description": "Gets the Master Site this site is linked to.",
          "readOnly": true
        },
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "SiteSpnProperties": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Gets or sets the tenant Id for the service principal with which the\non-premise\n            management/data plane components would communicate with\nour Azure services."
        },
        "applicationId": {
          "type": "string",
          "description": "Gets or sets the application/client Id for the service principal with which\nthe\n            on-premise management/data plane components would communicate\nwith our Azure \n            services."
        },
        "objectId": {
          "type": "string",
          "description": "Gets or sets the object Id of the service principal with which the on-premise\n\n           management/data plane components would communicate with our Azure\nservices."
        },
        "audience": {
          "type": "string",
          "description": "Gets or sets the intended audience for the service principal."
        },
        "aadAuthority": {
          "type": "string",
          "description": "Gets or sets the AAD Authority URL which was used to request the token for\nthe\n            service principal."
        },
        "rawCertData": {
          "type": "string",
          "description": "Gets or sets the raw certificate data for building certificate expiry flows."
        }
      },
      "description": "Class for site properties."
    },
    "SiteUsageResponse": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "hostCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of hosts part of the site."
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of clusters part of the site."
        }
      },
      "description": "Hyper-V site usage.",
      "required": [
        "machineCount",
        "runAsAccountCount",
        "hostCount",
        "clusterCount"
      ]
    },
    "SitesProperties": {
      "type": "object",
      "properties": {
        "masterSiteId": {
          "type": "string",
          "description": "Gets the Master Site this site is linked to.",
          "readOnly": true
        },
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "SpringBootDiscovery": {
      "type": "object",
      "properties": {
        "totalInstanceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered instances."
        },
        "totalApplicationCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered applications."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's spring boot discovery.",
      "required": [
        "totalInstanceCount",
        "totalApplicationCount",
        "discoveryScopeStatus"
      ]
    },
    "SqlAvailabilityGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlAvailabilityGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Class representing the web model of SQL Availability Group.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlAvailabilityGroupCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlAvailabilityGroup"
          },
          "x-cadl-name": "SqlAvailabilityGroup[]",
          "description": "The SqlAvailabilityGroup items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlAvailabilityGroup list operation."
    },
    "SqlAvailabilityGroupProperties": {
      "type": "object",
      "properties": {
        "availabilityGroupName": {
          "type": "string",
          "description": "Gets or sets the SQL Availability Group Name."
        },
        "availabilityGroupType": {
          "$ref": "#/definitions/SqlAvailabilityGroupPropertiesAvailabilityGroupType",
          "description": "Gets or sets the type of availability group.             Currently there are two types of AGs Traditional and Distributed. "
        },
        "isMultiSubNet": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether AG is multi subnet or not."
        },
        "clusterName": {
          "type": "string",
          "description": "Gets or sets the Cluster name where AG is hosted."
        },
        "availabilityReplicas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SqlAvailabilityGroupSqlAvailabilityReplicaProperties[]",
          "description": "Gets the list of availability replica properties which together forms this availability group.",
          "readOnly": true
        },
        "parentReplicaOverviewList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlAvailabilityReplicaOverview"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SqlAvailabilityReplicaOverview[]",
          "description": "Gets the parent availability replica overview if any.\n            This would be\nset with details of parent AG and AR for cases where this availability group is\na part of a distributed AG.\n            Currently, we do not populate this\nsince discovery and linking of DAG(Distributed Availability Group) is not\nimplemented.",
          "readOnly": true
        },
        "isPartOfDistributedAvailabilityGroup": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this Availability group is part of a\ndistributed AG."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the entity is deleted."
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets or sets the marking machine creation."
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets or sets the timestamp marking last updated on the machine."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for SQL Server availability group properties."
    },
    "SqlAvailabilityGroupPropertiesAvailabilityGroupType": {
      "type": "string",
      "description": "AvailabilityGroupType",
      "enum": [
        "Unknown",
        "Traditional",
        "Distributed"
      ],
      "x-ms-enum": {
        "name": "SqlAvailabilityGroupPropertiesAvailabilityGroupType",
        "modelAsString": true
      }
    },
    "SqlAvailabilityGroupReplicaInfo": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "Gets or sets the name of the cluster on which this replica is hosted."
        },
        "availabilityGroupName": {
          "type": "string",
          "description": "Gets or sets the name of the availability replica."
        },
        "availabilityGroupArmId": {
          "type": "string",
          "description": "Gets or sets the AG ARM ID which are part of this Replica."
        }
      },
      "description": "Class which represents the SQL availability replica properties of type AG."
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaProperties": {
      "type": "object",
      "properties": {
        "availabilityReplicaName": {
          "type": "string",
          "description": "Gets or sets the SQL Availability Replica Name."
        },
        "availabilityReplicaId": {
          "type": "string",
          "description": "Gets or sets the SQL Availability Replica Id."
        },
        "replicaType": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType",
          "description": "Gets or sets the replica type of the availability group."
        },
        "replicaState": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState",
          "description": "Gets or sets the state of the availability replica."
        },
        "replicaSyncStatus": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus",
          "description": "Gets or sets the synchronization status of the replica."
        },
        "replicaCommitMode": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode",
          "description": "Gets or sets the commit mode of the replica."
        },
        "replicaReadMode": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode",
          "description": "Gets or sets the read mode of the replica."
        },
        "replicaSeedMode": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode",
          "description": "Gets or sets the seed mode of the replica."
        },
        "sqlDatabaseReplicaInfo": {
          "$ref": "#/definitions/SqlAvailabilityGroupSqlDatabaseReplicaInfo",
          "description": "Gets or sets the Availability Replica object if Replica is of type database.\nThis is null in case Replica is\n            of type AG. This is to be populated\nin case of normal AG."
        },
        "sqlAvailabilityGroupReplicaInfo": {
          "$ref": "#/definitions/SqlAvailabilityGroupReplicaInfo",
          "description": "Gets or sets the Availability Replica object if Replica is of type AG. This is\nnull in case Replica is\n            of type database. This is to be populated\nin case AG is of type DAG."
        }
      },
      "description": "Class for SQL Server availability replica properties."
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode": {
      "type": "string",
      "description": "ReplicaCommitMode"
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode": {
      "type": "string",
      "description": "SqlAvailabilityGroup ReplicaReadMode"
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode": {
      "type": "string",
      "description": "ReplicaSeedMode"
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState": {
      "type": "string",
      "description": "ReplicaState"
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus": {
      "type": "string",
      "description": "ReplicaSyncStatus"
    },
    "SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType": {
      "type": "string",
      "description": "SqlAvailabilityGroup ReplicaType"
    },
    "SqlAvailabilityGroupSqlDatabaseReplicaInfo": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "Gets or sets the host name of the availability replica."
        },
        "sqlServerName": {
          "type": "string",
          "description": "Gets or sets the SQL Server name of the availability replica."
        },
        "sqlServerArmId": {
          "type": "string",
          "description": "Gets or sets the SQL Server name of the availability replica."
        }
      },
      "description": "Class which represents the SQL availability replica properties of type\ndatabases."
    },
    "SqlAvailabilityReplicaOverview": {
      "type": "object",
      "properties": {
        "replicaState": {
          "$ref": "#/definitions/SqlAvailabilityReplicaOverviewReplicaState",
          "description": "Gets or sets the state of the availability replica."
        },
        "availabilityReplicaId": {
          "type": "string",
          "description": "Gets or sets the SQL Availability Replica Id within the Availability Group this\ndatabase is a part of."
        },
        "availabilityGroupArmId": {
          "type": "string",
          "description": "Gets or sets the Availability Group Id in which this database participates if\nany. It would be set if the database has\n{Microsoft.Azure.FDS.CosmosDB.SqlDatabaseEntity.IsDatabaseHighlyAvailable} has\na value \"true\"."
        },
        "availabilityGroupName": {
          "type": "string",
          "description": "Gets or sets the SQL Availability group name."
        }
      },
      "description": "Web model for SQL replica overview."
    },
    "SqlAvailabilityReplicaOverviewReplicaState": {
      "type": "string",
      "description": "SqlAvailabilityReplica State"
    },
    "SqlDatabase": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDatabaseProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Class representing the web model of SQL Database.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlDatabaseCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlDatabase"
          },
          "x-cadl-name": "SqlDatabase[]",
          "description": "The SqlDatabase items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlDatabase list operation."
    },
    "SqlDatabaseProperties": {
      "type": "object",
      "properties": {
        "parentReplicaOverview": {
          "$ref": "#/definitions/SqlAvailabilityReplicaOverview",
          "description": "Gets or sets the Replica overview."
        },
        "isDatabaseHighlyAvailable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this database is a part of an HA setup."
        },
        "fileMetadataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileMetaData"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "FileMetaData[]",
          "description": "Gets the file metadata list.",
          "readOnly": true
        },
        "hostname": {
          "type": "string",
          "description": "Gets or sets the hostname."
        },
        "sqlServerName": {
          "type": "string",
          "description": "Gets or sets the SQL Server Id in which the database resides."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status."
        },
        "sizeMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets the size in Mb."
        },
        "databaseName": {
          "type": "string",
          "description": "Gets or sets the SQL database name."
        },
        "sqlServerArmId": {
          "type": "string",
          "description": "Gets or sets the SQL Server ARM Id in which the database resides."
        },
        "compatibilityLevel": {
          "type": "string",
          "description": "Gets or sets the database compatibility level."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the entity is deleted."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "x-cadl-name": "Errors[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets or sets the marking machine creation."
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets or sets the timestamp marking last updated on the machine."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for SQL Server database properties."
    },
    "SqlDiscovery": {
      "type": "object",
      "properties": {
        "successfullyDiscoveredServerCount": {
          "type": "integer",
          "format": "int32",
          "description": " successfully Discovered ServerCount"
        },
        "totalServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "total Server Count"
        },
        "sqlMetadataHydratedRunAsAccountId": {
          "type": "string",
          "description": "sql Metadata Hydrated RunAsAccountId"
        },
        "sqlMetadataDiscoveryPipe": {
          "$ref": "#/definitions/SQLDiscoverySqlMetadataDiscoveryPipe",
          "description": "sql Metadata DiscoveryPipe"
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/SQLDiscoveryScopeStatus",
          "description": "discovery Scope Status"
        }
      },
      "description": "Contains data related SQL discovery."
    },
    "SqlDiscoverySiteDataSourceProperties": {
      "type": "object",
      "properties": {
        "discoverySiteId": {
          "type": "string",
          "description": "Gets or sets the discovery site Id."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Discovery site data source properties class."
    },
    "SqlDiscoverySiteDataSourceResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDiscoverySiteDataSourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A SQL discovery site data source resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlDiscoverySiteDataSourceResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlDiscoverySiteDataSourceResource"
          },
          "x-cadl-name": "SqlDiscoverySiteDataSourceResource[]",
          "description": "The SqlDiscoverySiteDataSourceResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlDiscoverySiteDataSourceResource list operation."
    },
    "SqlJob": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Class representing the web model of SQL Database.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlJob"
          },
          "x-cadl-name": "SqlJob[]",
          "description": "The SqlJob items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlJob list operation."
    },
    "SqlMachineOverview": {
      "type": "object",
      "properties": {
        "machineArmId": {
          "type": "string",
          "description": "Gets or sets SQL machine ARM ID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets SQL machine display name."
        },
        "fciRole": {
          "$ref": "#/definitions/SqlMachineOverviewFciRole",
          "description": "Gets or sets SQL machine FCI role."
        }
      },
      "description": "Gets or sets SQL machine overview data."
    },
    "SqlMachineOverviewFciRole": {
      "type": "string",
      "description": "sql fci role ",
      "enum": [
        "Unknown",
        "NotApplicable",
        "ActiveNode",
        "PossibleOwnerNode"
      ],
      "x-ms-enum": {
        "name": "SqlMachineOverviewFciRole",
        "modelAsString": true
      }
    },
    "SqlRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A runasaccount resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlRunAsAccountResource"
          },
          "x-cadl-name": "SqlRunAsAccountResource[]",
          "description": "The SqlRunAsAccountResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlRunAsAccountResource list operation."
    },
    "SqlServer": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Class representing the web model of SQL Server.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlServerApplication": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the SQLServer.",
          "readOnly": true
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets Edition of the SQLServer.",
          "readOnly": true
        },
        "servicePack": {
          "type": "string",
          "description": "Gets or sets ServicePack of the SQLServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SQLServer.",
          "readOnly": true
        },
        "clustered": {
          "type": "string",
          "description": "Gets or sets Clustered of the SQLServer.",
          "readOnly": true
        },
        "clusterName": {
          "type": "string",
          "description": "Gets or sets ClusterName of the SQLServer.",
          "readOnly": true
        },
        "dnsHostName": {
          "type": "string",
          "description": "Gets or sets the DNS host name of SQLServer.",
          "readOnly": true
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the port of the SQLServer.",
          "readOnly": true
        },
        "commaSeparatedIps": {
          "type": "string",
          "description": "Gets or sets the comma separated IPs of the SQLServer.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status.",
          "readOnly": true
        },
        "isNamedPipeEnabled": {
          "type": "boolean",
          "description": "Gets or sets the value which reflects if Named Pipe is enabled or not.",
          "readOnly": true
        },
        "isTcpIpEnabled": {
          "type": "boolean",
          "description": "Gets or sets the value which reflects if Named Pipe is enabled or not.",
          "readOnly": true
        },
        "namedPipeName": {
          "type": "string",
          "description": "Gets the status.",
          "readOnly": true
        }
      },
      "description": "SQLServer in the guest virtual machine."
    },
    "SqlServerCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlServer"
          },
          "x-cadl-name": "SqlServer[]",
          "description": "The SqlServer items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlServer list operation."
    },
    "SqlServerProperties": {
      "type": "object",
      "properties": {
        "machineOverviewList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlMachineOverview"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SqlMachineOverview[]",
          "description": "Gets the Machine Overview properties of all machines on which the SQL server is deployed.",
          "readOnly": true
        },
        "numberOfAgDatabases": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of databases part of availability group on this SQL instance."
        },
        "fciProperties": {
          "$ref": "#/definitions/FciProperties",
          "description": "Gets or sets the FCI properties if the instance is an FCI instance. This would be populated if IsClustered is true."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the SQL server version."
        },
        "numberOfUserDatabases": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets total number of users databases."
        },
        "sumOfUserDatabasesSizeInMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets total size of all user databases."
        },
        "tempDbSizeInMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets size of temp database."
        },
        "maxServerMemoryInUseInMb": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets maximum server memory in use."
        },
        "visibleOnlineCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the SQL server number of cores that have visible online status."
        },
        "numOfLogins": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets number of logins."
        },
        "physicalCpuCount": {
          "type": "number",
          "format": "float",
          "description": "Gets or sets physical CPU count."
        },
        "logicalCpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets logical CPU count."
        },
        "engineEdition": {
          "type": "string",
          "description": "Gets or sets the SQL server engine edition."
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets the SQL server edition."
        },
        "isHighAvailabilityEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether High Availability is enabled or not."
        },
        "isClustered": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether failover cluster is configured or not."
        },
        "hyperthreadRatio": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Hyper thread ratio."
        },
        "sqlStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the SQL start time."
        },
        "machineArmIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of machine ARM Ids on which the SQL server is deployed.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the SQL server."
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets or sets the hydrated run as account ID of the SQL server."
        },
        "hostName": {
          "type": "string",
          "description": "Gets or sets hostname."
        },
        "sqlServerName": {
          "type": "string",
          "description": "Gets or sets the SQL server instance name."
        },
        "portNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Preferred Port Number."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "x-cadl-name": "Errors[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the entity is deleted."
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets or sets the marking machine creation."
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets or sets the timestamp marking last updated on the machine."
        },
        "status": {
          "$ref": "#/definitions/SqlServerStatus",
          "description": "Gets or sets the powered on status."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for SQL Server properties."
    },
    "SqlServerStatus": {
      "type": "string",
      "description": "sql server statsu",
      "enum": [
        "Unknown",
        "ContinuePending",
        "Paused",
        "PausePending",
        "Running",
        "StartPending",
        "Stopped",
        "StopPending"
      ],
      "x-ms-enum": {
        "name": "SqlServerStatus",
        "modelAsString": true
      }
    },
    "SqlSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "SQL site web model.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlSiteCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlSite"
          },
          "x-cadl-name": "SqlSite[]",
          "description": "The SqlSite items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a SqlSite list operation."
    },
    "SqlSiteProperties": {
      "type": "object",
      "properties": {
        "siteAppliancePropertiesCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteApplianceProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SiteApplianceProperties[]",
          "description": "Gets or sets the appliance details used by service to communicate\n           \nto the appliance."
        },
        "discoveryScenario": {
          "$ref": "#/definitions/SqlSitePropertiesDiscoveryScenario",
          "description": "Gets or sets the discovery scenario."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for SQL site properties."
    },
    "SqlSitePropertiesDiscoveryScenario": {
      "type": "string",
      "description": "SqlSiteProperties DiscoveryScenario"
    },
    "SqlSiteRefreshBody": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the appliance name of the agent in the site."
        }
      },
      "description": "SQL site refresh."
    },
    "SqlSiteUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the SqlSite."
    },
    "SqlSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "siteAppliancePropertiesCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteApplianceProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SiteApplianceProperties[]",
          "description": "Gets or sets the appliance details used by service to communicate\n           \nto the appliance."
        },
        "discoveryScenario": {
          "$ref": "#/definitions/SqlSitePropertiesDiscoveryScenario",
          "description": "Gets or sets the discovery scenario."
        }
      },
      "description": "The updatable properties of the SqlSite."
    },
    "SqlSiteUsage": {
      "type": "object",
      "properties": {
        "serverCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of servers discovered in the site."
        },
        "databaseCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of databases discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        }
      },
      "description": "SQL site usage."
    },
    "StaticDiscovery": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/StaticDiscoveryScopeStatus",
          "description": "Gets discovery scope status.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related static data discovery scope."
    },
    "StaticDiscoveryScopeStatus": {
      "type": "string",
      "description": "Static DiscoveryScopeStatus",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "StaticDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "SystemCenter": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the SystemCenter.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the SystemCenter.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SystemCenter.",
          "readOnly": true
        }
      },
      "description": "SystemCenter in the guest virtual machine."
    },
    "TomcatEngineUnit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the engine."
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TomcatHostUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TomcatHostUnit[]",
          "description": "Gets or sets the hosts defined for the engine."
        }
      },
      "description": "Tomcat engine data."
    },
    "TomcatHostUnit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the host."
        },
        "appBasePath": {
          "type": "string",
          "description": "Gets or sets the app base path for the host."
        },
        "appBase": {
          "type": "string",
          "description": "Gets or sets the app base value configured for the host."
        }
      },
      "description": "Tomcat host data."
    },
    "TomcatServiceUnit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the service."
        },
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ConnectorUnit[]",
          "description": "Gets or sets the connectors defined for the service component."
        },
        "engine": {
          "$ref": "#/definitions/TomcatEngineUnit",
          "description": "Gets or sets the engine defined for the service component."
        }
      },
      "description": "Tomcat service data."
    },
    "TomcatWebApplicationProperties": {
      "type": "object",
      "properties": {
        "webServerId": {
          "type": "string",
          "description": "Gets the web server id.",
          "readOnly": true
        },
        "webServerName": {
          "type": "string",
          "description": "Gets the web server name.",
          "readOnly": true
        },
        "virtualPath": {
          "type": "string",
          "description": "Gets the virtual path of the application.",
          "readOnly": true
        },
        "physicalPath": {
          "type": "string",
          "description": "Gets the physical path of the application.",
          "readOnly": true
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontEndBinding"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "FrontEndBinding[]",
          "description": "Gets the front end bindings for the application.",
          "readOnly": true
        },
        "frameworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationFramework"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationFramework[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationConfigurationUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationConfigurationUnit[]",
          "description": "Gets the configuration.",
          "readOnly": true
        },
        "directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationDirectoryUnit"
          },
          "x-cadl-name": "WebApplicationDirectoryUnit[]",
          "description": "Gets the directories.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web application properties."
    },
    "TomcatWebApplications": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TomcatWebApplicationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web application REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TomcatWebApplicationsCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TomcatWebApplications"
          },
          "x-cadl-name": "TomcatWebApplications[]",
          "description": "The TomcatWebApplications items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a TomcatWebApplications list operation."
    },
    "TomcatWebServerProperties": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TomcatServiceUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TomcatServiceUnit[]",
          "description": "Gets or sets the services defined in the server."
        },
        "configurationLocation": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of machines.",
          "readOnly": true
        },
        "webApplications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of web applications.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "serverFqdn": {
          "type": "string",
          "description": "Gets the server FQDN.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets the run as account id.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web server properties."
    },
    "TomcatWebServers": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TomcatWebServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web server REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TomcatWebServersCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TomcatWebServers"
          },
          "x-cadl-name": "TomcatWebServers[]",
          "description": "The TomcatWebServers items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a TomcatWebServers list operation."
    },
    "UpdateMachineDepMapStatus": {
      "type": "object",
      "properties": {
        "machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateMachineDepMapStatusDependencyMapMachineInput"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "UpdateMachineDepMapStatusDependencyMapMachineInput[]",
          "description": "Gets or sets the machine collection."
        }
      },
      "description": "Defines class that represents input to enable or disable DMP on machine\n      \n      for cosmos entity operation."
    },
    "UpdateMachineDepMapStatusDependencyMapMachineInput": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Gets or sets the ARM id of the machine."
        },
        "isDependencyMapToBeEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether\n            dependency mapping is to\nbe enabled or not."
        }
      },
      "description": "Machine class."
    },
    "UpdateMachineRunAsAccount": {
      "type": "object",
      "properties": {
        "machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateMachineRunAsAccountRunAsAccountMachineInput"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "UpdateMachineRunAsAccountRunAsAccountMachineInput[]",
          "description": "Gets or sets the machine collection."
        }
      },
      "description": "Defines class that represents input to enable or disable DMP on machine\n      \n      for cosmos entity operation."
    },
    "UpdateMachineRunAsAccountRunAsAccountMachineInput": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Gets or sets the ARM id of the machine."
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets a run as account to be associated with machine."
        }
      },
      "description": "Machine class."
    },
    "UpdateMachineTags": {
      "type": "object",
      "properties": {
        "machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateMachineTagsMachineInput"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "UpdateMachineTagsMachineInput[]",
          "description": "Gets or sets the machine collection."
        }
      },
      "description": "Defines class that represents input to update list of tags on machine."
    },
    "UpdateMachineTagsMachineInput": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Gets or sets the ARM id of the machine."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Gets or sets Tags."
        }
      },
      "description": "Machine class."
    },
    "V20180501PreviewVmwareRunAsAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Relative URL to get this run as account.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the Run as account.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type =\nMicrosoft.OffAzure/VMWareSites/RunAsAccounts.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "Gets nested properties.",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      },
      "description": "Run as account REST Resource."
    },
    "V20180501PreviewVmwareRunAsAccountVmwareRunAsAccountCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20180501PreviewVmwareRunAsAccount"
          },
          "x-cadl-name": "V20180501PreviewVmwareRunAsAccount[]",
          "description": "Gets the list of run as accounts.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of VMware run as accounts."
    },
    "V20190501PreviewSasUriResponse": {
      "type": "object",
      "properties": {
        "jobArmId": {
          "type": "string",
          "description": "Gets or sets the job ARM ID."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the SAS URI."
        }
      },
      "description": "Import URI response class."
    },
    "V20200201DeleteImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/ImportSites/DeleteJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties",
          "description": "Gets or sets the delete import machines job properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "The delete import machines job web model."
    },
    "V20200201ExportImportedMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type name for export job.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbExportImportedMachinesJobEntityExportImportedMachinesJobEntityProperties",
          "description": "Gets or sets the export machines job properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "Export machines job REST resource."
    },
    "V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ExportImportedMachinesJob"
          },
          "x-cadl-name": "V20200201ExportImportedMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Export imported machines job collection."
    },
    "V20200201ImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type =\nMicrosoft.OffAzure/ImportSites/jobs/importJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ImportMachinesJobEntityImportMachinesJobProperties",
          "description": "Gets or sets the import job properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "Import machines Job REST Resource."
    },
    "V20200201ImportMachinesJobImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ImportMachinesJob"
          },
          "x-cadl-name": "V20200201ImportMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of VMware jobs."
    },
    "V202007MasterSitePropertiesPublicNetworkAccess": {
      "type": "string",
      "description": "PublicNetworkAccess",
      "enum": [
        "NotSpecified",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "V202007MasterSitePropertiesPublicNetworkAccess",
        "modelAsString": true
      }
    },
    "VMwareDatastoreType": {
      "type": "string",
      "description": "vmware datastore type",
      "enum": [
        "Unknown",
        "CIFS",
        "NFS",
        "NFS41",
        "PMEM",
        "VFFS",
        "VMFS",
        "VSAN",
        "VVOL"
      ],
      "x-ms-enum": {
        "name": "VMwareDatastoreType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Cifs",
            "value": "CIFS"
          },
          {
            "name": "NFS",
            "value": "NFS"
          },
          {
            "name": "NFS41",
            "value": "NFS41"
          },
          {
            "name": "Pmem",
            "value": "PMEM"
          },
          {
            "name": "Vffs",
            "value": "VFFS"
          },
          {
            "name": "Vmfs",
            "value": "VMFS"
          },
          {
            "name": "Vsan",
            "value": "VSAN"
          },
          {
            "name": "Vvol",
            "value": "VVOL"
          }
        ]
      }
    },
    "Vcenter": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VcenterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A vcenter resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VcenterCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vcenter"
          },
          "x-cadl-name": "Vcenter[]",
          "description": "The Vcenter items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a Vcenter list operation."
    },
    "VcenterProperties": {
      "type": "object",
      "properties": {
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the vCenter."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking vCenter creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the vCenter.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the vCenter."
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the port of the vCenter."
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the vCenter.",
          "readOnly": true
        },
        "perfStatisticsLevel": {
          "type": "string",
          "description": "Gets the performance statistics enabled on the vCenter.",
          "readOnly": true
        },
        "instanceUuid": {
          "type": "string",
          "description": "Gets the instance UUID of the vCenter.",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Gets or sets the friendly name of the vCenter."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "VersionedV202001ExportMachineErrorsRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequestExportMachineErrorsProperties",
          "description": "Gets or sets the properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "The body of export machine errors request."
    },
    "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsProperties": {
      "type": "object",
      "properties": {
        "discoveryScope": {
          "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope",
          "description": "Gets or sets the discovery scope."
        }
      },
      "description": "The Properties class for export machine errors request body."
    },
    "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope": {
      "type": "string",
      "description": "ExportMachineErrorsProperties",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "service api versions",
      "enum": [
        "2018-05-01-preview",
        "2019-05-01-preview",
        "2020-01-01",
        "2020-01-01-preview",
        "2020-02-01",
        "2020-07-07",
        "2020-07-10",
        "2020-08-01-preview",
        "2020-11-11-preview",
        "2022-10-27"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2018_05_01_preview",
            "value": "2018-05-01-preview"
          },
          {
            "name": "v2019_05_01_preview",
            "value": "2019-05-01-preview"
          },
          {
            "name": "v2020_01_01",
            "value": "2020-01-01"
          },
          {
            "name": "v2020_01_01_preview",
            "value": "2020-01-01-preview"
          },
          {
            "name": "v2020_02_01",
            "value": "2020-02-01"
          },
          {
            "name": "v2020_07_07",
            "value": "2020-07-07"
          },
          {
            "name": "v2020_07_10",
            "value": "2020-07-10"
          },
          {
            "name": "v2020_08_01_preview",
            "value": "2020-08-01-preview"
          },
          {
            "name": "v2020_11_11_preview",
            "value": "2020-11-11-preview"
          },
          {
            "name": "v2022_10_27",
            "value": "2022-10-27"
          }
        ]
      }
    },
    "VmwareDatastore": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Data store UUID.",
          "readOnly": true
        },
        "capacityInGb": {
          "type": "number",
          "format": "float",
          "description": "Capacity of the data store.",
          "readOnly": true
        },
        "freeSpaceInGb": {
          "type": "number",
          "format": "float",
          "description": "Free space of the data store.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/VMwareDatastoreType",
          "description": "Type of the data store.",
          "readOnly": true
        },
        "symbolicName": {
          "type": "string",
          "description": "Symbolic name of the data store.",
          "readOnly": true
        }
      },
      "description": "Second level object returned as part of VMware host REST resource."
    },
    "VmwareDisk": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Disk UUID.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Label of the disk.",
          "readOnly": true
        },
        "diskProvisioningPolicy": {
          "type": "string",
          "description": "The provisioning policy of the disk.\n            It is Thin or Thick or\nUnknown for the VMWare VMDK.",
          "readOnly": true
        },
        "diskScrubbingPolicy": {
          "type": "string",
          "description": "The scrubbing policy of disks which can be\n            eagerly zeroed or\nlazily zeroed.",
          "readOnly": true
        },
        "diskMode": {
          "type": "string",
          "description": "Disk mode property used for identifying independent disks.",
          "readOnly": true
        },
        "controllerType": {
          "type": "string",
          "description": "Gets or sets a value indicating the type of the disk controller type.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "VmwareHostProperties": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking VMware host creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the VMware host.",
          "readOnly": true
        },
        "datastores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareDatastore"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "VmwareDatastore[]",
          "description": "Gets the data stores.",
          "readOnly": true
        },
        "vcenterId": {
          "type": "string",
          "description": "Gets the V-center ID.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "Gets the instance UUID of the vmware host.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for host properties."
    },
    "VmwareHostResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VmwareHostProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hostName": {
          "type": "string",
          "description": "Gets the name of the host.",
          "readOnly": true
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareHostResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareHostResource"
          },
          "x-cadl-name": "VmwareHostResource[]",
          "description": "The VmwareHostResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a VmwareHostResource list operation."
    },
    "VmwareJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareJobResource"
          },
          "x-cadl-name": "VmwareJobResource[]",
          "description": "The VmwareJobResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a VmwareJobResource list operation."
    },
    "VmwareMachineProperties": {
      "type": "object",
      "properties": {
        "hostProcessorInfo": {
          "$ref": "#/definitions/ProcessorInfo",
          "description": "Gets the Information about Host Processor.",
          "readOnly": true
        },
        "vCenterFqdn": {
          "type": "string",
          "description": "VCenter FQDN/IPAddress.",
          "readOnly": true
        },
        "vCenterId": {
          "type": "string",
          "description": "VCenter ARM ID.",
          "readOnly": true
        },
        "instanceUuid": {
          "type": "string",
          "description": "On-premise Instance UUID of the machine.",
          "readOnly": true
        },
        "dataCenterScope": {
          "type": "string",
          "description": "Scope of the data center.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "User description of the machine.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareDisk"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "VmwareDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "hostInMaintenanceMode": {
          "type": "boolean",
          "description": "Indicates whether the host is in maintenance mode.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The host name.",
          "readOnly": true
        },
        "hostPowerState": {
          "type": "string",
          "description": "The host power state.",
          "readOnly": true
        },
        "hostVersion": {
          "type": "string",
          "description": "The host version.",
          "readOnly": true
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareNetworkAdapter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "VmwareNetworkAdapter[]",
          "description": "Network adapters attached to the machine.",
          "readOnly": true
        },
        "vMwareToolsStatus": {
          "type": "string",
          "description": "VMware tools status.",
          "readOnly": true
        },
        "vMwareToolsVersion": {
          "type": "string",
          "description": "VMware tools version.",
          "readOnly": true
        },
        "changeTrackingSupported": {
          "type": "boolean",
          "description": "Value indicating whether change tracking is supported.",
          "readOnly": true
        },
        "changeTrackingEnabled": {
          "type": "boolean",
          "description": "Value indicating whether change tracking is enabled.",
          "readOnly": true
        },
        "maxSnapshots": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of snapshots for the VM.            Default value is -1.",
          "readOnly": true
        },
        "diskEnabledUuid": {
          "type": "string",
          "description": "Gets or sets whether Disk Enabled UUID is set or not.",
          "readOnly": true
        },
        "numberOfSnapshots": {
          "type": "integer",
          "format": "int32",
          "description": "Number of snapshots for the VM.             Default value is -1.",
          "readOnly": true
        },
        "altGuestName": {
          "type": "string",
          "description": "Gets or sets the machine alt guest name.",
          "readOnly": true
        },
        "powerStatus": {
          "type": "string",
          "description": "Gets the Machine power status.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Gets the VM FQDN.",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "type": "string",
          "description": "Gets the Root location of the VM configuration file.",
          "readOnly": true
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOsDetails": {
          "$ref": "#/definitions/GuestOsDetails",
          "description": "Operating System Details extracted from the guest\n            bu executing\nscript inside the guest VM.",
          "readOnly": true
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of applications installed in the guest VM.",
          "readOnly": true
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered\n            or the\nerror while discovering guest details based discovery\n            of the\nmachine.",
          "readOnly": true
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "Whether Refresh Fabric Layout Guest Details has been completed once.\n         \n  Portal will show discovery in progress, if this value is true.",
          "readOnly": true
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not\n            for\nthe VM.",
          "readOnly": true
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection is last started.",
          "readOnly": true
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "description": "Gets or sets when dependency mapping collection was last disabled.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Errors for machine.",
          "readOnly": true
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/ApplicationDiscovery",
          "description": "Gets the data related to application discovery.",
          "readOnly": true
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DependencyMapDiscovery",
          "description": "Gets the data related to dependency map discovery.",
          "readOnly": true
        },
        "staticDiscovery": {
          "$ref": "#/definitions/StaticDiscovery",
          "description": "Gets the data related to static discovery.",
          "readOnly": true
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SqlDiscovery",
          "description": "Gets the data related to SQL discovery.",
          "readOnly": true
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "Gets the data related to Web application discovery.",
          "readOnly": true
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Gets the data related to Oracle discovery.",
          "readOnly": true
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Gets the data related to SpringBoot discovery.",
          "readOnly": true
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMb": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for machine properties."
    },
    "VmwareMachineSoftwareInventory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative URL to get this VMWare machine.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the machine.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/MachineSoftwareInventoryProperties",
          "description": "Gets or sets software inventory properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "VMware Machine software inventory REST resource."
    },
    "VmwareNetworkAdapter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label of the NIC.",
          "readOnly": true
        },
        "adapterType": {
          "type": "string",
          "description": "Gets or sets the adapter type.",
          "readOnly": true
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets Mac address of the NIC."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets IP addresses for the machine.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets Network Name."
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets Type of the IP address."
        }
      },
      "description": "Second level object represented in responses as part of Machine REST resource."
    },
    "VmwareRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A runasaccount resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareRunAsAccountResource"
          },
          "x-cadl-name": "VmwareRunAsAccountResource[]",
          "description": "The VmwareRunAsAccountResource items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a VmwareRunAsAccountResource list operation."
    },
    "VmwareSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A VmwareSite",
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VmwareSiteCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareSite"
          },
          "x-cadl-name": "VmwareSite[]",
          "description": "The VmwareSite items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a VmwareSite list operation."
    },
    "VmwareSiteUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative ARM name to get Web app server instance."
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/VmwareSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the VmwareSite."
    },
    "VmwareSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the VmwareSite."
    },
    "VmwareSiteUsage": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "vCenterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of vCenters part of the site."
        }
      },
      "description": "VMware site usage."
    },
    "WebAppDiscovery": {
      "type": "object",
      "properties": {
        "totalWebServerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered web servers.."
        },
        "totalWebApplicationCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered web applications."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's WebApps discovery.",
      "required": [
        "totalWebServerCount",
        "totalWebApplicationCount",
        "discoveryScopeStatus"
      ]
    },
    "WebAppExtendedMachine": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebAppExtendedMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web app extended machine REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WebAppExtendedMachineCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppExtendedMachine"
          },
          "x-cadl-name": "WebAppExtendedMachine[]",
          "description": "The WebAppExtendedMachine items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a WebAppExtendedMachine list operation."
    },
    "WebAppExtendedMachineProperties": {
      "type": "object",
      "properties": {
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "Gets the hydrated host name.",
          "readOnly": true
        },
        "machineDisplayName": {
          "type": "string",
          "description": "Gets the Name of the extended machine.",
          "readOnly": true
        },
        "machineId": {
          "type": "string",
          "description": "Gets the machine ARM id.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID of the machine used for web app discovery.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the agent hydrated run as account.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web extended machine properties."
    },
    "WebAppProperties": {
      "type": "object",
      "properties": {
        "webAppArmId": {
          "type": "string",
          "description": "Gets or sets the arm id of the web app."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets or sets Tags."
        }
      },
      "description": "Class representing web app properties web model."
    },
    "WebAppPropertiesCollection": {
      "type": "object",
      "properties": {
        "webApps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebAppProperties[]",
          "description": "Gets or sets the list of web app properties."
        }
      },
      "description": "Collection of web app properties."
    },
    "WebAppRunAsAccount": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Run as account REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WebAppRunAsAccountCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppRunAsAccount"
          },
          "x-cadl-name": "WebAppRunAsAccount[]",
          "description": "The WebAppRunAsAccount items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a WebAppRunAsAccount list operation."
    },
    "WebAppSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebAppSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "WebApp site web model.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WebAppSiteCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebAppSite"
          },
          "x-cadl-name": "WebAppSite[]",
          "description": "The WebAppSite items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a WebAppSite list operation."
    },
    "WebAppSiteProperties": {
      "type": "object",
      "properties": {
        "siteAppliancePropertiesCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteApplianceProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SiteApplianceProperties[]",
          "description": "Gets or sets the appliance details used by service to communicate\n           \nto the appliance."
        },
        "discoveryScenario": {
          "$ref": "#/definitions/WebAppSitePropertiesDiscoveryScenario",
          "description": "Gets or sets the discovery scenario."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for Web app site properties."
    },
    "WebAppSitePropertiesDiscoveryScenario": {
      "type": "string",
      "description": "WebAppSite DiscoveryScenario"
    },
    "WebAppSiteUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebAppSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the WebAppSite."
    },
    "WebAppSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "siteAppliancePropertiesCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteApplianceProperties"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SiteApplianceProperties[]",
          "description": "Gets or sets the appliance details used by service to communicate\n           \nto the appliance."
        },
        "discoveryScenario": {
          "$ref": "#/definitions/WebAppSitePropertiesDiscoveryScenario",
          "description": "Gets or sets the discovery scenario."
        }
      },
      "description": "The updatable properties of the WebAppSite."
    },
    "WebAppSiteUsage": {
      "type": "object",
      "properties": {
        "webServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of web servers discovered in the site."
        },
        "webApplicationCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of web applications discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        }
      },
      "description": "Web app site usage."
    },
    "WebApplicationAppsAndRolesModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the WebApplication.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the WebApplication.",
          "readOnly": true
        },
        "platform": {
          "type": "string",
          "description": "Gets or sets Platform of the WebApplication.",
          "readOnly": true
        },
        "groupName": {
          "type": "string",
          "description": "Gets or sets GroupName of the WebApplication.",
          "readOnly": true
        },
        "webServer": {
          "type": "string",
          "description": "Gets or sets WebServer of the WebApplication.",
          "readOnly": true
        },
        "applicationPool": {
          "type": "string",
          "description": "Gets or sets ApplicationPool of the WebApplication.",
          "readOnly": true
        }
      },
      "description": "WebApplication in the guest virtual machine."
    },
    "WebApplicationConfigurationUnit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the configuration name."
        },
        "filePath": {
          "type": "string",
          "description": "Gets or sets the configuration file path."
        },
        "localFilePath": {
          "type": "string",
          "description": "Gets or sets the configuration local file path."
        },
        "targetFilePath": {
          "type": "string",
          "description": "Gets or sets the configuration target file path."
        },
        "section": {
          "type": "string",
          "description": "Gets or sets the configuration section in the file."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the configuration type."
        },
        "isDeploymentTimeEditable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the configuration is edited or not by\nthe user."
        },
        "identifier": {
          "type": "string",
          "description": "Gets or sets the identifier for the configuration."
        }
      },
      "description": "Web Application configuration unit."
    },
    "WebApplicationDirectoryUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the unique id corresponding to the application directory."
        },
        "isEditable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the directory object is editable.\n     \n      True when the directory is added as an optional directory, false when\ndiscovery is done\n            manually."
        },
        "sourcePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the paths of the directory on the source machine."
        },
        "localScratchPath": {
          "type": "string",
          "description": "Gets or sets the local scratch path at which the directories has been copied."
        },
        "mountPath": {
          "type": "string",
          "description": "Gets or sets the mount path of the application directory."
        },
        "sourceSize": {
          "type": "string",
          "description": "Gets or sets the size of the directory on the source machine."
        }
      },
      "description": "Web Application directory unit."
    },
    "WebApplicationFramework": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the framework."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the framework."
        }
      },
      "description": "Framework specific data for a web application."
    },
    "WebRoleImportDisk": {
      "type": "object",
      "properties": {
        "megabytesPerSecondOfRead": {
          "type": "number",
          "format": "float",
          "description": "Disk read throughput.",
          "readOnly": true
        },
        "megabytesPerSecondOfWrite": {
          "type": "number",
          "format": "float",
          "description": "Disk write throughput.",
          "readOnly": true
        },
        "numberOfReadOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Disk read IOPS.",
          "readOnly": true
        },
        "numberOfWriteOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Disk write IOPS.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Class representing the imported machine web model."
    },
    "WebRoleOperatingSystem": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "WebRoleV202011PreviewWebApplication": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebRoleV202011PreviewWebApplicationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web application REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WebRoleV202011PreviewWebApplicationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebRoleV202011PreviewWebApplication"
          },
          "x-cadl-name": "WebRoleV202011PreviewWebApplication[]",
          "description": "The WebRoleV202011PreviewWebApplication items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a WebRoleV202011PreviewWebApplication list operation."
    },
    "WebRoleV202011PreviewWebApplicationProperties": {
      "type": "object",
      "properties": {
        "webServerId": {
          "type": "string",
          "description": "Gets the web server id.",
          "readOnly": true
        },
        "webServerName": {
          "type": "string",
          "description": "Gets the web server name.",
          "readOnly": true
        },
        "virtualPath": {
          "type": "string",
          "description": "Gets the virtual path of the application.",
          "readOnly": true
        },
        "physicalPath": {
          "type": "string",
          "description": "Gets the physical path of the application.",
          "readOnly": true
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontEndBinding"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "FrontEndBinding[]",
          "description": "Gets the front end bindings for the application.",
          "readOnly": true
        },
        "frameworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationFramework"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationFramework[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationConfigurationUnit"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplicationConfigurationUnit[]",
          "description": "Gets the configuration.",
          "readOnly": true
        },
        "directories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplicationDirectoryUnit"
          },
          "x-cadl-name": "WebApplicationDirectoryUnit[]",
          "description": "Gets the directories.",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web application properties."
    },
    "WebServer": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Web application REST Resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WebServerCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebServer"
          },
          "x-cadl-name": "WebServer[]",
          "description": "The WebServer items on this page",
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "description": "The response of a WebServer list operation."
    },
    "WebServerProperties": {
      "type": "object",
      "properties": {
        "configurationLocation": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets the configuration location.",
          "readOnly": true
        },
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of machines.",
          "readOnly": true
        },
        "webApplications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the list of web applications.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name.",
          "readOnly": true
        },
        "serverFqdn": {
          "type": "string",
          "description": "Gets the server FQDN.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets the run as account id.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Gets a value indicating whether application is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking creation of the entity.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last update operation.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Gets the server type.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the Error details.",
          "readOnly": true
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "hasErrors": {
          "type": "boolean",
          "description": "Gets a value indicating whether the WebApp has errors or not.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for web server properties."
    },
    "object": {
      "type": "object",
      "properties": {},
      "description": "an object"
    }
  },
  "parameters": {}
}
