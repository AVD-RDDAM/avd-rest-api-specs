{
  "swagger": "2.0",
  "info": {
    "title": "SingleSPNAttribute",
    "version": "2020-08-01-preview",
    "description": "Azure OffAzure Resource Provider management API.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "HyperVClusterInt"
    },
    {
      "name": "HyperVClusterController"
    },
    {
      "name": "VmwareSites"
    },
    {
      "name": "SitesController"
    },
    {
      "name": "VMwarePropertiesController"
    },
    {
      "name": "DependencyMapController"
    },
    {
      "name": "Machines"
    },
    {
      "name": "MachinesController"
    },
    {
      "name": "VmwareMachinesController"
    },
    {
      "name": "VCenterController"
    },
    {
      "name": "VmwareVcenters"
    },
    {
      "name": "RunAsAccountsController"
    },
    {
      "name": "Microsoft.Azure.FDS.WebRole.V2020_01_01_preview.VMwareHostController"
    },
    {
      "name": "VmwareHosts"
    },
    {
      "name": "JobsController"
    },
    {
      "name": "HypervSites"
    },
    {
      "name": "HyperVSitesController"
    },
    {
      "name": "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
    },
    {
      "name": "HyperVJobController"
    },
    {
      "name": "HypervJobs"
    },
    {
      "name": "HyperVHostInt"
    },
    {
      "name": "HyperVHostController"
    },
    {
      "name": "Microsoft.Azure.FDS.WebRole.V2020_01_01_preview.HyperVHostController"
    },
    {
      "name": "Microsoft.Azure.FDS.WebRole.V2022_10_27.HyperVMachinesController"
    },
    {
      "name": "HypervMachines"
    },
    {
      "name": "HyperVRunAsAccountsController"
    },
    {
      "name": "ServerSitesInterface"
    },
    {
      "name": "ServerMachines"
    },
    {
      "name": "ServerRunAsAccounts"
    },
    {
      "name": "ServerJobs"
    },
    {
      "name": "ImportJobsController"
    },
    {
      "name": "ImportMachines"
    },
    {
      "name": "ImportMachinesController"
    },
    {
      "name": "ImportSites"
    },
    {
      "name": "ImportSitesController"
    },
    {
      "name": "MasterSites"
    },
    {
      "name": "Microsoft.Azure.FDS.WebRole.V2020_07_07.MasterSitesController"
    },
    {
      "name": "PrivateEndpointConnectionController"
    }
  ],
  "paths": {
    "/providers/Microsoft.OffAzure/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}": {
      "get": {
        "tags": [
          "HypervSites",
          "HyperVSitesController"
        ],
        "operationId": "HyperVSites_GetSite",
        "description": "Get a HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HypervSites",
          "HyperVSitesController"
        ],
        "operationId": "HyperVSites_PutSite",
        "description": "Create a HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVSites_PatchSite",
        "description": "Update a HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Job body with updated properties.",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HypervSites",
          "HyperVSitesController"
        ],
        "operationId": "HyperVSites_DeleteSite",
        "description": "Delete a HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/clientGroupMembers": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_ClientGroupMembers",
        "description": "API to list client group members for the selected client group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsClientGroupMembersRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/clusters": {
      "get": {
        "tags": [
          "HyperVClusterInt",
          "HyperVClusterController"
        ],
        "operationId": "HyperVCluster_GetAllClustersInSite",
        "description": "List HyperVCluster resources by HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVClusterCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/clusters/{clusterName}": {
      "get": {
        "tags": [
          "HyperVClusterInt",
          "HyperVClusterController"
        ],
        "operationId": "HyperVCluster_GetCluster",
        "description": "Method to get a Hyper-V cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": " Cluster ARM name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HyperVClusterInt",
          "HyperVClusterController"
        ],
        "operationId": "HyperVCluster_PutCluster",
        "description": "Create a HyperVCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": " Cluster ARM name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/errorSummary": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HypervSites_ErrorSummary",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance Name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummaryCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/exportApplications": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_ExportApplications",
        "description": "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/exportDependencies": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_ExportDependencies",
        "description": "API to generate report containing agentless dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/exportMachineErrors": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_ExportMachineErrors",
        "description": "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/generateCoarseMap": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_GenerateCoarseMap",
        "description": "API to generate coarse map for the list of machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/generateDetailedMap": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_GenerateDetailedMap",
        "description": "API to generate detailed map for a selected machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/healthSummary": {
      "post": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVSites_GetSiteHealthSummary",
        "description": "Method to get site health summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/hosts": {
      "get": {
        "tags": [
          "HyperVHostInt",
          "HyperVHostController"
        ],
        "operationId": "HyperVHost_GetAllHostsInSite",
        "description": "List HyperVHost resources by HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVHostCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/hosts/{hostName}": {
      "get": {
        "tags": [
          "HyperVHostInt",
          "HyperVHostController"
        ],
        "operationId": "HyperVHost_GetHost",
        "description": "Get a HyperVHost",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Host name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "HyperVHostInt",
          "Microsoft.Azure.FDS.WebRole.V2020_01_01_preview.HyperVHostController"
        ],
        "operationId": "HyperVHost_PutHost",
        "description": "Create a HyperVHost",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Host name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "HyperVJobController",
          "HypervJobs"
        ],
        "operationId": "HyperVJobs_GetAllJobsInSite",
        "description": "List HyperVJob resources by HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVJobCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "HyperVJobController",
          "HypervJobs"
        ],
        "operationId": "HyperVJobs_GetJob",
        "description": "Get a HyperVJob",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Job name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/machines": {
      "get": {
        "tags": [
          "Microsoft.Azure.FDS.WebRole.V2022_10_27.HyperVMachinesController",
          "HypervMachines"
        ],
        "operationId": "HyperVMachines_GetAllMachinesInSite",
        "description": "List HyperVMachine resources by HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVMachineCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "Microsoft.Azure.FDS.WebRole.V2022_10_27.HyperVMachinesController",
          "HypervMachines"
        ],
        "operationId": "HyperVMachines_GetMachine",
        "description": "Get a HyperVMachine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " HypervMachine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVMachine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVOperationsStatus_GetOperationStatus",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "HypervSites",
          "HyperVSitesController"
        ],
        "operationId": "HyperVSites_RefreshSite",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "HyperVRunAsAccountsController"
        ],
        "operationId": "HyperVRunAsAccounts_GetAllRunAsAccountsInSite",
        "description": "List HypervRunAsAccountResource resources by HyperVSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervRunAsAccountResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "HyperVRunAsAccountsController"
        ],
        "operationId": "HyperVRunAsAccounts_GetRunAsAccount",
        "description": "Get a HypervRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HypervRunAsAccountResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/serverGroupMembers": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_ServerGroupMembers",
        "description": "API to list server group members for the selected server group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsServerGroupMembersRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/summary": {
      "post": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HyperVSites_GetSiteUsage",
        "description": "Method to get site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HyperVSiteUsage"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/updateDependencyMapStatus": {
      "post": {
        "tags": [
          "HypervSites",
          "Microsoft.Azure.FDS.WebRole.V2020_08_01_preview.HyperVDependencyMapController"
        ],
        "operationId": "HypervSites_UpdateDependencyMapStatus",
        "description": "Method to enable disable dependency map status for machines\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateMachineDepMapStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "Microsoft.Azure.FDS.WebRole.V2022_10_27.HyperVMachinesController",
          "HypervMachines"
        ],
        "operationId": "HypervMachines_UpdateProperties",
        "description": "Method to update custom properties for HYPERV machines\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/usage": {
      "get": {
        "tags": [
          "HypervSites"
        ],
        "operationId": "HypervSites_Usage",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteUsageResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}": {
      "get": {
        "tags": [
          "ImportSites",
          "ImportSitesController"
        ],
        "operationId": "ImportSites_Get",
        "description": "Get a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Create",
        "description": "Create a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Update",
        "description": "Update a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportSites",
          "ImportSitesController"
        ],
        "operationId": "ImportSites_Delete",
        "description": "Delete a ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteImportedMachines": {
      "post": {
        "tags": [
          "ImportSites",
          "ImportSitesController"
        ],
        "operationId": "ImportSites_DeleteImportedMachines",
        "description": "Deletes the imported machines for site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20190501PreviewSasUriResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deletejobs": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Deletejobs",
        "description": "Method to get all delete import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/DeleteJobs/{jobName}": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Deletejob",
        "description": "Gets the delete imported machines job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_PatchDeleteMachinesJob",
        "description": "Patch the delete imported machines job object.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Job body with updated properties.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201DeleteImportMachinesJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportjobs": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Exportjobs",
        "description": "Method to get all export import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/ExportJobs/{jobName}": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Exportjob",
        "description": "Gets the export imported machines job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportUri": {
      "post": {
        "tags": [
          "ImportSites",
          "ImportSitesController"
        ],
        "operationId": "ImportSites_ExportUri",
        "description": "Method to generate report containing \r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importjobs": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Importjobs",
        "description": "Method to get all import machines job for the given site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201ImportMachinesJobImportMachinesJobCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/ImportJobs/{jobName}": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "operationId": "ImportSites_Importjob",
        "description": "Gets the import job with the given job name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": "Job Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/V20200201ImportMachinesJob"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importUri": {
      "post": {
        "tags": [
          "ImportSites",
          "SitesController"
        ],
        "operationId": "ImportSites_ImportUri",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobs_ListByImportSiteResource",
        "description": "List ImportJobResource resources by ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportJobResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ImportJobsController"
        ],
        "operationId": "ImportJobs_Get",
        "description": "Get a ImportJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines": {
      "get": {
        "tags": [
          "ImportMachines",
          "ImportMachinesController"
        ],
        "operationId": "ImportMachines_ListByImportSiteResource",
        "description": "List ImportMachineResource resources by ImportSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": true,
            "description": "page size  query",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportMachineResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "ImportMachines",
          "MachinesController"
        ],
        "operationId": "ImportMachines_Get",
        "description": "Get a ImportMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImportMachineResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportMachines",
          "ImportMachinesController"
        ],
        "operationId": "ImportMachines_Delete",
        "description": "Delete a ImportMachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/MasterSites/{siteName}": {
      "get": {
        "tags": [
          "MasterSites",
          "Microsoft.Azure.FDS.WebRole.V2020_07_07.MasterSitesController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07MasterSitesController_GetSite",
        "summary": "Method to get a master site.",
        "description": "Get a MasterSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterSites"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07MasterSitesController_PutSite",
        "summary": "Method to create or update a site.",
        "description": "Method to create or update a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MasterSites",
          "Microsoft.Azure.FDS.WebRole.V2020_07_07.MasterSitesController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07MasterSitesController_DeleteSite",
        "summary": "Method to delete a site.",
        "description": "Method to delete a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MasterSites",
          "Microsoft.Azure.FDS.WebRole.V2020_07_07.MasterSitesController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07MasterSitesController_PatchSite",
        "summary": "Method to update an existing site.",
        "description": "Method to update an existing site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/MasterSiteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MasterSite"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/MasterSites/{siteName}/errorSummary": {
      "post": {
        "tags": [
          "MasterSites",
          "Microsoft.Azure.FDS.WebRole.V2020_07_07.MasterSitesController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07MasterSitesController_GetErrorSummary",
        "summary": "Method to get error summary from master site for an appliance.",
        "description": "Method to get error summary from master site for an appliance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "applianceName",
            "in": "query",
            "required": true,
            "description": "Appliance name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummary"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/MasterSites/{siteName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07PrivateEndpointConnectionController_GetPrivateEndpointConnections",
        "summary": "Gets the private link resource.",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/MasterSites/{siteName}/privateEndpointConnections/{peConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnectionController"
        ],
        "operationId": "MicrosoftAzureFdsWebRoleV2020_07_07PrivateEndpointConnectionController_GetPrivateEndpointConnection",
        "summary": "Gets the private link resource.",
        "description": "Gets the private link resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "peConnectionName",
            "in": "path",
            "required": true,
            "description": " Private link resource name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Get",
        "description": "Get a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Create",
        "description": "Create a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Update",
        "description": "Update a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Delete",
        "description": "Delete a ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/errorSummary": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_ErrorSummary",
        "description": "Get the error summary for a server site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummaryCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/healthsummary": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_HealthSummary",
        "description": "Get the health summary for a server site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ServerJobs"
        ],
        "operationId": "ServerJobs_ListByServerSiteResource",
        "description": "List ServerJobResource resources by ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerJobResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ServerJobs"
        ],
        "operationId": "ServerJobs_Get",
        "description": "Get a ServerJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Machines",
        "description": "Get all machines in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "ServerMachines"
        ],
        "operationId": "ServerMachines_Get",
        "description": "Get a ServerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServerMachines"
        ],
        "operationId": "ServerMachines_Create",
        "description": "Create a ServerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ServerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServerMachines"
        ],
        "operationId": "ServerMachines_Delete",
        "description": "Delete a ServerResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": " A server machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSiteOperationsStatus_GetOperationStatus",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/refreshSite": {
      "post": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_RefreshSite",
        "description": "Operation to refresh a site",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "operationId": "ServerRunAsAccounts_ListByServerSiteResource",
        "description": "List ServerRunAsAccountResource resources by ServerSiteResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccountResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "operationId": "ServerRunAsAccounts_Get",
        "description": "Get a ServerRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccountResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_UpdateProperties",
        "description": "Operation to update custom properties for servers",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/usage": {
      "get": {
        "tags": [
          "ServerSitesInterface"
        ],
        "operationId": "ServerSitesInterface_Usage",
        "description": "Get a serve site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerSiteUsageResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}": {
      "get": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "Sites_GetSite",
        "description": "Get a VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_PutSite",
        "description": "Create a VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_PatchSite",
        "description": "Update a VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": " body with updated properties.",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "Sites_DeleteSite",
        "description": "Delete a VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/{vmwareSite}/errorSummary": {
      "get": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "VmwareSites_ErrorSummary",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "vmwareSite",
            "in": "path",
            "required": true,
            "description": "VmwareSite.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteErrorSummaryCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/{vmwareSite}/usage": {
      "get": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "VmwareSites_Usage",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "vmwareSite",
            "in": "path",
            "required": true,
            "description": "VmwareSite.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteUsageResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/clientGroupsMembers": {
      "post": {
        "tags": [
          "VmwareSites",
          "DependencyMapController"
        ],
        "operationId": "VmwareSites_ClientGroupsMembers",
        "description": "API to list client group members for the selected client group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsClientGroupMembersRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/exportApplications": {
      "post": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "VmwareSites_ExportApplications",
        "description": "Method to generate report containing \r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/exportDependencies": {
      "post": {
        "tags": [
          "VmwareSites",
          "DependencyMapController"
        ],
        "operationId": "VmwareSites_ExportDependencies",
        "description": "API to generate report containing agentless dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/exportMachineErrors": {
      "post": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "VmwareSites_ExportMachineErrors",
        "description": "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/exportMachines": {
      "post": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "VmwareSites_ExportMachines",
        "description": "Method to generate report containing \r\n            machine and the deep discovery of the application installed in the machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/generateCoarseMap": {
      "post": {
        "tags": [
          "VmwareSites",
          "DependencyMapController"
        ],
        "operationId": "VmwareSites_GenerateCoarseMap",
        "description": "API to generate coarse map for the list of machines.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/generateDetailedMap": {
      "post": {
        "tags": [
          "VmwareSites",
          "DependencyMapController"
        ],
        "operationId": "VmwareSites_GenerateDetailedMap",
        "description": "API to generate detailed map for a selected machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/healthSummary": {
      "post": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_GetSiteHealthSummary",
        "description": "Method to get site health summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/hosts": {
      "get": {
        "tags": [
          "Microsoft.Azure.FDS.WebRole.V2020_01_01_preview.VMwareHostController",
          "VmwareHosts"
        ],
        "operationId": "VmwareHosts_ListByVMwareSite",
        "description": "List VmwareHostResource resources by VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareHostResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/hosts/{hostName}": {
      "get": {
        "tags": [
          "Microsoft.Azure.FDS.WebRole.V2020_01_01_preview.VMwareHostController",
          "VmwareHosts"
        ],
        "operationId": "VmwareHosts_Get",
        "description": "Get a VmwareHostResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "required": true,
            "description": " Hosts name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareHostResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "JobsController"
        ],
        "operationId": "Jobs_GetAllJobsInSite",
        "description": "List VmwareJobResource resources by VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareJobResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "JobsController"
        ],
        "operationId": "Jobs_GetJob",
        "description": "Get a VmwareJobResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "description": " Jobs name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines": {
      "get": {
        "tags": [
          "Machines",
          "MachinesController"
        ],
        "operationId": "Machines_GetAllMachinesInSite",
        "description": "List MachineResource resources by VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "page size  query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "required": false,
            "description": "Optional parameter for continuation token.",
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "required": false,
            "description": "Total count of machines in the given site.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "Machines",
          "MachinesController"
        ],
        "operationId": "Machines_GetMachine",
        "description": "Get a MachineResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/applications": {
      "get": {
        "tags": [
          "Machines",
          "VmwareMachinesController"
        ],
        "operationId": "Machines_Applications",
        "description": "Method to get machine with application and roles present in it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MachineResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/softwareInventory/default": {
      "get": {
        "tags": [
          "Machines"
        ],
        "operationId": "Machines_Seven10MachinesControllerGetMachineSoftwareInventory",
        "summary": "Method to get a machines software inventory like applications and roles.",
        "description": "Method to get a machines software inventory like applications and roles.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareMachineSoftwareInventory"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/start": {
      "post": {
        "tags": [
          "Machines",
          "MachinesController"
        ],
        "operationId": "Machines_StartMachine",
        "description": "Method to start a machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/stop": {
      "post": {
        "tags": [
          "Machines",
          "MachinesController"
        ],
        "operationId": "Machines_StopMachine",
        "description": "Method to stop a machine.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "required": true,
            "description": "Machine name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/operationsStatus/{operationStatusName}": {
      "get": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "VMwareOperationsStatus_GetOperationStatus",
        "description": "A operation status resource belonging to a site resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "required": true,
            "description": "Operation status  Arm Name.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "VmwareSites",
          "SitesController"
        ],
        "operationId": "Sites_RefreshSite",
        "description": "Method to refresh a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/runAsAccounts": {
      "get": {
        "tags": [
          "RunAsAccountsController"
        ],
        "operationId": "RunAsAccounts_GetAllRunAsAccountsInSite",
        "description": "List VmwareRunAsAccountResource resources by VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareRunAsAccountResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/runAsAccounts/{accountName}": {
      "get": {
        "tags": [
          "RunAsAccountsController"
        ],
        "operationId": "RunAsAccounts_GetRunAsAccount",
        "description": "Get a VmwareRunAsAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": " RunAsAccounts name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VmwareRunAsAccountResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/serverGroupMembers": {
      "post": {
        "tags": [
          "VmwareSites",
          "DependencyMapController"
        ],
        "operationId": "VmwareSites_ServerGroupMembers",
        "description": "API to list server group members for the selected server group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DependencyMapServiceMapExtensionsServerGroupMembersRequest"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/summary": {
      "post": {
        "tags": [
          "VmwareSites"
        ],
        "operationId": "Sites_GetSiteUsage",
        "description": "Method to get site usage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMwareSiteUsage"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/updateDependencyMapStatus": {
      "post": {
        "tags": [
          "VmwareSites",
          "VMwarePropertiesController"
        ],
        "operationId": "VmwareSites_UpdateDependencyMapStatus",
        "description": "Method to get site error summary.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateMachineDepMapStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/updateProperties": {
      "post": {
        "tags": [
          "VmwareSites",
          "VMwarePropertiesController"
        ],
        "operationId": "VmwareSites_UpdateProperties",
        "description": "Method to update properties for machines   in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MachineMetadataList"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/updateRunAsAccount": {
      "post": {
        "tags": [
          "VmwareSites",
          "VMwarePropertiesController"
        ],
        "operationId": "VmwareSites_UpdateRunAsAccount",
        "description": "Method to associate Run as account to machine\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/updateTags": {
      "post": {
        "tags": [
          "VmwareSites",
          "VMwarePropertiesController"
        ],
        "operationId": "VmwareSites_UpdateTags",
        "description": "Method to associate Run as account to machine\r\n            in a site.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-cadl-name": "{}"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/vCenters": {
      "get": {
        "tags": [
          "VCenterController",
          "VmwareVcenters"
        ],
        "operationId": "VCenter_GetAllVCentersInSite",
        "description": "List VCenter resources by VMwareSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "filter query",
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VCenterCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/vCenters/{vcenterName}": {
      "get": {
        "tags": [
          "VCenterController",
          "VmwareVcenters"
        ],
        "operationId": "VCenter_GetVCenter",
        "description": "Get a VCenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VCenterController",
          "VmwareVcenters"
        ],
        "operationId": "VCenter_PutVCenter",
        "description": "Create a VCenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "VCenterController",
          "VmwareVcenters"
        ],
        "operationId": "VCenter_DeleteVCenter",
        "description": "Delete a VCenter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "required": true,
            "description": "Site name",
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "required": true,
            "description": " VCenters name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationDiscovery": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related application and roles discovery scope."
    },
    "Applications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the Application.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the Application.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "description": "Gets or sets Provider of the Application.",
          "readOnly": true
        }
      },
      "description": "Application in the guest virtual machine."
    },
    "AppsAndRoles": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Applications"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Applications[]",
          "description": "Gets or sets Applications of the AppsAndRoles."
        },
        "webApplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebApplications"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "WebApplications[]",
          "description": " Gets or sets WebApplications of the AppsAndRoles."
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Features"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Features[]",
          "description": "Gets or sets Features of the AppsAndRoles."
        },
        "sqlServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlServers"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SqlServers[]",
          "description": "Gets or sets SQLServers of the AppsAndRoles."
        },
        "sharePointServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharePointServers"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SharePointServers[]",
          "description": "Gets or sets SharePointServers of the AppsAndRoles."
        },
        "systemCenters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemCenters"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SystemCenters[]",
          "description": " Gets or sets SystemCenters of the AppsAndRoles."
        },
        "bizTalkServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BizTalkServers"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "BizTalkServers[]",
          "description": " Gets or sets BizTalkServers of the AppsAndRoles."
        },
        "exchangeServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeServers"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ExchangeServers[]",
          "description": "Gets or sets ExchangeServers of the AppsAndRoles."
        },
        "otherDatabases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherDatabases"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "OtherDatabases[]",
          "description": "Gets or sets OtherDatabases of the AppsAndRoles."
        }
      },
      "description": "Apps And Roles of the Server"
    },
    "BizTalkServers": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the BizTalkServer.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the BizTalkServer.",
          "readOnly": true
        }
      },
      "description": "BizTalkServer in the guest virtual machine."
    },
    "CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState": {
      "type": "string",
      "description": "Cosmos db Imported Machines JobEntity",
      "enum": [
        "Unknown",
        "Verified",
        "VerifiedWithErrors",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState",
        "modelAsString": true
      }
    },
    "CosmosDBImportMachinesJobEntityImportMachinesJobProperties": {
      "type": "string",
      "enum": [
        "Unknown",
        "Completed",
        "CompletedWithWarnings",
        "CompletedWithErrors",
        "Failed",
        "WaitingForBlobUpload",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "CosmosDBImportMachinesJobEntityImportMachinesJobProperties",
        "modelAsString": true
      }
    },
    "CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "errorSasUri": {
          "type": "string",
          "description": "error Sas Uri"
        },
        "jobState": {
          "$ref": "#/definitions/CosmosDBDeleteImportedMachinesJobEntityDeleteImportedMachinesJobPropertiesJobState",
          "description": "job State"
        },
        "numberOfMachinesDeleted": {
          "type": "integer",
          "format": "int32",
          "description": "number Of Machines Deleted"
        },
        "deletionConfirmation": {
          "type": "boolean",
          "description": "deletion Confirmation"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "errors list",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Delete Imported Machines Job Properties"
    },
    "CosmosDbExportImportedMachinesJobEntityExportImportedMachinesJobEntityProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "sasUri": {
          "type": "string",
          "description": "sas uri"
        }
      },
      "description": " Export Imported Machines JobEntity Properties "
    },
    "DependencyMapDiscovery": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DependencyMapDiscoveryScopeStatus",
          "description": "Gets discovery scope status.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related dependency map discovery scope."
    },
    "DependencyMapDiscoveryScopeStatus": {
      "type": "string",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "DependencyMapDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "DependencyMapServiceMapExtensionsClientGroupMembersRequest": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "id of machine"
        },
        "processGroupName": {
          "type": "string",
          "description": "process group name "
        },
        "processName": {
          "type": "string",
          "description": "name of process"
        }
      },
      "description": "DependencyMap ServiceMap Extensions Client GroupMembers Request",
      "allOf": [
        {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
        }
      ]
    },
    "DependencyMapServiceMapExtensionsDependencyMapRequestFilters": {
      "type": "object",
      "properties": {
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of machine ids"
        },
        "processIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of process Ids"
        }
      },
      "description": "DependencyMap Service Map Extensions Dependency Map Request Filters"
    },
    "DependencyMapServiceMapExtensionsExportDependenciesRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        }
      },
      "description": "DependencyMap ServiceMap Extensions ExportDependencies Request"
    },
    "DependencyMapServiceMapExtensionsScopeMapRequest": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "end time"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsDependencyMapRequestFilters",
          "description": "optional filters"
        }
      },
      "description": "Dependency  Map ServiceMap Extensions Scope Map Request"
    },
    "DependencyMapServiceMapExtensionsServerGroupMembersRequest": {
      "type": "object",
      "properties": {
        "serverPort": {
          "type": "integer",
          "format": "int32",
          "description": "port of server"
        }
      },
      "description": "DependencyMap ServiceMap Extensions ServerGroup Members Request",
      "allOf": [
        {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
        }
      ]
    },
    "DependencyMapServiceMapExtensionsSingleMachineDetailedMapRequest": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "id of machine"
        }
      },
      "description": "DependencyMap ServiceMap Extensions SingleMachine DetailedMap Request",
      "allOf": [
        {
          "$ref": "#/definitions/DependencyMapServiceMapExtensionsScopeMapRequest"
        }
      ]
    },
    "DiscoveryScopeErrorSummary": {
      "type": "object",
      "properties": {
        "affectedResourceType": {
          "type": "string",
          "description": "Gets or sets the affected resource type."
        },
        "affectedObjectsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of affected objects."
        },
        "discoveryScope": {
          "$ref": "#/definitions/DiscoveryScopes",
          "description": "Gets or sets the count of affected objects."
        }
      },
      "description": "The site error summary model.",
      "required": [
        "affectedResourceType",
        "affectedObjectsCount",
        "discoveryScope"
      ]
    },
    "DiscoveryScopeStatus": {
      "type": "string",
      "description": "Discovery Scope.",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "DiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "DiscoveryScopes": {
      "type": "string",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "DiscoveryScopes",
        "modelAsString": true
      }
    },
    "DiscoveryState": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "The discovery scope status"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "x-cadl-name": "Errors[]",
          "description": "The list of errors."
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "The run as account ID associated with the discovery."
        }
      },
      "description": "Scoped discovery status.",
      "required": [
        "discoveryScopeStatus",
        "errors",
        "hydratedRunAsAccountId"
      ]
    },
    "Disks": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": " Gets or sets Id of the disk."
        },
        "generatedId": {
          "type": "string",
          "description": "Gets or sets generated Id of the disk."
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Gets or sets the disk details of server.",
      "required": [
        "id",
        "generatedId",
        "maxSizeInBytes",
        "name",
        "diskType",
        "lun",
        "path"
      ]
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "isAgentReportedError": {
          "type": "boolean",
          "description": "Gets a value indicating whether the error originated from a agent or not.",
          "readOnly": true
        },
        "agentErrorCode": {
          "type": "string",
          "description": "Gets the agent error code.",
          "readOnly": true
        },
        "agentErrorMessage": {
          "type": "string",
          "description": "Gets the error message from the agent.",
          "readOnly": true
        },
        "agentErrorPossibleCauses": {
          "type": "string",
          "description": "Gets possible causes for the agent error.",
          "readOnly": true
        },
        "agentErrorRecommendedAction": {
          "type": "string",
          "description": "Gets the recommended action for the agent error.",
          "readOnly": true
        }
      },
      "description": "Error contract returned when some exception occurs in Rest API."
    },
    "Errors": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Gets the message parameters.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the error ID.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the error name.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the error summary message.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/MicrosoftAzureFDSWebRoleHealthErrorDetailsSource",
          "description": "Gets the error source.",
          "readOnly": true
        },
        "updatedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time stamp when the error was updated.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets run as account id used while performing discovery             of entity.",
          "readOnly": true
        },
        "discoveryScope": {
          "$ref": "#/definitions/HealthErrorDetailsDiscoveryScope",
          "description": "Gets discovery scope for which             error is encountered.",
          "readOnly": true
        }
      },
      "description": "The properties of a server machine tracked resource"
    },
    "ExchangeServers": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the ExchangeServer.",
          "readOnly": true
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets Edition of the ExchangeServer.",
          "readOnly": true
        },
        "roles": {
          "type": "string",
          "description": "Gets or sets Roles of the ExchangeServer.",
          "readOnly": true
        },
        "servicePack": {
          "type": "string",
          "description": "Gets or sets ServicePack of the ExchangeServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the ExchangeServer.",
          "readOnly": true
        }
      },
      "description": " ExchangeServer in the guest virtual machine."
    },
    "Features": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the Feature.",
          "readOnly": true
        },
        "featureType": {
          "type": "string",
          "description": "Gets or sets FeatureType of the Feature.",
          "readOnly": true
        },
        "parent": {
          "type": "string",
          "description": "Gets or sets Parent of the Feature.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the Feature.",
          "readOnly": true
        }
      },
      "description": "Feature in the guest virtual machine."
    },
    "GuestOSDetails": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object.  Data related to a machine's operating system.             Serialized and stored as part of Machine Rest object. "
    },
    "HealthErrorDetails": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Gets the message parameters.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the error ID.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the error name.",
          "readOnly": true
        },
        "possibleCauses": {
          "type": "string",
          "description": "Gets the possible causes of error.",
          "readOnly": true
        },
        "recommendedAction": {
          "type": "string",
          "description": "Gets the recommended action to resolve error.",
          "readOnly": true
        },
        "severity": {
          "type": "string",
          "description": "Gets the error severity.",
          "readOnly": true
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the error summary message.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/HealthErrorDetailsSource",
          "description": "Gets the error source.",
          "readOnly": true
        },
        "updatedTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time stamp when the error was updated.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets run as account id used while performing discovery             of entity.",
          "readOnly": true
        },
        "discoveryScope": {
          "$ref": "#/definitions/HealthErrorDetailsDiscoveryScope",
          "description": "Gets discovery scope for which             error is encountered.",
          "readOnly": true
        }
      },
      "description": "Error contract returned when some exception occurs in Rest API."
    },
    "HealthErrorDetailsDiscoveryScope": {
      "type": "string",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "HealthErrorDetailsDiscoveryScope",
        "modelAsString": true
      }
    },
    "HealthErrorDetailsSource": {
      "type": "string",
      "enum": [
        "RefreshFabricLayout",
        "RefreshFabricLayoutGuest",
        "RefreshFabricLayoutDependencyMap"
      ],
      "x-ms-enum": {
        "name": "HealthErrorDetailsSource",
        "modelAsString": true
      }
    },
    "HighlyAvailable": {
      "type": "string",
      "enum": [
        "Unknown",
        "No",
        "Yes"
      ],
      "x-ms-enum": {
        "name": "HighlyAvailable",
        "modelAsString": true
      }
    },
    "HyperVCluster": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HyperVClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A cluster resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HyperVClusterCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVCluster"
          },
          "x-cadl-name": "HyperVCluster[]",
          "description": "The HyperVCluster items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a HyperVCluster list operation."
    },
    "HyperVClusterProperties": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking Hyper-V cluster creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the Hyper-V cluster.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V cluster."
        },
        "functionalLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the functional level of the Hyper-V cluster.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status of the Hyper-V cluster.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets Run as account ID of the Hyper-V cluster."
        },
        "hostFqdnList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets list of hosts (FQDN) currently being tracked by the cluster."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of Hyperv Cluster"
    },
    "HyperVDisk": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string",
          "description": "Id of the disk.",
          "readOnly": true
        },
        "vhdId": {
          "type": "string",
          "description": "VHD Id of the disk.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "HyperVHost": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HyperVHostProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HyperVHostCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVHost"
          },
          "x-cadl-name": "HyperVHost[]",
          "description": "The HyperVHost items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a HyperVHost list operation."
    },
    "HyperVHostProperties": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking Hyper-V host creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the Hyper-V host.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V host."
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the Hyper-V host."
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the Hyper-V host.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of Hyperv Host"
    },
    "HyperVJob": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A job resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HyperVJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVJob"
          },
          "x-cadl-name": "HyperVJob[]",
          "description": "The HyperVJob items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a HyperVJob list operation."
    },
    "HyperVMachine": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HypervMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HyperVMachineCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVMachine"
          },
          "x-cadl-name": "HyperVMachine[]",
          "description": "The HyperVMachine items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a HyperVMachine list operation."
    },
    "HyperVNetworkAdapter": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Network Id.",
          "readOnly": true
        },
        "subnetName": {
          "type": "string",
          "description": "Name of the VM subnet within the virtual network the NIC is attached to.",
          "readOnly": true
        },
        "staticIpAddress": {
          "type": "string",
          "description": "Static IP address.",
          "readOnly": true
        },
        "nicType": {
          "type": "string",
          "description": "Mac address of the NIC.",
          "readOnly": true
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets Mac address of the NIC."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets IP addresses for the machine.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets Network Name."
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets Type of the IP address."
        }
      },
      "description": "Second level object represented in responses as part of Machine REST resource."
    },
    "HyperVSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created."
        }
      },
      "description": "A HyperV SiteResource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "HyperVSiteUsage": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "hostCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of hosts part of the site."
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of clusters part of the site."
        }
      },
      "description": "Hyper-V site usage."
    },
    "HypervMachineProperties": {
      "type": "object",
      "properties": {
        "instanceUuid": {
          "type": "string",
          "description": "On-premise Instance UUID of the machine.",
          "readOnly": true
        },
        "hostFqdn": {
          "type": "string",
          "description": "Host FQDN/IPAddress.",
          "readOnly": true
        },
        "hostId": {
          "type": "string",
          "description": "Host ARM ID.",
          "readOnly": true
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Generation of the virtual machine.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "VM version.",
          "readOnly": true
        },
        "highAvailability": {
          "$ref": "#/definitions/HighlyAvailable",
          "description": "Value indicating whether the VM is highly available.",
          "readOnly": true
        },
        "clusterFqdn": {
          "type": "string",
          "description": "Cluster FQDN/IPAddress.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "Cluster ARM ID.",
          "readOnly": true
        },
        "maxMemoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "Max memory of the virtual machine in MB.",
          "readOnly": true
        },
        "isDynamicMemoryEnabled": {
          "type": "boolean",
          "description": "Value indicating whether dynamic memory is enabled for the VM.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVDisk"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "HyperVDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVNetworkAdapter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "HyperVNetworkAdapter[]",
          "description": "Network adapters attached to the machine.",
          "readOnly": true
        },
        "managementServerType": {
          "type": "string",
          "description": "Management server type captured as a string representation of the\n           \n{Microsoft.Azure.FDS.WebRole.HyperVMachineBase.HyperVMachineBaseProperties.ManagementServerType}\nenumeration.",
          "readOnly": true
        },
        "secureBootTemplateId": {
          "type": "string",
          "description": "Gets or sets the SecureBootTemplateId setting of the VM.",
          "readOnly": true
        },
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether Secure boot is enabled for the VM.",
          "readOnly": true
        },
        "secureBootTemplate": {
          "type": "string",
          "description": "Gets or sets the SecureBootTemplateId setting of the VM.",
          "readOnly": true
        },
        "tpmEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether trusted platform module is enabled on\nthe VM.",
          "readOnly": true
        },
        "ksdEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether key storage device is enabled on the VM.",
          "readOnly": true
        },
        "shieldingRequested": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether shielding is enabled for the VM.",
          "readOnly": true
        },
        "dataProtectionRequested": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether data protection is requested for a VM.",
          "readOnly": true
        },
        "encryptStateAndVmMigrationTraffic": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether encryption of state and migration\ntraffic is enabled for the VM.",
          "readOnly": true
        },
        "virtualizationBasedSecurityOptOut": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether VM virtualization based security is\nenabled for the VM.",
          "readOnly": true
        },
        "powerStatus": {
          "type": "string",
          "description": "Gets the Machine power status.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Gets the VM FQDN.",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "type": "string",
          "description": "Gets the Root location of the VM configuration file.",
          "readOnly": true
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOSDetails": {
          "$ref": "#/definitions/GuestOSDetails",
          "description": "Operating System Details extracted from the guest             bu executing script inside the guest VM. ",
          "readOnly": true
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of applications installed in the guest VM.",
          "readOnly": true
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered\n            or the\nerror while discovering guest details based discovery\n            of the\nmachine.",
          "readOnly": true
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "Whether Refresh Fabric Layout Guest Details has been completed once.\n         \n  Portal will show discovery in progress, if this value is true.",
          "readOnly": true
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not\n            for\nthe VM.",
          "readOnly": true
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection is last started.",
          "readOnly": true
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "description": "Gets or sets when dependency mapping collection was last disabled.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Errors for machine.",
          "readOnly": true
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/ApplicationDiscovery",
          "description": "Gets the data related to application discovery.",
          "readOnly": true
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DependencyMapDiscovery",
          "description": "Gets the data related to dependency map discovery.",
          "readOnly": true
        },
        "staticDiscovery": {
          "$ref": "#/definitions/StaticDiscovery",
          "description": "Gets the data related to static discovery.",
          "readOnly": true
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SQLDiscovery",
          "description": "Gets the data related to SQL discovery.",
          "readOnly": true
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "Gets the data related to Web application discovery.",
          "readOnly": true
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Gets the data related to Oracle discovery.",
          "readOnly": true
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Gets the data related to SpringBoot discovery.",
          "readOnly": true
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of AddressResource"
    },
    "HypervOperationsStatusResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HyperVClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A cluster resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HypervRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HypervRunAsAccountResource"
          },
          "x-cadl-name": "HypervRunAsAccountResource[]",
          "description": "The HypervRunAsAccountResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a HypervRunAsAccountResource list operation."
    },
    "ImportDeleteImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/ImportSites/DeleteJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties",
          "description": "Gets or sets the delete import machines job properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "The delete import machines job web model."
    },
    "ImportDeleteImportMachinesJobDeleteImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportDeleteImportMachinesJob"
          },
          "x-cadl-name": "ImportDeleteImportMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Delete import machines job collection."
    },
    "ImportJobProperties": {
      "type": "object",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "blob name"
        },
        "blobSasUri": {
          "type": "string",
          "description": "blob Sas Uri"
        },
        "jobResult": {
          "$ref": "#/definitions/ImportMachinesJobPropertiesJobResultKnownValues",
          "description": "job result"
        },
        "numberOfMachinesImported": {
          "type": "integer",
          "format": "int32",
          "description": "number of machines imported "
        },
        "blobCreationTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "blobCreation TimeStamp"
        },
        "errorSummary": {
          "$ref": "#/definitions/ImportMachinesJobPropertiesJobErrorSummary",
          "description": "error summary"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Job REST Resource."
    },
    "ImportJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportJobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImportJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportJobResource"
          },
          "x-cadl-name": "ImportJobResource[]",
          "description": "The ImportJobResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ImportJobResource list operation."
    },
    "ImportMachineProperties": {
      "type": "object",
      "properties": {
        "firmware": {
          "type": "string",
          "description": "Firmware of the machine.",
          "readOnly": true
        },
        "percentageCpuUtilization": {
          "type": "number",
          "format": "float",
          "description": "CPU utilization.",
          "readOnly": true
        },
        "percentageMemoryUtilization": {
          "type": "number",
          "format": "float",
          "description": "Memory utilization.",
          "readOnly": true
        },
        "numberOfDisks": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks.",
          "readOnly": true
        },
        "totalDiskReadOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Total disk read operations per second.",
          "readOnly": true
        },
        "totalDiskWriteOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Total disk write operations per second.",
          "readOnly": true
        },
        "totalDiskWriteThroughput": {
          "type": "number",
          "format": "float",
          "description": "Total disk write throughput.",
          "readOnly": true
        },
        "totalDiskReadThroughput": {
          "type": "number",
          "format": "float",
          "description": "Total disk read throughput.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address.",
          "readOnly": true
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "IP Addresses.",
          "readOnly": true
        },
        "machineId": {
          "type": "string",
          "description": "Machine ID.",
          "readOnly": true
        },
        "machineManagerId": {
          "type": "string",
          "description": "Machine manager ID.",
          "readOnly": true
        },
        "numberOfNetworkAdapters": {
          "type": "integer",
          "format": "int32",
          "description": "Number of network adapters.",
          "readOnly": true
        },
        "networkInThroughput": {
          "type": "number",
          "format": "float",
          "description": "Network in throughput.",
          "readOnly": true
        },
        "networkOutThroughput": {
          "type": "number",
          "format": "float",
          "description": "Network out throughput.",
          "readOnly": true
        },
        "serverType": {
          "type": "string",
          "description": "Server type.",
          "readOnly": true
        },
        "hypervisor": {
          "type": "string",
          "description": "Fabric type.",
          "readOnly": true
        },
        "hypervisorVersionNumber": {
          "type": "string",
          "description": "Hypervisor version number.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebRoleImportDisk"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "x-cadl-name": "WebRoleImportDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Server FQDN.",
          "readOnly": true
        },
        "storageInUseGb": {
          "type": "number",
          "format": "float",
          "description": "Total storage in use.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/WebRoleOperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for machine properties."
    },
    "ImportMachineResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "An machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImportMachineResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportMachineResource"
          },
          "x-cadl-name": "ImportMachineResource[]",
          "description": "The ImportMachineResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ImportMachineResource list operation."
    },
    "ImportMachinesJobPropertiesJobErrorSummary": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "errors list"
        },
        "errorCount": {
          "type": "integer",
          "format": "int32",
          "description": "error count"
        },
        "warningCount": {
          "type": "integer",
          "format": "int32",
          "description": "warning Count"
        }
      },
      "description": "Job Error Summary"
    },
    "ImportMachinesJobPropertiesJobResultKnownValues": {
      "type": "string",
      "enum": [
        "Unknown",
        "Completed",
        "CompletedWithWarnings",
        "CompletedWithErrors",
        "Failed",
        "WaitingForBlobUpload",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "ImportMachinesJobPropertiesJobResultKnownValues",
        "modelAsString": true
      }
    },
    "ImportSiteResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A ImportSiteResource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ImportSiteResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ImportSiteResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ImportSiteResource."
    },
    "ImportSiteResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the ImportSiteResource."
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Gets operation status.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Gets operation start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Gets operation end time.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the display name of the Job.",
          "readOnly": true
        },
        "clientRequestId": {
          "type": "string",
          "description": "Gets the client request Id used in the operation execution context.",
          "readOnly": true
        },
        "activityId": {
          "type": "string",
          "description": "Gets the activity Id used in the operation execution context.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Job REST Resource."
    },
    "LayoutUpdateSources": {
      "type": "string",
      "enum": [
        "RefreshFabricLayout",
        "RefreshFabricLayoutGuest",
        "RefreshFabricLayoutDependencyMap"
      ],
      "x-ms-enum": {
        "name": "LayoutUpdateSources",
        "modelAsString": true
      }
    },
    "MachineMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "arm id of the machine."
        },
        "dependencyMapping": {
          "type": "string",
          "description": "value representing state of dependency mapping (enabled/disabled)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "machine tags"
        }
      },
      "description": "The properties of Machine MetaData",
      "required": [
        "id",
        "dependencyMapping",
        "tags"
      ]
    },
    "MachineMetadataList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineMetadata"
          },
          "x-cadl-name": "MachineMetadata[]",
          "description": "The list of Machine MetaData."
        }
      },
      "description": "The list of Machine MetaData.",
      "required": [
        "value"
      ]
    },
    "MachineResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VmwareMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/object"
          },
          "x-cadl-name": "Record<object>",
          "description": "Gets tags that can be used with ODATA.",
          "readOnly": true
        }
      },
      "description": "An machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MachineResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineResource"
          },
          "x-cadl-name": "MachineResource[]",
          "description": "The MachineResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a MachineResource list operation."
    },
    "MachineSoftwareInventoryProperties": {
      "type": "object",
      "properties": {
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the machine entity.",
          "readOnly": true
        }
      },
      "description": "Class for machine software inventory properties."
    },
    "MasterSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MasterSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created."
        }
      },
      "description": "A MasterSite",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MasterSiteProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/V202007MasterSitePropertiesPublicNetworkAccess",
          "description": "Gets or sets the state of public network access."
        },
        "allowMultipleSites": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether multiple sites per site type are\nallowed."
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the sites that are a part of Master Site.\n            The key\nshould contain the Site ARM name."
        },
        "customerStorageAccountArmId": {
          "type": "string",
          "description": "Gets or sets a value for customer storage account ARM id."
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PendpointConnection"
          },
          "x-cadl-name": "PendpointConnection[]",
          "description": "Gets the private endpoint connections.",
          "readOnly": true
        },
        "nestedSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the nested sites under Master Site.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        }
      },
      "description": "Class for site properties."
    },
    "MasterSiteUpdate": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/MasterSiteUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the MasterSite."
    },
    "MasterSiteUpdateProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/V202007MasterSitePropertiesPublicNetworkAccess",
          "description": "Gets or sets the state of public network access."
        },
        "allowMultipleSites": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether multiple sites per site type are\nallowed."
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the sites that are a part of Master Site.\n            The key\nshould contain the Site ARM name."
        },
        "customerStorageAccountArmId": {
          "type": "string",
          "description": "Gets or sets a value for customer storage account ARM id."
        }
      },
      "description": "The updatable properties of the MasterSite."
    },
    "MicrosoftAzureFDSWebRoleHealthErrorDetailsSource": {
      "type": "string",
      "enum": [
        "RefreshFabricLayout",
        "RefreshFabricLayoutGuest",
        "RefreshFabricLayoutDependencyMap"
      ],
      "x-ms-enum": {
        "name": "MicrosoftAzureFDSWebRoleHealthErrorDetailsSource",
        "modelAsString": true
      }
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateEndpointConnectionPropertiesV2": {
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "array of group ids",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "provisioning state enum",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsResourceId",
          "description": "private endpoints",
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionState",
          "description": "private endpoints connection state"
        }
      },
      "description": "PrivateEndpointConnectionPropertiesV2"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus",
          "description": "state status"
        },
        "description": {
          "type": "string",
          "description": "description string"
        },
        "actionsRequired": {
          "type": "string",
          "description": "actions required"
        }
      },
      "description": "Service Connection State"
    },
    "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus": {
      "type": "string",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "MicrosoftAzureMigratePrivateEndpointModelsPrivateLinkServiceConnectionStateStatus",
        "modelAsString": true
      }
    },
    "MicrosoftAzureMigratePrivateEndpointModelsResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id name",
          "readOnly": true
        }
      },
      "description": "PrivateEndpointModelsResourceId"
    },
    "NetworkAdapters": {
      "type": "object",
      "properties": {
        "nicId": {
          "type": "string",
          "description": " Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": " Gets or sets the MAC address of the machine."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the IP addresses of the machine"
        },
        "networkName": {
          "type": "string",
          "description": " Gets or sets the virtual network name"
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets the type of the IP address."
        }
      },
      "description": "Gets or sets the network adapters of the server.",
      "required": [
        "nicId",
        "macAddress",
        "ipAddressList",
        "networkName",
        "ipAddressType"
      ]
    },
    "OperatingSystem": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "OperatingSystemDetails": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the OS Type."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the OS Name."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the OS Version."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the OS architecture."
        }
      },
      "description": "Data related to a machine's operating system.",
      "required": [
        "osType",
        "osName",
        "osVersion",
        "osArchitecture"
      ]
    },
    "OperationStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the operation name.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status of the operation. ARM expects the terminal status to be one\nof\n            Succeeded/ Failed/ Canceled. All other values imply that the\noperation is still running.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Gets the error.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationStatusProperties",
          "description": "Gets the custom data.",
          "readOnly": true
        }
      },
      "description": "Operation status REST resource."
    },
    "OperationStatusError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Gets the error message.",
          "readOnly": true
        }
      },
      "description": "Class for operation status errors."
    },
    "OperationStatusProperties": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "description": "Gets or sets the result or output of the workflow."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for operation result properties."
    },
    "OracleDiscovery": {
      "type": "object",
      "properties": {
        "totalInstanceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered instances."
        },
        "totalDatabaseCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered databases."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's Oracle discovery.",
      "required": [
        "totalInstanceCount",
        "totalDatabaseCount",
        "discoveryScopeStatus"
      ]
    },
    "OtherDatabases": {
      "type": "object",
      "properties": {
        "databaseType": {
          "type": "string",
          "description": "Gets or sets DatabaseType of the OtherDatabase.",
          "readOnly": true
        },
        "instance": {
          "type": "string",
          "description": "Gets or sets Instance of the OtherDatabase.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the OtherDatabase.",
          "readOnly": true
        }
      },
      "description": "OtherDatabase in the guest virtual machine."
    },
    "PendpointConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Relative URL to get this Sites.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets the resource type.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "Gets the tag for optimistic concurrency control.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateEndpointConnectionPropertiesV2",
          "description": "Gets the properties of the object.",
          "readOnly": true
        }
      },
      "description": "REST model used to encapsulate the user visible state of a PrivateEndpoint."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftAzureMigratePrivateEndpointModelsPrivateEndpointConnectionPropertiesV2",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A vcenter resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-cadl-name": "PrivateEndpointConnection[]",
          "description": "The PrivateEndpointConnection items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a PrivateEndpointConnection list operation."
    },
    "ProcessorInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name\\model of a processor."
        },
        "numberOfSockets": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of sockets."
        },
        "numberOfCoresPerSocket": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the total number of cores in a socket."
        }
      },
      "description": "Processor Information."
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "RunAsAccountRunAsAccountProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the run as account.",
          "readOnly": true
        },
        "credentialType": {
          "type": "string",
          "description": "Gets the credential type of the run as account.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Timestamp marking run as account creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Timestamp marking last updated on the run as account.",
          "readOnly": true
        },
        "applianceName": {
          "type": "string",
          "description": "Gets the appliance name of the run as account.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for run as account properties."
    },
    "SQLDiscovery": {
      "type": "object",
      "properties": {
        "successfullyDiscoveredServerCount": {
          "type": "integer",
          "format": "int32",
          "description": " successfully Discovered ServerCount"
        },
        "totalServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "total Server Count"
        },
        "sqlMetadataHydratedRunAsAccountId": {
          "type": "string",
          "description": "sql Metadata Hydrated RunAsAccountId"
        },
        "sqlMetadataDiscoveryPipe": {
          "$ref": "#/definitions/SQLDiscoverySqlMetadataDiscoveryPipe",
          "description": "sql Metadata DiscoveryPipe"
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/SQLDiscoveryScopeStatus",
          "description": "discovery Scope Status"
        }
      },
      "description": "Contains data related SQL discovery."
    },
    "SQLDiscoveryScopeStatus": {
      "type": "string",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "SQLDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "SQLDiscoverySqlMetadataDiscoveryPipe": {
      "type": "string",
      "enum": [
        "Unknown",
        "VMware",
        "PowerShell",
        "SSH",
        "CIM",
        "Other"
      ],
      "x-ms-enum": {
        "name": "SQLDiscoverySqlMetadataDiscoveryPipe",
        "modelAsString": true
      }
    },
    "SasUriResponse": {
      "type": "object",
      "properties": {
        "jobArmId": {
          "type": "string",
          "description": "Gets or sets the job ARM ID."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the SAS URI."
        }
      },
      "description": "Import URI response class."
    },
    "ServerJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerJobResource"
          },
          "x-cadl-name": "ServerJobResource[]",
          "description": "The ServerJobResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ServerJobResource list operation."
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": " Gets the Display name of the machine."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the server."
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapters"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "NetworkAdapters[]",
          "description": "The name of the server machine"
        },
        "hydratedFqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN of machine which can be changed."
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disks"
          },
          "x-cadl-name": "Disks[]",
          "description": "Gets or sets the disk details of server.",
          "x-ms-identifiers": []
        },
        "validationRequired": {
          "type": "string",
          "description": "The name of the server machine"
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOSDetails": {
          "$ref": "#/definitions/GuestOSDetails",
          "description": " Operating System Details extracted from the guest"
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int64",
          "description": " Number of applications installed in the guest VM."
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered."
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "The name of the server machine"
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not for the VM."
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": " Gets or sets when dependency mapping collection is last started."
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection was last disabled."
        },
        "runAsAccountId": {
          "type": "string",
          "description": " Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "x-cadl-name": "Errors[]",
          "description": "Errors for machine."
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/DiscoveryState",
          "description": "application discovery state of the machine."
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DiscoveryState",
          "description": "dependency map discovery state of the machine."
        },
        "staticDiscovery": {
          "$ref": "#/definitions/DiscoveryState",
          "description": "discovery state of the machine."
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SqlDiscovery",
          "description": "SQL discovery state of the machine."
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "WebApp discovery state of the machine."
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Oracle discovery state of the machine."
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Spring Boot discovery state of the machine."
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server."
        },
        "numberofProcessorCores": {
          "type": "integer",
          "format": "int64",
          "description": "number of processor cores of the machine."
        },
        "allocatedMemoryInMB": {
          "type": "number",
          "format": "double",
          "description": "allocated memory in MB of the machine."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystemDetails",
          "description": "Operating system details of the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "bios serial number of the machine."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted."
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking created timestamp of the machine."
        },
        "updatedTimestamp": {
          "type": "string",
          "description": " Gets the timestamp marking last updated on the machine."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Server machine tags."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the server resource."
        }
      },
      "description": "Server REST resource.",
      "required": [
        "displayName",
        "fqdn",
        "networkAdapters",
        "hydratedFqdn",
        "validationRequired",
        "firmware",
        "guestOSDetails",
        "numberOfApplications",
        "guestDetailsDiscoveryTimestamp",
        "isGuestDetailsDiscoveryInProgress",
        "dependencyMapping",
        "dependencyMappingStartTime",
        "dependencyMappingEndTime",
        "runAsAccountId",
        "applianceNames",
        "errors",
        "applicationDiscovery",
        "dependencyMapDiscovery",
        "staticDiscovery",
        "sqlDiscovery",
        "webAppDiscovery",
        "oracleDiscovery",
        "springBootDiscovery",
        "appsAndRoles",
        "numberofProcessorCores",
        "allocatedMemoryInMB",
        "operatingSystemDetails",
        "biosSerialNumber",
        "biosGuid",
        "isDeleted",
        "createdTimestamp",
        "updatedTimestamp"
      ]
    },
    "ServerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A machine resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A run as account resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServerRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerRunAsAccountResource"
          },
          "x-cadl-name": "ServerRunAsAccountResource[]",
          "description": "The ServerRunAsAccountResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ServerRunAsAccountResource list operation."
    },
    "ServerSiteResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A ServerSiteResource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServerSiteResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ServerSiteResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ServerSiteResource."
    },
    "ServerSiteResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The updatable properties of the ServerSiteResource."
    },
    "ServerSiteUsageResponse": {
      "type": "object",
      "properties": {
        "runAsAccounts": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "serverCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of servers part of the site."
        }
      },
      "description": "The properties of ServerSiteUsageResponse.",
      "required": [
        "runAsAccounts",
        "serverCount"
      ]
    },
    "SharePointServers": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the SharePointServer.",
          "readOnly": true
        },
        "isEnterprise": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the SharePointServer is Enterprise.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the SharePointServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SharePointServer.",
          "readOnly": true
        }
      },
      "description": " SharePointServer in the guest virtual machine."
    },
    "SiteAgentProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the ID of the agent.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the agent.",
          "readOnly": true
        },
        "lastHeartBeatUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the last heartbeat time of the agent in UTC.",
          "readOnly": true
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Gets or sets the key vault URI."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Gets or sets the key vault ARM Id."
        }
      },
      "description": "Class for site agent properties."
    },
    "SiteErrorSummary": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Appliance Name."
        },
        "discoveryScopeErrorSummaries": {
          "$ref": "#/definitions/DiscoveryScopeErrorSummary",
          "description": "Gets the error message."
        }
      },
      "description": "The properties of ServerSiteResource.",
      "required": [
        "applianceName",
        "discoveryScopeErrorSummaries"
      ]
    },
    "SiteErrorSummaryCollection": {
      "type": "object",
      "properties": {
        "siteErrorSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteErrorSummary"
          },
          "x-ms-identifiers": [
            "applianceName"
          ],
          "x-cadl-name": "SiteErrorSummary[]",
          "description": "Gets or sets the list of site error summary."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to fetch more models."
        }
      },
      "description": "Gets or sets the list of site error summary."
    },
    "SiteHealthSummary": {
      "type": "object",
      "properties": {
        "applianceName": {
          "type": "string",
          "description": "Appliance Name."
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets the error message."
        },
        "summaryMessage": {
          "type": "string",
          "description": "Gets the summary message."
        },
        "errorId": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the error Id."
        },
        "errorCode": {
          "type": "string",
          "description": "Gets the error code."
        },
        "affectedObjectsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the count of affected objects."
        },
        "hitCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the hit count of the error."
        },
        "severity": {
          "type": "string",
          "description": "Gets the severity of error.."
        },
        "remediationGuidance": {
          "type": "string",
          "description": "Gets the remediation guidance."
        },
        "affectedResourceType": {
          "type": "string",
          "description": "Gets the affected resource type."
        },
        "affectedResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets or sets the affected resources."
        },
        "fabricLayoutUpdateSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LayoutUpdateSources"
          },
          "x-cadl-name": "LayoutUpdateSources[]",
          "description": "RM ID of migration hub solution for SDS."
        }
      },
      "description": "The properties of ServerSiteResource.",
      "required": [
        "applianceName",
        "errorMessage",
        "summaryMessage",
        "errorId",
        "errorCode",
        "affectedObjectsCount",
        "hitCount",
        "severity",
        "remediationGuidance",
        "affectedResourceType",
        "affectedResources",
        "fabricLayoutUpdateSources"
      ]
    },
    "SiteHealthSummaryCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteHealthSummary"
          },
          "x-ms-identifiers": [
            "applianceName"
          ],
          "x-cadl-name": "SiteHealthSummary[]",
          "description": "Gets the list of SiteHealthSummary.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of SiteHealthSummary."
    },
    "SiteProperties": {
      "type": "object",
      "properties": {
        "masterSiteId": {
          "type": "string",
          "description": "Gets the Master Site this site is linked to.",
          "readOnly": true
        },
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "SiteSpnProperties": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Gets or sets the tenant Id for the service principal with which the\non-premise\n            management/data plane components would communicate with\nour Azure services."
        },
        "applicationId": {
          "type": "string",
          "description": "Gets or sets the application/client Id for the service principal with which\nthe\n            on-premise management/data plane components would communicate\nwith our Azure \n            services."
        },
        "objectId": {
          "type": "string",
          "description": "Gets or sets the object Id of the service principal with which the on-premise\n\n           management/data plane components would communicate with our Azure\nservices."
        },
        "audience": {
          "type": "string",
          "description": "Gets or sets the intended audience for the service principal."
        },
        "aadAuthority": {
          "type": "string",
          "description": "Gets or sets the AAD Authority URL which was used to request the token for\nthe\n            service principal."
        },
        "rawCertData": {
          "type": "string",
          "description": "Gets or sets the raw certificate data for building certificate expiry flows."
        }
      },
      "description": "Class for site properties."
    },
    "SiteUsageResponse": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "hostCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of hosts part of the site."
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of clusters part of the site."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Hyper-V site usage.",
      "required": [
        "machineCount",
        "runAsAccountCount",
        "hostCount",
        "clusterCount"
      ]
    },
    "SitesProperties": {
      "type": "object",
      "properties": {
        "masterSiteId": {
          "type": "string",
          "description": "Gets the Master Site this site is linked to.",
          "readOnly": true
        },
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for\ncommunication\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "applianceName": {
          "type": "string",
          "description": "Gets or sets the Appliance Name."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "Gets or sets the ARM ID of migration hub solution for SDS."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Gets the service endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "SpringBootDiscovery": {
      "type": "object",
      "properties": {
        "totalInstanceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered instances."
        },
        "totalApplicationCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered applications."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's spring boot discovery.",
      "required": [
        "totalInstanceCount",
        "totalApplicationCount",
        "discoveryScopeStatus"
      ]
    },
    "SqlDiscovery": {
      "type": "object",
      "properties": {
        "successfullyDiscoveredServerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of SQL servers successfully discovered by SQL agent."
        },
        "totalServerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets total number of SQL servers."
        },
        "sqlMetadataHydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID with which SQL Metadata worked successfully"
        },
        "sqlMetadataDiscoveryPipe": {
          "type": "string",
          "description": "Gets or sets the discovery pipe used for fetching SQL Server's metadata from registry."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's SQL discovery.",
      "required": [
        "successfullyDiscoveredServerCount",
        "totalServerCount",
        "sqlMetadataHydratedRunAsAccountId",
        "sqlMetadataDiscoveryPipe",
        "discoveryScopeStatus"
      ]
    },
    "SqlServers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the SQLServer.",
          "readOnly": true
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets Edition of the SQLServer.",
          "readOnly": true
        },
        "servicePack": {
          "type": "string",
          "description": "Gets or sets ServicePack of the SQLServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SQLServer.",
          "readOnly": true
        },
        "clustered": {
          "type": "string",
          "description": "Gets or sets Clustered of the SQLServer.",
          "readOnly": true
        },
        "clusterName": {
          "type": "string",
          "description": "Gets or sets ClusterName of the SQLServer.",
          "readOnly": true
        },
        "dnsHostName": {
          "type": "string",
          "description": "Gets or sets the DNS host name of SQLServer.",
          "readOnly": true
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the port of the SQLServer.",
          "readOnly": true
        },
        "commaSeparatedIPs": {
          "type": "string",
          "description": "Gets or sets the comma separated IPs of the SQLServer.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets the status.",
          "readOnly": true
        },
        "isNamedPipeEnabled": {
          "type": "boolean",
          "description": "Gets or sets the value which reflects if Named Pipe is enabled or not.",
          "readOnly": true
        },
        "isTCPIPEnabled": {
          "type": "boolean",
          "description": "Gets or sets the value which reflects if Named Pipe is enabled or not.",
          "readOnly": true
        },
        "namedPipeName": {
          "type": "string",
          "description": "Gets the status.",
          "readOnly": true
        }
      },
      "description": "SQLServer in the guest virtual machine."
    },
    "StaticDiscovery": {
      "type": "object",
      "properties": {
        "discoveryScopeStatus": {
          "$ref": "#/definitions/StaticDiscoveryScopeStatus",
          "description": "Gets discovery scope status.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets errors for discovery scope.",
          "readOnly": true
        },
        "hydratedRunAsAccountId": {
          "type": "string",
          "description": "Gets the run as account ID with which feature worked successfully.\n           \nIt is discovered by the agent from the list of credentials.",
          "readOnly": true
        }
      },
      "description": "Contains data related static data discovery scope."
    },
    "StaticDiscoveryScopeStatus": {
      "type": "string",
      "enum": [
        "DiscoverySucceededAtleastOnce",
        "DiscoveryFailed",
        "RunAsAccountNotAssociated",
        "DiscoveryNotStarted",
        "DiscoveryInProgress",
        "Disabled",
        "DiscoveryPartiallySucceded",
        "DiscoverySucceeded"
      ],
      "x-ms-enum": {
        "name": "StaticDiscoveryScopeStatus",
        "modelAsString": true
      }
    },
    "SystemCenters": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "description": "Gets or sets ProductName of the SystemCenter.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the SystemCenter.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets Version of the SystemCenter.",
          "readOnly": true
        }
      },
      "description": " SystemCenter in the guest virtual machine."
    },
    "UpdateMachineDepMapStatus": {
      "type": "object",
      "properties": {
        "machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateMachineDepMapStatusDependencyMapMachineInput"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "UpdateMachineDepMapStatusDependencyMapMachineInput[]",
          "description": "Gets or sets the machine collection."
        }
      },
      "description": "Defines class that represents input to enable or disable DMP on machine\n      \n      for cosmos entity operation."
    },
    "UpdateMachineDepMapStatusDependencyMapMachineInput": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Gets or sets the ARM id of the machine."
        },
        "isDependencyMapToBeEnabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether\n            dependency mapping is to\nbe enabled or not."
        }
      },
      "description": "Machine class."
    },
    "V20180501PreviewVmwareRunAsAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Relative URL to get this run as account.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the Run as account.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type =\nMicrosoft.OffAzure/VMWareSites/RunAsAccounts.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      },
      "description": "Run as account REST Resource."
    },
    "V20180501PreviewVmwareRunAsAccountVmwareRunAsAccountCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20180501PreviewVmwareRunAsAccount"
          },
          "x-cadl-name": "V20180501PreviewVmwareRunAsAccount[]",
          "description": "Gets the list of run as accounts.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of VMware run as accounts."
    },
    "V20190501PreviewSasUriResponse": {
      "type": "object",
      "properties": {
        "jobArmId": {
          "type": "string",
          "description": "Gets or sets the job ARM ID."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the SAS URI."
        }
      },
      "description": "Import URI response class."
    },
    "V20200201DeleteImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/ImportSites/DeleteJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbDeleteImportedMachinesJobEntityDeleteImportedMachinesJobProperties",
          "description": "Gets or sets the delete import machines job properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "The delete import machines job web model."
    },
    "V20200201ExportImportedMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type name for export job.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDbExportImportedMachinesJobEntityExportImportedMachinesJobEntityProperties",
          "description": "Gets or sets the export machines job properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "Export machines job REST resource."
    },
    "V20200201ExportImportedMachinesJobExportImportedMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ExportImportedMachinesJob"
          },
          "x-cadl-name": "V20200201ExportImportedMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Export imported machines job collection."
    },
    "V20200201ImportMachinesJob": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Handled by resource provider. Type =\nMicrosoft.OffAzure/ImportSites/jobs/importJobs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CosmosDBImportMachinesJobEntityImportMachinesJobProperties",
          "description": "Gets or sets the import job properties."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the relative ARM name to get job."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the Job ID."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the Job status."
        },
        "startTime": {
          "type": "string",
          "description": "Gets or sets the Job start time."
        },
        "endTime": {
          "type": "string",
          "description": "Gets or sets the Job end time."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the Display name."
        }
      },
      "description": "Import machines Job REST Resource."
    },
    "V20200201ImportMachinesJobImportMachinesJobCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V20200201ImportMachinesJob"
          },
          "x-cadl-name": "V20200201ImportMachinesJob[]",
          "description": "Gets the list of jobs.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the value of next link.",
          "readOnly": true
        }
      },
      "description": "Collection of VMware jobs."
    },
    "V202007MasterSitePropertiesPublicNetworkAccess": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "V202007MasterSitePropertiesPublicNetworkAccess",
        "modelAsString": true
      }
    },
    "VCenter": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VCenterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A vcenter resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VCenterCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VCenter"
          },
          "x-cadl-name": "VCenter[]",
          "description": "The VCenter items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a VCenter list operation."
    },
    "VCenterProperties": {
      "type": "object",
      "properties": {
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the vCenter."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Gets the errors.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking vCenter creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the vCenter.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the vCenter."
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the port of the vCenter."
        },
        "version": {
          "type": "string",
          "description": "Gets the version of the vCenter.",
          "readOnly": true
        },
        "perfStatisticsLevel": {
          "type": "string",
          "description": "Gets the performance statistics enabled on the vCenter.",
          "readOnly": true
        },
        "instanceUuid": {
          "type": "string",
          "description": "Gets the instance UUID of the vCenter.",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Gets or sets the friendly name of the vCenter."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource"
    },
    "VMwareSite": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SitesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "Gets or sets the eTag for concurrency control."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the Azure location in which Sites is created."
        }
      },
      "description": "A VMwareSite",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VMwareSiteUsage": {
      "type": "object",
      "properties": {
        "machineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site."
        },
        "runAsAccountCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site."
        },
        "vCenterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of vCenters part of the site."
        }
      },
      "description": "VMware site usage."
    },
    "VersionedV202001ExportMachineErrorsRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequestExportMachineErrorsProperties",
          "description": "Gets or sets the properties."
        }
      },
      "description": "The body of export machine errors request."
    },
    "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsProperties": {
      "type": "object",
      "properties": {
        "discoveryScope": {
          "$ref": "#/definitions/VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope",
          "description": "Gets or sets the discovery scope."
        }
      },
      "description": "The Properties class for export machine errors request body."
    },
    "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope": {
      "type": "string",
      "enum": [
        "AppsAndRoles",
        "DependencyMap",
        "StaticData",
        "SQLServerConnectionInfo"
      ],
      "x-ms-enum": {
        "name": "VersionedV202001ExportMachineErrorsRequestExportMachineErrorsPropertiesDiscoveryScope",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2018-05-01-preview",
        "2019-05-01-preview",
        "2020-01-01",
        "2020-01-01-preview",
        "2020-02-01",
        "2020-07-07",
        "2020-07-10",
        "2020-08-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2018_05_01_preview",
            "value": "2018-05-01-preview"
          },
          {
            "name": "v2019_05_01_preview",
            "value": "2019-05-01-preview"
          },
          {
            "name": "v2020_01_01",
            "value": "2020-01-01"
          },
          {
            "name": "v2020_01_01_preview",
            "value": "2020-01-01-preview"
          },
          {
            "name": "v2020_02_01",
            "value": "2020-02-01"
          },
          {
            "name": "v2020_07_07",
            "value": "2020-07-07"
          },
          {
            "name": "v2020_07_10",
            "value": "2020-07-10"
          },
          {
            "name": "v2020_08_01_preview",
            "value": "2020-08-01-preview"
          }
        ]
      }
    },
    "VmwareDisk": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Disk UUID.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Label of the disk.",
          "readOnly": true
        },
        "diskProvisioningPolicy": {
          "type": "string",
          "description": "The provisioning policy of the disk.\n            It is Thin or Thick or\nUnknown for the VMWare VMDK.",
          "readOnly": true
        },
        "diskScrubbingPolicy": {
          "type": "string",
          "description": "The scrubbing policy of disks which can be\n            eagerly zeroed or\nlazily zeroed.",
          "readOnly": true
        },
        "diskMode": {
          "type": "string",
          "description": "Disk mode property used for identifying independent disks.",
          "readOnly": true
        },
        "controllerType": {
          "type": "string",
          "description": "Gets or sets a value indicating the type of the disk controller type.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "VmwareHostProperties": {
      "type": "object",
      "properties": {
        "agentDetails": {
          "type": "string",
          "description": "On-premises agent details."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Service endpoint."
        },
        "discoverySolutionId": {
          "type": "string",
          "description": "RM ID of migration hub solution for SDS."
        },
        "applianceName": {
          "type": "string",
          "description": "Appliance Name."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of VMwareSiteResource",
      "required": [
        "agentDetails",
        "serviceEndpoint",
        "discoverySolutionId",
        "applianceName"
      ]
    },
    "VmwareHostResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VmwareHostProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareHostResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareHostResource"
          },
          "x-cadl-name": "VmwareHostResource[]",
          "description": "The VmwareHostResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a VmwareHostResource list operation."
    },
    "VmwareJobResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A host resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareJobResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareJobResource"
          },
          "x-cadl-name": "VmwareJobResource[]",
          "description": "The VmwareJobResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a VmwareJobResource list operation."
    },
    "VmwareMachineProperties": {
      "type": "object",
      "properties": {
        "hostProcessorInfo": {
          "$ref": "#/definitions/ProcessorInfo",
          "description": "Gets the Information about Host Processor.",
          "readOnly": true
        },
        "vCenterFQDN": {
          "type": "string",
          "description": "VCenter FQDN/IPAddress.",
          "readOnly": true
        },
        "vCenterId": {
          "type": "string",
          "description": "VCenter ARM ID.",
          "readOnly": true
        },
        "instanceUuid": {
          "type": "string",
          "description": "On-premise Instance UUID of the machine.",
          "readOnly": true
        },
        "dataCenterScope": {
          "type": "string",
          "description": "Scope of the data center.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "User description of the machine.",
          "readOnly": true
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareDisk"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "VmwareDisk[]",
          "description": "Disks attached to the machine.",
          "readOnly": true
        },
        "hostInMaintenanceMode": {
          "type": "boolean",
          "description": "Indicates whether the host is in maintenance mode.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The host name.",
          "readOnly": true
        },
        "hostPowerState": {
          "type": "string",
          "description": "The host power state.",
          "readOnly": true
        },
        "hostVersion": {
          "type": "string",
          "description": "The host version.",
          "readOnly": true
        },
        "networkAdapters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareNetworkAdapter"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "VmwareNetworkAdapter[]",
          "description": "Network adapters attached to the machine.",
          "readOnly": true
        },
        "vMwareToolsStatus": {
          "type": "string",
          "description": "VMware tools status.",
          "readOnly": true
        },
        "vMwareToolsVersion": {
          "type": "string",
          "description": "VMware tools version.",
          "readOnly": true
        },
        "changeTrackingSupported": {
          "type": "boolean",
          "description": "Value indicating whether change tracking is supported.",
          "readOnly": true
        },
        "changeTrackingEnabled": {
          "type": "boolean",
          "description": "Value indicating whether change tracking is enabled.",
          "readOnly": true
        },
        "maxSnapshots": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of snapshots for the VM.            Default value is -1.",
          "readOnly": true
        },
        "diskEnabledUuid": {
          "type": "string",
          "description": "Gets or sets whether Disk Enabled UUID is set or not.",
          "readOnly": true
        },
        "numberOfSnapshots": {
          "type": "integer",
          "format": "int32",
          "description": "Number of snapshots for the VM.             Default value is -1.",
          "readOnly": true
        },
        "altGuestName": {
          "type": "string",
          "description": "Gets or sets the machine alt guest name.",
          "readOnly": true
        },
        "powerStatus": {
          "type": "string",
          "description": "Gets the Machine power status.",
          "readOnly": true
        },
        "vmFqdn": {
          "type": "string",
          "description": "Gets the VM FQDN.",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "type": "string",
          "description": "Gets the Root location of the VM configuration file.",
          "readOnly": true
        },
        "firmware": {
          "type": "string",
          "description": "Gets or sets the firmware."
        },
        "guestOSDetails": {
          "$ref": "#/definitions/GuestOSDetails",
          "description": "Operating System Details extracted from the guest\n            bu executing\nscript inside the guest VM.",
          "readOnly": true
        },
        "numberOfApplications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of applications installed in the guest VM.",
          "readOnly": true
        },
        "guestDetailsDiscoveryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the Guest Details was discovered\n            or the\nerror while discovering guest details based discovery\n            of the\nmachine.",
          "readOnly": true
        },
        "isGuestDetailsDiscoveryInProgress": {
          "type": "boolean",
          "description": "Whether Refresh Fabric Layout Guest Details has been completed once.\n         \n  Portal will show discovery in progress, if this value is true.",
          "readOnly": true
        },
        "dependencyMapping": {
          "type": "string",
          "description": "Gets or sets if dependency mapping feature is enabled or not\n            for\nthe VM.",
          "readOnly": true
        },
        "dependencyMappingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets when dependency mapping collection is last started.",
          "readOnly": true
        },
        "dependencyMappingEndTime": {
          "type": "string",
          "description": "Gets or sets when dependency mapping collection was last disabled.",
          "readOnly": true
        },
        "runAsAccountId": {
          "type": "string",
          "description": "Gets or sets the run as account ID of the machine."
        },
        "applianceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets the appliance names.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "x-cadl-name": "HealthErrorDetails[]",
          "description": "Errors for machine.",
          "readOnly": true
        },
        "applicationDiscovery": {
          "$ref": "#/definitions/ApplicationDiscovery",
          "description": "Gets the data related to application discovery.",
          "readOnly": true
        },
        "dependencyMapDiscovery": {
          "$ref": "#/definitions/DependencyMapDiscovery",
          "description": "Gets the data related to dependency map discovery.",
          "readOnly": true
        },
        "staticDiscovery": {
          "$ref": "#/definitions/StaticDiscovery",
          "description": "Gets the data related to static discovery.",
          "readOnly": true
        },
        "sqlDiscovery": {
          "$ref": "#/definitions/SqlDiscovery",
          "description": "Gets the data related to SQL discovery.",
          "readOnly": true
        },
        "webAppDiscovery": {
          "$ref": "#/definitions/WebAppDiscovery",
          "description": "Gets the data related to Web application discovery.",
          "readOnly": true
        },
        "oracleDiscovery": {
          "$ref": "#/definitions/OracleDiscovery",
          "description": "Gets the data related to Oracle discovery.",
          "readOnly": true
        },
        "springBootDiscovery": {
          "$ref": "#/definitions/SpringBootDiscovery",
          "description": "Gets the data related to SpringBoot discovery.",
          "readOnly": true
        },
        "appsAndRoles": {
          "$ref": "#/definitions/AppsAndRoles",
          "description": "Apps And Roles of the Server.",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores \n            allocated for the\nmachine."
        },
        "allocatedMemoryInMB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the allocated Memory in MB."
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Gets or sets the Operating System Details installed on the machine."
        },
        "biosSerialNumber": {
          "type": "string",
          "description": "Gets or sets the Machine BIOS serial number."
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the BIOS GUID."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the Display name of the machine.",
          "readOnly": true
        },
        "isDeleted": {
          "type": "boolean",
          "description": "Value indicating whether VM is deleted.",
          "readOnly": true
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Gets the marking machine creation.",
          "readOnly": true
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Gets the timestamp marking last updated on the machine.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "Class for machine properties."
    },
    "VmwareMachineSoftwareInventory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the relative URL to get this VMWare machine.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Handled by resource provider.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets the Name of the machine.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/MachineSoftwareInventoryProperties",
          "description": "Gets or sets software inventory properties."
        }
      },
      "description": "VMware Machine software inventory REST resource."
    },
    "VmwareNetworkAdapter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label of the NIC.",
          "readOnly": true
        },
        "adapterType": {
          "type": "string",
          "description": "Gets or sets the adapter type.",
          "readOnly": true
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the NIC Id."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets Mac address of the NIC."
        },
        "ipAddressList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Gets IP addresses for the machine.",
          "readOnly": true
        },
        "networkName": {
          "type": "string",
          "description": "Gets or sets Network Name."
        },
        "ipAddressType": {
          "type": "string",
          "description": "Gets or sets Type of the IP address."
        }
      },
      "description": "Second level object represented in responses as part of Machine REST resource."
    },
    "VmwareRunAsAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunAsAccountRunAsAccountProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A runasaccount resource belonging to a site resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VmwareRunAsAccountResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmwareRunAsAccountResource"
          },
          "x-cadl-name": "VmwareRunAsAccountResource[]",
          "description": "The VmwareRunAsAccountResource items on this page",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a VmwareRunAsAccountResource list operation."
    },
    "WebAppDiscovery": {
      "type": "object",
      "properties": {
        "totalWebServerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered web servers.."
        },
        "totalWebApplicationCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets number of successfully discovered web applications."
        },
        "discoveryScopeStatus": {
          "$ref": "#/definitions/DiscoveryScopeStatus",
          "description": "Gets or sets status of partner discovery."
        }
      },
      "description": "Data related to a machine's WebApps discovery.",
      "required": [
        "totalWebServerCount",
        "totalWebApplicationCount",
        "discoveryScopeStatus"
      ]
    },
    "WebApplications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": " Gets or sets Name of the WebApplication."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets Status of the WebApplication."
        },
        "platform": {
          "type": "string",
          "description": "Gets or sets Platform of the WebApplication."
        },
        "groupName": {
          "type": "string",
          "description": "Gets or sets GroupName of the WebApplication."
        },
        "webServer": {
          "type": "string",
          "description": "Gets or sets WebServer of the WebApplication."
        },
        "applicationPool": {
          "type": "string",
          "description": "Gets or sets ApplicationPool of the WebApplication."
        }
      },
      "description": " WebApplication in the guest virtual machine."
    },
    "WebRoleImportDisk": {
      "type": "object",
      "properties": {
        "megabytesPerSecondOfRead": {
          "type": "number",
          "format": "float",
          "description": "Disk read throughput.",
          "readOnly": true
        },
        "megabytesPerSecondOfWrite": {
          "type": "number",
          "format": "float",
          "description": "Disk write throughput.",
          "readOnly": true
        },
        "numberOfReadOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Disk read IOPS.",
          "readOnly": true
        },
        "numberOfWriteOperationsPerSecond": {
          "type": "number",
          "format": "float",
          "description": "Disk write IOPS.",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Bytes allocated for the disk."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the disk."
        },
        "diskType": {
          "type": "string",
          "description": "Gets or sets Type of the disk."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets LUN of the disk."
        },
        "path": {
          "type": "string",
          "description": "Gets or sets Path of the disk."
        }
      },
      "description": "Class representing the imported machine web model."
    },
    "WebRoleOperatingSystem": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "description": "Gets or sets the type of the operating system."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets the Name of the operating system."
        },
        "osVersion": {
          "type": "string",
          "description": "Gets or sets the Version of the operating system."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Gets or sets the Architecture of the operating system."
        }
      },
      "description": "Second level object returned as part of Machine REST resource."
    },
    "object": {
      "type": "object",
      "properties": {}
    }
  },
  "parameters": {}
}
