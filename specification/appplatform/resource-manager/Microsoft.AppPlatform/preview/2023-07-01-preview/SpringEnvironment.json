{
  "swagger": "2.0",
  "info": {
    "version": "2023-07-01-preview",
    "title": "Azure Spring Apps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/springEnvironments": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get all the Spring Environments for a subscription.",
        "description": "Get all the Spring Environments for a subscription.",
        "operationId": "SpringEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpringEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get all the Spring Environments in a resource group.",
        "description": "Get all the Spring Environments in a resource group.",
        "operationId": "SpringEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpringEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get the properties of a Spring Environment.",
        "description": "Get a Spring Environment and its properties.",
        "operationId": "SpringEnvironment_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Creates or updates a Spring Environment.",
        "description": "Create a new Spring Environment or update an exiting Spring Environment.",
        "operationId": "SpringEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "201": {
            "description": "Created. The response describes the new Spring Environment and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Spring Environment is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Delete a Spring Environment.",
        "operationId": "SpringEnvironments_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted successfully."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Update Spring Environment's properties.",
        "description": "Operation to update an exiting Spring Environment.",
        "operationId": "SpringEnvironments_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Spring Environment is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/certificates": {
      "get": {
        "tags": [
          "SpringEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given spring environment.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "SpringEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpringEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SpringEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SpringEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "Certificates_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate updated successfully.",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/managedCertificates": {
      "get": {
        "tags": [
          "SpringEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the Managed Certificates in a given spring environment.",
        "operationId": "ManagedCertificates_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/ManagedCertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/managedCertificates/{managedCertificateName}": {
      "get": {
        "tags": [
          "SpringEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpringEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Create or Update a Managed Certificate.",
        "operationId": "ManagedCertificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "400": {
            "description": "Bad Request.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "SpringEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Deletes the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SpringEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Update tags of a managed certificate",
        "description": "Patches a managed certificate. Oly patching of tags is supported",
        "operationId": "ManagedCertificates_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedCertificateEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Managed Certificate updated successfully.",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CheckNameAvailabilityParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/getAuthtoken": {
      "post": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get auth token for a managed environment",
        "description": "Checks if resource name is available.",
        "operationId": "ManagedEnvironments_GetAuthToken",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/ManagedEnvironments.json#/definitions/EnvironmentAuthToken"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/workloadProfileStates": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get all workload Profile States for a Spring Environment..",
        "description": "Get all workload Profile States for a Spring Environment.",
        "operationId": "ManagedEnvironments_ListWorkloadProfileStates",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/ManagedEnvironments.json#/definitions/workloadProfileStatesCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "SpringEnvironmentsCollection": {
      "description": "Collection of Spring Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpringEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SpringEnvironment": {
      "description": "An environment for hosting Azure Spring Apps",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../app/resource-manager/Microsoft.App/preview/2022-11-01-preview/ManagedEnvironments.json#/definitions/ManagedEnvironment"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "serviceId": {
              "description": "A GUID which uniquely identifies an Azure Spring Apps Environment",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }      
    }
  },
  "parameters": {
    "SpringEnvironmentNameParameter": {
      "name": "springEnvironmentName",
      "in": "path",
      "description": "Name of the Spring Environment.",
      "required": true,
      "type": "string"
    },
    "SpringEnvironmentEnvelopeParameter": {
      "name": "environmentEnvelope",
      "in": "body",
      "description": "Configuration details of the Spring Environment.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SpringEnvironment"
      }
    },
    "CertificateNameParameter": {
      "name": "certificateName",
      "in": "path",
      "description": "Name of the Certificate.",
      "required": true,
      "type": "string"
    },
    "CertificateEnvelopeParameter": {
      "name": "certificateEnvelope",
      "in": "body",
      "description": "Certificate to be created or updated",
      "schema": {
        "$ref": "./CommonDefinitions.json#/definitions/Certificate"
      }
    },
    "ManagedCertificateNameParameter": {
      "name": "managedCertificateName",
      "in": "path",
      "description": "Name of the Managed Certificate.",
      "required": true,
      "type": "string"
    },
    "ManagedCertificateEnvelopeParameter": {
      "name": "managedCertificateEnvelope",
      "in": "body",
      "description": "Managed Certificate to be created or updated",
      "schema": {
        "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
      }
    },
    "CheckNameAvailabilityParameter": {
      "name": "checkNameAvailabilityRequest",
      "in": "body",
      "description": "The check name availability request.",
      "required": true,
      "schema": {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
      }
    },
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}