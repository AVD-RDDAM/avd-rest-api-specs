{
  "swagger": "2.0",
  "info": {
    "version": "2023-07-01-preview",
    "title": "Azure Spring Apps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/configServers/default": {
      "get": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Get the config server and its properties.",
        "description": "Operation to get the config server and its properties.",
        "operationId": "ConfigServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Create or update the config server middleware.",
        "description": "Opeartion to create or update the config server.",
        "operationId": "ConfigServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Update the config server middleware.",
        "description": "Operation to update the config server.",
        "operationId": "ConfigServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": ".#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/configServers/validate": {
      "post": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Validate the config server middleware settings.",
        "description": "Check if the config server settings are valid.",
        "operationId": "ConfigServers_Validate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServerSettingsValidateResult"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigServerSetting is validating.",
            "schema": {
              "$ref": "../2023-05-01-preview/appplatform.json#/definitions/ConfigServerSettingsValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/eurekaServers/default": {
      "get": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Get the eureka server middleware settings.",
        "description": "Get the eureka server settings.",
        "operationId": "EurekaServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Create or update the eureka server settings.",
        "description": "The operation to create or update the eureka server settings.",
        "operationId": "EurekaServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }

        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "201": {
            "description": "Created. The response indicates the exiting eureka server settings are now updating and contain a Azure-AsyncOperation\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Update the eureka server settings.",
        "description": "The operation to update the eureka server settings.",
        "operationId": "EurekaServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting eureka server settings are now updating and contain a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "ConfigServer": {
      "description": "Config Server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Config server git properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the config server.",
              "enum": [
                "NotAvailable",
                "Deleted",
                "Failed",
                "Succeeded",
                "Updating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConfigServerState",
                "modelAsString": true
              }
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the config server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ConfigServerEnabledState",
                "values": [
                  {
                    "description": "Enable the config server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the config server.",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "configServer": {
              "$ref": "../2023-05-01-preview/appplatform.json#/definitions/ConfigServerSettings",
              "description": "Settings of config server."
            }
          }
        }
      }
    },
    "EurekaServer": {
      "description": "Eureka server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Eureka server properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the eureka server.",
              "enum": [
                "Failed",
                "Succeeded",
                "Updating",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EurekaServerState",
                "modelAsString": true
              }
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the eureka server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "EurekaServerEnabledState",
                "values": [
                  {
                    "description": "Enable the eureka server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the eureka server.",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SpringEnvironmentNameParameter": {
      "name": "springEnvironmentName",
      "in": "path",
      "description": "Name of the Spring Environment.",
      "required": true,
      "type": "string"
    },
    "ConfigServerEnvelopeParameter": {
      "name": "configServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConfigServer"
      }
    },
    "EurekaServerEnvelopeParameter": {
      "name": "eurekaServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/EurekaServer"
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}