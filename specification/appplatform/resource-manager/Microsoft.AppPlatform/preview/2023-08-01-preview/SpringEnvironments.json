{
  "swagger": "2.0",
  "info": {
    "version": "2023-08-01-preview",
    "title": "Azure Spring Apps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/springEnvironments": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get all the Spring Environments for a subscription.",
        "description": "Get all the Spring Environments for a subscription.",
        "operationId": "SpringEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpringEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by subscription": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get all the Spring Environments in a resource group.",
        "description": "Get all the Spring Environments in a resource group.",
        "operationId": "SpringEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpringEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by resource group": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}": {
      "get": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Get the properties of a Spring Environment.",
        "description": "Get a Spring Environment and its properties.",
        "operationId": "SpringEnvironment_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get environments by name": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Creates or updates a Spring Environment.",
        "description": "Create a new Spring Environment or update an exiting Spring Environment.",
        "operationId": "SpringEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "201": {
            "description": "Created. The response describes the new Spring Environment and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create environments": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Delete a Spring Environment.",
        "operationId": "SpringEnvironments_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted successfully."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete environment by name": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Update Spring Environment's properties.",
        "description": "Operation to update an exiting Spring Environment.",
        "operationId": "SpringEnvironments_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Environment.",
            "schema": {
              "$ref": "#/definitions/SpringEnvironment"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Spring Environment is now updating and contains a Location\r\nheader to query the operation result."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Environment": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "SpringEnvironments"
        ],
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/CheckNameAvailabilityParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SpringEnvironments_CheckNameAvailability": {
            "$ref": "./examples/v2/SpringEnvironments/SpringEnvironments_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/configServers/default": {
      "get": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Get the config server and its properties.",
        "description": "Operation to get the config server and its properties.",
        "operationId": "ConfigServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Create or update the config server middleware.",
        "description": "Operation to create or update the config server.",
        "operationId": "ConfigServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "201": {
            "description": "Created. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_UpdatePut.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Update the config server middleware.",
        "description": "Operation to update the config server.",
        "operationId": "ConfigServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": ".#/definitions/ConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_UpdatePatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/configServers/validate": {
      "post": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Validate the config server middleware settings.",
        "description": "Check if the config server settings are valid.",
        "operationId": "ConfigServers_Validate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerSettingsParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Config Server.",
            "schema": {
              "$ref": "#/definitions/ConfigServerSettingsValidateResult"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigServerSetting is validating.",
            "schema": {
              "$ref": "#/definitions/ConfigServerSettingsValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Validate Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_Validate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/springEnvironments/{springEnvironmentName}/eurekaServers/default": {
      "get": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Get the eureka server middleware settings.",
        "description": "Get the eureka server settings.",
        "operationId": "EurekaServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Create or update the eureka server settings.",
        "description": "The operation to create or update the eureka server settings.",
        "operationId": "EurekaServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "201": {
            "description": "Created. The response indicates the exiting eureka server settings are now updating and contain a Azure-AsyncOperation\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_UpdatePut.json"
          }
        }
      },
      "patch": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Update the eureka server settings.",
        "description": "The operation to update the eureka server settings.",
        "operationId": "EurekaServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SpringEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting eureka server settings are now updating and contain a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/EurekaServer"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Update Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_UpdatePatch.json"
          }
        }
      }
    }
  },
  "definitions": {
    "SpringEnvironmentsCollection": {
      "description": "Collection of Spring Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpringEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SpringEnvironment": {
      "description": "An environment for hosting Azure Spring Apps",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Spring environment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Service",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Deleted",
                "Succeeded",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "serviceId": {
              "description": "A GUID which uniquely identifies an Azure Spring Apps Environment",
              "type": "string",
              "readOnly": true
            },
            "managedEnvironmentId": {
              "description": "The resource Id of the Managed Environment that the Spring Apps instance builds on",
              "type": "string"
            },
            "infraResourceGroup": {
              "description": "The name of the resource group that contains the infrastructure resources",
              "type": "string"
            },
            "zoneRedundant": {
              "description": "Whether or not this Spring Environment is zone-redundant.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "defaultDomain": {
              "description": "Default Domain Name for the spring environment",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ConfigServer": {
      "description": "Config Server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Config server git properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the config server.",
              "enum": [
                "NotAvailable",
                "Deleted",
                "Failed",
                "Succeeded",
                "Updating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConfigServerState",
                "modelAsString": true
              }
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the config server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ConfigServerEnabledState",
                "values": [
                  {
                    "description": "Enable the config server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the config server.",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "configServer": {
              "$ref": "#/definitions/ConfigServerSettings",
              "description": "Settings of config server."
            }
          }
        }
      }
    },
    "EurekaServer": {
      "description": "Eureka server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Eureka server properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the eureka server.",
              "enum": [
                "Failed",
                "Succeeded",
                "Updating",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EurekaServerState",
                "modelAsString": true
              }
            },
            "dashboardUri": {
              "type": "string",
              "description": "The uri to visit the eureka server dashboard"
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the eureka server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "EurekaServerEnabledState",
                "values": [
                  {
                    "description": "Enable the eureka server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the eureka server.",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ConfigServerSettings": {
      "description": "The settings of config server.",
      "type": "object",
      "properties": {
        "gitProperty": {
          "$ref": "#/definitions/ConfigServerGitProperty",
          "description": "Property of git environment."
        }
      }
    },
    "ConfigServerGitProperty": {
      "description": "Property of git.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "repositories": {
          "description": "Repositories of git.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitPatternRepository"
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string"
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string"
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "type": "boolean"
        }
      }
    },
    "GitPatternRepository": {
      "description": "Git repository property payload for config server",
      "required": [
        "name",
        "uri"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the repository",
          "type": "string"
        },
        "pattern": {
          "description": "Collection of pattern of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string"
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string"
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "type": "boolean"
        }
      }
    },
    "ConfigServerSettingsValidateResult": {
      "description": "Validation result for config server settings",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicate if the config server settings are valid",
          "type": "boolean"
        },
        "details": {
          "description": "The detail validation results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigServerSettingsErrorRecord"
          }
        }
      }
    },
    "ConfigServerSettingsErrorRecord": {
      "description": "Error record of the config server settings",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the config server settings error record",
          "type": "string"
        },
        "uri": {
          "description": "The uri of the config server settings error record",
          "type": "string"
        },
        "messages": {
          "description": "The detail error messages of the record",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SpringEnvironmentNameParameter": {
      "name": "springEnvironmentName",
      "in": "path",
      "description": "Name of the Spring Environment.",
      "required": true,
      "type": "string"
    },
    "SpringEnvironmentEnvelopeParameter": {
      "name": "environmentEnvelope",
      "in": "body",
      "description": "Configuration details of the Spring Environment.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SpringEnvironment"
      }
    },
    "CheckNameAvailabilityParameter": {
      "name": "checkNameAvailabilityRequest",
      "in": "body",
      "description": "The check name availability request.",
      "required": true,
      "schema": {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
      }
    },
    "SpringEnvironmentNameParameter": {
      "name": "springEnvironmentName",
      "in": "path",
      "description": "Name of the Spring Environment.",
      "required": true,
      "type": "string"
    },
    "ConfigServerEnvelopeParameter": {
      "name": "configServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConfigServer"
      }
    },
    "ConfigServerSettingsParameter": {
      "name": "configServerSettings",
      "in": "body",
      "description": "Config server settings to be validated",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConfigServerSettings"
      }
    },
    "EurekaServerEnvelopeParameter": {
      "name": "eurekaServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/EurekaServer"
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
