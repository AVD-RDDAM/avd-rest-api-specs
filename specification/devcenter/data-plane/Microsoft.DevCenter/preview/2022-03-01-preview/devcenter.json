{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-01-preview",
    "title": "DevCenter"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{devCenter}.{devcenterDnsSuffix}",
    "parameters": [
      {
        "name": "devCenter",
        "description": "The DevCenter to operate on.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      },
      {
        "name": "devCenterDnsSuffix",
        "in": "path",
        "required": true,
        "type": "string",
        "default": "devcenter.azure.com",
        "x-ms-skip-url-encoding": true,
        "description": "The DNS suffix used as the base for all devcenter requests."
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Lists all projects.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "operationId": "Project_ListByDevCenter",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Project_ListByDevCenter": {
            "$ref": "./examples/Project_ListByDevCenter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Gets a project.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "operationId": "Project_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Project_Get": {
            "$ref": "./examples/Project_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ProjectListResult": {
      "description": "Results of the project list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Project": {
      "description": "Project details.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the project",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the project.",
          "readOnly": true
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "type": "object",
      "required": [ "error" ],
      "properties": {
        "error": {
          "description": "Error body",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from the Fidalgo service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "An error response from the Fidalgo service.",
      "type": "object",
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      }
    },
    "ProvisioningError": {
      "description": "Error details",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        }
      }
    }
  },
  "parameters": {
    "ProjectNameParameter": {
      "name": "projectName",
      "description": "The DevCenter Project upon which to execute operations.",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{2,62}$",
      "minLength": 3,
      "maxLength": 63,
      "in": "path",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    },
    "FilterParameter": {
      "name": "filter",
      "in": "query",
      "description": "An OData filter clause to apply to the operation.",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "top",
      "in": "query",
      "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
      "type": "integer",
      "format": "int32",
      "required": false,
      "x-ms-parameter-location": "method"
    }
  }
}
