{
  "swagger": "2.0",
  "info": {
    "title": "RedisEnterpriseManagementClient",
    "version": "2022-01-01",
    "description": "REST API for managing Redis Enterprise resources in Azure.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "RedisEnterprise"
    },
    {
      "name": "Databases"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "PrivateLinks"
    }
  ],
  "paths": {
    "/providers/Microsoft.Cache/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_ListBySubscription",
        "description": "Lists all RedisEnterprise clusters in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_ListByResourceGroup",
        "description": "Lists all RedisEnterprise clusters in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Get",
        "description": "Gets information about a RedisEnterprise cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Create",
        "description": "Creates a RedisEnterprise cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Update",
        "description": "Updates a RedisEnterprise cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Delete",
        "description": "Deletes a RedisEnterprise cluster and its databases",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListByCluster",
        "description": "Lists all databases in a RedisEnterprise cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Get",
        "description": "Gets information about a database in a RedisEnterprise cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Create",
        "description": "Creates a database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Update",
        "description": "Updates a database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DatabaseUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "description": "Deletes a database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/export": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Export",
        "description": "Exports RDB file(s)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/ExportParameters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceUnlink": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ForceUnlink",
        "description": "Forcibly unlinks one or more databasse from a replication group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/ForceUnlinkParameters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/import": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Import",
        "description": "Imports RDB file(s)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/ImportParameters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/listKeys": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListKeys",
        "description": "Retrieves the access keys for the RedisEnterprise database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/regenerateKey": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_RegenerateKey",
        "description": "Regenerates an access key for the RedisEnterprise database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "description": "Name of database",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByCluster",
        "description": "Lists all private endpoint connections in a RedisEnterprise cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections/{connectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets information about a private endpoint connection in a RedisEnterprise cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "description": "Name of private endpoint connection",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Create",
        "description": "Creates a private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "description": "Name of private endpoint connection",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Update",
        "description": "Updates a private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "description": "Name of private endpoint connection",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes a private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "description": "Name of private endpoint connection",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinks"
        ],
        "operationId": "PrivateLinks_ListByCluster",
        "description": "Lists all private link resources in a RedisEnterprise cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "description": "Name of cluster",
            "pattern": "[a-z0-9][-a-z0-9]*",
            "minLength": 1,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "string",
          "description": "The current primary key that clients can use to authenticate",
          "format": "password",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "The current secondary key that clients can use to authenticate",
          "format": "password",
          "x-ms-secret": true
        }
      },
      "description": "Redis Enterprise access keys response",
      "required": [
        "primaryKey",
        "secondaryKey"
      ]
    },
    "ClientProtocol": {
      "type": "string",
      "enum": [
        "Encrypted",
        "Plaintext"
      ],
      "x-ms-enum": {
        "name": "ClientProtocol",
        "modelAsString": true
      }
    },
    "ClientProtocolKV": {
      "type": "string",
      "enum": [
        "Encrypted",
        "Plaintext"
      ],
      "x-ms-enum": {
        "name": "ClientProtocolKV",
        "modelAsString": true
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU to create, which affects price, performance, and features."
        }
      },
      "description": "Describes the RedisEnterprise cluster",
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "x-cadl-name": "Cluster[]",
          "description": "The Cluster items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "format": "uri",
          "x-cadl-name": "Rest.ResourceLocation<Cluster>"
        }
      },
      "description": "The response of a Cluster list operation.",
      "required": [
        "value"
      ]
    },
    "ClusterNameParameter": {
      "type": "object",
      "properties": {},
      "description": "The cluster name parameter"
    },
    "ClusterProperties": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "DNS name of the cluster endpoint",
          "readOnly": true
        },
        "minTlsVersion": {
          "$ref": "#/definitions/TlsVersion",
          "description": "The minimum TLS version for the cluster to support, e.g. the default of '1.2'."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Current provisioning status of the last operation on the cluster.",
          "readOnly": true
        },
        "resourceState": {
          "$ref": "#/definitions/ResourceState",
          "description": "Current resource status of the cluster.",
          "readOnly": true
        },
        "redisVersion": {
          "type": "string",
          "description": "Version of redis the cluster supports, e.g. '6'",
          "readOnly": true
        }
      },
      "description": "Properties of a RedisEnterprise cluster",
      "required": [
        "provisioningState"
      ]
    },
    "ClusterUpdate": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU to create, which affects price, performance, and features."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the Cluster."
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU to create, which affects price, performance, and features."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        }
      },
      "description": "The updatable properties of the Cluster."
    },
    "Database": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Describes a Database on a RedisEnterprise cluster",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatabaseListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "x-cadl-name": "Database[]",
          "description": "The Database items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "format": "uri",
          "x-cadl-name": "Rest.ResourceLocation<Database>"
        }
      },
      "description": "The response of a Database list operation.",
      "required": [
        "value"
      ]
    },
    "DatabaseProperties": {
      "type": "object",
      "properties": {
        "clientProtocol": {
          "$ref": "#/definitions/ClientProtocol",
          "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number for the database to listen on. E.g. 10000.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the database",
          "readOnly": true
        }
      },
      "description": "Properties of a Database on a RedisEnterprise cluster",
      "required": [
        "port",
        "provisioningState"
      ]
    },
    "DatabaseUpdate": {
      "type": "object",
      "properties": {},
      "description": "The type used for update operations of the Database."
    },
    "ExportParameters": {
      "type": "object",
      "properties": {
        "sasUris": {
          "$ref": "#/definitions/SasUri",
          "description": "SAS URI for the target container directory to export from"
        }
      },
      "description": "Export request. Parameters for a Redis Enterprise export operation.",
      "required": [
        "sasUris"
      ]
    },
    "ForceUnlinkParameters": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The resource IDs of the database resources to be unlinked"
        }
      },
      "description": "Parameters for a Redis Enterprise Active Geo Replication Force Unlink operation.",
      "required": [
        "ids"
      ]
    },
    "ImportParameters": {
      "type": "object",
      "properties": {
        "sasUris": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasUri"
          },
          "x-cadl-name": "SasUri[]",
          "description": "SAS URIs for the target blobs to import from"
        }
      },
      "description": "Import request. Parameters for a Redis Enterprise import operation",
      "required": [
        "sasUris"
      ]
    },
    "KeyType": {
      "type": "string",
      "enum": [
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true
      }
    },
    "KeyTypeKV": {
      "type": "string",
      "enum": [
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "KeyTypeKV",
        "modelAsString": true
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM resource id of the private endpoint resource"
        }
      },
      "description": "The private endpoint resource."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Describes a private endpoint connection to a RedisEnterprise cluster",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-cadl-name": "PrivateEndpointConnection[]",
          "description": "The PrivateEndpointConnection items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "format": "uri",
          "x-cadl-name": "Rest.ResourceLocation<PrivateEndpointConnection>"
        }
      },
      "description": "The response of a PrivateEndpointConnection list operation.",
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint that is connected"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        }
      },
      "description": "Properties of a PrivateEndpointConnection on a RedisEnterprise cluster",
      "required": [
        "privateLinkServiceConnectionState",
        "provisioningState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Creating",
        "Deleting",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningStateKV": {
      "type": "string",
      "enum": [
        "Creating",
        "Deleting",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningStateKV",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionUpdate": {
      "type": "object",
      "properties": {},
      "description": "The type used for update operations of the PrivateEndpointConnection."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Approved",
        "Pending",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointServiceConnectionStatusKV": {
      "type": "string",
      "enum": [
        "Approved",
        "Pending",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatusKV",
        "modelAsString": true
      }
    },
    "PrivateLink": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Information about private links",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLink"
          },
          "x-cadl-name": "PrivateLink[]",
          "description": "The PrivateLink items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "format": "uri",
          "x-cadl-name": "Rest.ResourceLocation<PrivateLink>"
        }
      },
      "description": "The response of a PrivateLink list operation.",
      "required": [
        "value"
      ]
    },
    "PrivateLinkProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The private link resource required member names."
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link",
      "required": [
        "groupId",
        "requiredMembers",
        "requiredZoneNames"
      ]
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "required": [
        "actionsRequired",
        "description",
        "status"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ProvisioningStateKV": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStateKV",
        "modelAsString": true
      }
    },
    "RegenerateKeyParameters": {
      "type": "object",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "Which access key to regenerate."
        }
      },
      "description": "Regenerate access keys request. Specifies which access keys to reset to a new random value.",
      "required": [
        "keyType"
      ]
    },
    "ResourceState": {
      "type": "string",
      "enum": [
        "Running",
        "Creating",
        "CreateFailed",
        "Updating",
        "UpdateFailed",
        "Deleting",
        "DeleteFailed",
        "Enabling",
        "EnableFailed",
        "Disabling",
        "DisableFailed",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true
      }
    },
    "ResourceStateKV": {
      "type": "string",
      "enum": [
        "Running",
        "Creating",
        "CreateFailed",
        "Updating",
        "UpdateFailed",
        "Deleting",
        "DeleteFailed",
        "Enabling",
        "EnableFailed",
        "Disabling",
        "DisableFailed",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ResourceStateKV",
        "modelAsString": true
      }
    },
    "SasUri": {
      "type": "string",
      "format": "password",
      "x-ms-secret": true
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.",
          "minimum": 2
        }
      },
      "description": "SKU parameters supplied to the create RedisEnterprise operation",
      "required": [
        "name",
        "capacity"
      ]
    },
    "SkuKV": {
      "type": "string",
      "enum": [
        "Enterprise_E10",
        "Enterprise_E20",
        "Enterprise_E50",
        "Enterprise_E100",
        "EnterpriseFlash_F300",
        "EnterpriseFlash_F700",
        "EnterpriseFlash_F1500"
      ],
      "x-ms-enum": {
        "name": "SkuKV",
        "modelAsString": true
      }
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "Enterprise_E10",
        "Enterprise_E20",
        "Enterprise_E50",
        "Enterprise_E100",
        "EnterpriseFlash_F300",
        "EnterpriseFlash_F700",
        "EnterpriseFlash_F1500"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "TlsVersion": {
      "type": "string",
      "enum": [
        "1.0",
        "1.1",
        "1.2"
      ],
      "x-ms-enum": {
        "name": "TlsVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "OnePointZero",
            "value": "1.0"
          },
          {
            "name": "OnePointOne",
            "value": "1.1"
          },
          {
            "name": "OnePointTwo",
            "value": "1.2"
          }
        ]
      }
    },
    "TlsVersionKV": {
      "type": "string",
      "enum": [
        "1.0",
        "1.1",
        "1.2"
      ],
      "x-ms-enum": {
        "name": "TlsVersionKV",
        "modelAsString": true,
        "values": [
          {
            "name": "OnePointZero",
            "value": "1.0"
          },
          {
            "name": "OnePointOne",
            "value": "1.1"
          },
          {
            "name": "OnePointTwo",
            "value": "1.2"
          }
        ]
      }
    }
  },
  "parameters": {}
}
