{
  "swagger": "2.0",
  "info": {
    "title": "PostgreSQLServerManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.",
    "version": "2023-04-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "description": "Azure Active Directory OAuth2 Flow",
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrbackup": {
      "post": {
        "description": "Start the Backup operation",
        "tags": [
          "LongTermRetention"
        ],
        "operationId": "Backup_Execute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../types/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "description": "A unique ID provided by the client to identify the specific request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok. API finished synchronously with Success.",
            "schema": {
              "$ref": "#/definitions/BackupResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before checking the status of the asynchronous operation.",
                "type": "integer",
                "format": "int32"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              },
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Scenario 4xx/5xx",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "ErrorCode string in the event of a failure.",
                "type": "string"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Sample_ExecuteBackup": {
            "$ref": "./examples/ltrbackup.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrprebackup": {
      "post": {
        "description": "PreBackup operation performs all the checks that are need for the subsequent Backup to succeed.",
        "tags": [
          "LongTermRetention"
        ],
        "operationId": "PreBackup_Execute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../types/common-types.json#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreBackupRequest"
            }
          },
          {
            "name": "x-ms-client-request-id",
            "in": "header",
            "description": "A unique ID provided by the client to identify the specific request.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok. API finished synchronously with Success.",
            "schema": {
              "$ref": "#/definitions/PreBackupResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Scenario 4xx/5xx",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "ErrorCode string in the event of a failure.",
                "type": "string"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Sample_Prebackup": {
            "$ref": "./examples/ltrprebackup.json"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "BackupRequestBase": {
      "description": "BackupRequestBase is the base for all backup request.",
      "required": [
        "backupSettings"
      ],
      "type": "object",
      "properties": {
        "backupSettings": {
          "$ref": "#/definitions/BackupSettings",
          "description": "Backup Settings"
        },
        "targetDetails": {
          "$ref": "#/definitions/BackupStoreDetails",
          "description": "Backup Settings"
        }
      }
    },
    "BackupRequest": {
      "description": "The request that is made for a backup.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ],
      "required": [
        "targetDetails"
      ]
    },
    "PreBackupRequest": {
      "description": "A request that is made for pre-backup.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ]
    },
    "BackupSettings": {
      "description": "The settings for the long term backup.",
      "type": "object",
      "required": [
        "backupName"
      ],
      "properties": {
        "backupName": {
          "type": "string",
          "description": "Backup Name for the current backup"
        }
      }
    },
    "BackupStoreDetails": {
      "description": "Details about the target where the backup content will be stored.",
      "required": [
        "sasUriList"
      ],
      "type": "object",
      "properties": {
        "sasUriList": {
          "description": "SASUriList of storage containers where backup data is to be streamed/copied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Properties": {
      "description": "The properties.",
      "type": "object"
    },
    "PreBackupResponseProperties": {
      "description": "Response for the pre-backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Properties"
        }
      ],
      "required": [
        "numberOfContainers"
      ],
      "properties": {
        "numberOfContainers": {
          "format": "int32",
          "description": "Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.",
          "type": "integer"
        }
      }
    },
    "BackupResponseProperties": {
      "description": "Response for the backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Properties"
        }
      ],
      "required": [
        "datasourceSizeInBytes",
        "dataTransferredInBytes",
        "backupMetadata"
      ],
      "properties": {
        "datasourceSizeInBytes": {
          "format": "int64",
          "description": "Size of datasource in bytes",
          "type": "integer"
        },
        "dataTransferredInBytes": {
          "format": "int64",
          "description": "Data transferred in bytes",
          "type": "integer"
        },
        "backupMetadata": {
          "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
          "type": "string"
        }
      }
    },
    "BackupResponse": {
      "description": "Response for the LTR backup API call",
      "type": "object",
      "required": [
        "id",
        "name",
        "status",
        "startTime"
      ],
      "properties": {
        "id": {
          "description": "full rp id",
          "type": "string"
        },
        "name": {
          "description": "the name of the backup",
          "type": "string"
        },
        "status": {
          "description": "Service-set extensible enum indicating operation?s kind",
          "enum": [
            "Running",
            "Cancelled",
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExecutionStatus",
            "modelAsString": true
          }
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "description": "Embedded Error Object."
        },
        "startTime": {
          "description": "Start time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "description": "End time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "properties": {
          "description": "AdditionalProperties",
          "$ref": "#/definitions/BackupResponseProperties"
        },
        "percentComplete": {
          "description": "PercentageCompleted",
          "format": "double",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "PreBackupResponse": {
      "description": "Response for the LTR pre-backup API call",
      "type": "object",
      "required" : ["properties"],
      "properties": {
        "properties": {
          "description": "Additional Properties for the pre backup response",
          "$ref": "#/definitions/PreBackupResponseProperties"
        }
      }
    }
  },
  "parameters": {
    "BackupNameParameter": {
      "name": "backupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the backup.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
    }
  }
}