import "./models.cadl";

using Cadl.Http;
using Azure.Core;

namespace FormRecognizer.v3;

interface Analysis {
  @pollingOperation
  @route("documentModels/{modelId}:analyze")
  @summary("Analyze document")
  @doc("Analyzes document with document model.")
  op analyze is Foundations.LongRunningOperation<{
    @header contentType: AnalysisContentTypes,
    @path modelId: string,
    @doc("List of 1-based page numbers to analyze.  Ex. \"1-3,5,7-9\"")
    @pattern("^(\\d+(-\\d+)?)(,\\s*(\\d+(-\\d+)?))*$")
    @query pages: string,
    @doc("Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\").")
    @query locale: string,
    // FIXME: how do you specify a default string index type enum value
    @doc("Method used to compute string offset and length.")
    @query stringIndexType: StringIndexType,
    @body body: bytes //FIXME | AnalyzeDocumentRequest
  }>;

  @get
  @route("documentModels/{modelId}/analyzeResults/{resultId}")
  @summary("Get analyze result")
  @doc("Gets the result of document analysis.")
  @tag("Analysis")
  // NOTE: get AnalyzeResult does not seem to be a Resource action, since AnalyzeResult is 
  // not information related to a persisted resource but more so the result of running the 
  // analysis on a specific document
  op getAnalyzeResult(
    @doc("Unique document model name.")
    @pattern("[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}")
    @path modelId: string,
    @doc("Analyze operation result ID.")
    @path resultId: string,
    ...QueryAPIVersion,
  ): AnalyzeResultOperation | ErrorResponse;
}

// FIXME Ideally I could specify the base route here,
// but the built in azure core operations create the route for you and 
// cause conflicts. Due to this also going to group the /info route here for now
// @route("documentModels")
interface DocumentModels {
  @pollingOperation
  @doc("Builds a custom document analysis model.")
  @route("documentModels:build")
  op build is Foundations.LongRunningOperation<{
    @doc("Document model ID")
    modelId: DocumentModelId,
    @doc("Document model description.")
    @maxLength(4096)
    description?: string,
    @doc("List of key-value tag attributes associated with the document model.")
    tags?: Record<string>,
    @doc("Build mode")
    buildMode: DocumentBuildMode,
    @doc("Azure Blob Storage location containing the training data.")
    azureBlobSource?: AzureBlobContentSource,
  }>;

  @pollingOperation
  @doc("Creates a new document model from document types of existing document models.")
  @route("documentModels:compose")
  op compose is Foundations.LongRunningOperation<
  {
    @doc("List of component document models to compose.")
    modelId: DocumentModelId,
    @doc("List of component document models to compose.")
    componentModels: DocumentModelId[],
    @doc("Document model description.")
    @maxLength(4096)
    description?: string,
    @doc("List of key-value tag attributes associated with the document model.")
    tags?: Record<string>,
  }>;

  // NOTE: the code below outputs the behavior that the service has defined today
  @post
  @summary("Generate copy authorization")
  @doc("Generates authorization to copy a document model to this location with specified modelId and optional description.")
  @route("documentModels:authorizeCopy")
  op authorizeCopyDocumentModel(
    ...QueryAPIVersion,
    modelId: DocumentModelId,
    @doc("Document model description.")
    @maxLength(4096)
    description?: string,
    @doc("List of key-value tag attributes associated with the document model.")
    tags?: Record<string>,
  ): CopyAuthorization | ErrorResponse;

  // NOTE: the code below outputs the behavior that the service has defined today
  @pollingOperation
  @summary("Copy document model")
  @doc("Copies document model to the target resource, region, and modelId.")
  @route("documentModels/{modelId}:copyTo")
  op copyDocumentModelTo is Foundations.LongRunningOperation<{
    ...DocumentModelId,
    ...CopyAuthorization,
  }>;

  // FIXME: the service doesnt return a model that includes a resource key
  // the resource in this instance is the Form Recognizer resource that is being queried
  // @route("info")
  // op getResourceDetails is ResourceRead<ResourceDetails>;
  @summary("Get resource info")
  @doc("Return information about the current resource.")
  @route("info")
  op getResourceDetails(
    ...QueryAPIVersion
  ): ResourceDetails | ErrorResponse;

  @summary("List document models")
  @doc("List all document models")
  op getDocumentModels is ResourceList<DocumentModelSummary>;

  @doc("Get a document model")
  op getDocumentModel is ResourceRead<DocumentModelDetails>;
  
  @doc("Delete a document model")
  op deleteDocumentModel is ResourceDelete<DocumentModelSummary>;
}

// FIXME need to customize ErrorResponse to the one defined in this spec
interface Operations {
  @summary("List operations")
  @doc("Lists all operations.")
  op getOperations is ResourceList<OperationSummary>;

  @summary("Get operation")
  @doc("Gets operation info.")
  op getOperation is ResourceRead<OperationDetails>;
}
