{
  "swagger": "2.0",
  "info": {
    "title": "ContentSafety Internal",
    "version": "2023-10-01",
    "description": "Analyze harmful content",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/contentsafety/internal",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://<resource-name>.cognitiveservices.azure.com).",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "tags": [],
  "paths": {
    "/metrics/blocklistHitCalls": {
      "get": {
        "operationId": "Metrics_ListBlocklistHitCalls",
        "summary": "Show Blocklist Hit Request Count At Different Timestamps.",
        "description": "Show blocklist hit request count at different timestamps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/StartTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/EndTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/TimeGranularityQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyVersionQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BlockListHitCallsPerTimestamp"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "BlockListHitCallsPerTimestamp[]",
                  "description": "The BlockListHitCallsPerTimestamp items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of BlockListHitCallsPerTimestamp items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<BlockListHitCallsPerTimestamp, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/metrics/blocklistTopTerms": {
      "get": {
        "operationId": "Metrics_ListBlocklistTopTerms",
        "summary": "List Top Terms Hit In Blocklist At Different Timestamps.",
        "description": "List top terms hit in blocklist at different timestamps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopTermQueryParameter"
          },
          {
            "$ref": "#/parameters/StartTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/EndTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyVersionQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TermList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/metrics/categories/{category}/requestCounts": {
      "get": {
        "operationId": "Metrics_ListRequestCountsByCategoryAndSeverity",
        "summary": "List API Request Count At Different Timestamps Of A Specific Category Given A Time Range.",
        "description": "List API request count at different timestamps of a specific category given a time range.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "Category type.",
            "type": "string",
            "enum": [
              "Hate",
              "Sexual",
              "Violence",
              "SelfHarm"
            ],
            "x-ms-enum": {
              "name": "CategoryEnum",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/StartTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/EndTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/TimeGranularityQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyVersionQueryParameter"
          },
          {
            "$ref": "#/parameters/ModalityTypeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RequestCountsPerTimestamp"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "RequestCountsPerTimestamp[]",
                  "description": "The RequestCountsPerTimestamp items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of RequestCountsPerTimestamp items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<RequestCountsPerTimestamp, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/metrics/requestCounts": {
      "get": {
        "operationId": "Metrics_ListRequestCounts",
        "summary": "List API Request Counts At Different Timestamps Given A Time Range.",
        "description": "List API request counts at different timestamps given a time range. Default maxpagesize is 1000.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/StartTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/EndTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/TimeGranularityQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyVersionQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyOperationQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountPerTimestamp"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "CountPerTimestamp[]",
                  "description": "The CountPerTimestamp items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of CountPerTimestamp items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<CountPerTimestamp, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/metrics/requestLatencies": {
      "get": {
        "operationId": "Metrics_ListRequestLatencies",
        "summary": "List API Request Latencies At Different Timestamps Given A Time Range.",
        "description": "List API request latencies at different timestamps given a time range. Default maxpagesize is 1000.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/StartTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/EndTimeQueryParameter"
          },
          {
            "$ref": "#/parameters/TimeGranularityQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyVersionQueryParameter"
          },
          {
            "$ref": "#/parameters/ContentSafetyOperationQueryParameter"
          },
          {
            "$ref": "#/parameters/AggregationQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LatencyPerTimestamp"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "LatencyPerTimestamp[]",
                  "description": "The LatencyPerTimestamp items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of LatencyPerTimestamp items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<LatencyPerTimestamp, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/whitelist/features": {
      "get": {
        "operationId": "WhitelistFeature_ListBlocklistTopTerms",
        "summary": "List Whitelist Features.",
        "description": "Get whitelist features.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FeatureList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Aggregation": {
      "type": "string",
      "description": "Aggregation methods for latency.",
      "enum": [
        "P99",
        "P95",
        "Avg"
      ],
      "x-ms-enum": {
        "name": "Aggregation",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "BlockListHitCallsPerTimestamp": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date time."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The call count of the hit API."
        }
      },
      "description": "Blocklist hit call counts at a timestamp",
      "required": [
        "dateTime",
        "count"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/CategoryEnum",
          "description": "The category of the API. The value could be Hate, Sexual, Violence, Self-Harm"
        }
      },
      "description": "The detection category.",
      "required": [
        "category"
      ]
    },
    "CategoryEnum": {
      "type": "string",
      "description": "Category type.",
      "enum": [
        "Hate",
        "Sexual",
        "Violence",
        "SelfHarm"
      ],
      "x-ms-enum": {
        "name": "CategoryEnum",
        "modelAsString": true
      }
    },
    "ContentModality": {
      "type": "string",
      "description": "Modality type.",
      "enum": [
        "Text",
        "Image"
      ],
      "x-ms-enum": {
        "name": "ContentModality",
        "modelAsString": true
      }
    },
    "ContentSafetyOperation": {
      "type": "string",
      "description": "Content safety Operation.",
      "enum": [
        "AnalyzeText",
        "AnalyzeImage"
      ],
      "x-ms-enum": {
        "name": "ContentSafetyOperation",
        "modelAsString": true
      }
    },
    "ContentSafetyVersion": {
      "type": "string",
      "description": "Content safety API version.",
      "enum": [
        "2023-04-30-preview",
        "2023-10-01"
      ],
      "x-ms-enum": {
        "name": "ContentSafetyVersion",
        "modelAsString": true
      }
    },
    "CountPerTimestamp": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date time."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count of the API request."
        }
      },
      "description": "API request count at a timestamp.",
      "required": [
        "dateTime",
        "count"
      ]
    },
    "Feature": {
      "type": "object",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "Feature Name."
        },
        "properties": {
          "$ref": "#/definitions/object",
          "description": "The properties of the feature."
        }
      },
      "description": "Whitelist features.",
      "required": [
        "featureName",
        "properties"
      ]
    },
    "FeatureList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Feature[]",
          "description": "List of whitelist features."
        }
      },
      "description": "Response of listing whitelist features.",
      "required": [
        "value"
      ]
    },
    "Granularity": {
      "type": "string",
      "description": "Time granularity.",
      "enum": [
        "Hourly",
        "Daily"
      ],
      "x-ms-enum": {
        "name": "Granularity",
        "modelAsString": true
      }
    },
    "LatencyPerTimestamp": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date time."
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "The aggregated latency of the API in milliseconds."
        }
      },
      "description": "API request latency at a timestamp.",
      "required": [
        "dateTime",
        "latency"
      ]
    },
    "RequestCountsPerTimestamp": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date time."
        },
        "count": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Severity"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Severity[]",
          "description": "The count of the request."
        }
      },
      "description": "API request count at a timestamp",
      "required": [
        "dateTime",
        "count"
      ]
    },
    "Severity": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/SeverityEnum",
          "description": "The severity the API returned."
        },
        "severityCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of the severity."
        }
      },
      "description": "Severity and count the API detected.",
      "required": [
        "severity",
        "severityCount"
      ]
    },
    "SeverityEnum": {
      "type": "number",
      "description": "Severity level. The higher the value, the more risk it is.",
      "enum": [
        0,
        2,
        4,
        6
      ],
      "x-ms-enum": {
        "name": "SeverityEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": 0
          },
          {
            "name": "Two",
            "value": 2
          },
          {
            "name": "Four",
            "value": 4
          },
          {
            "name": "Six",
            "value": 6
          }
        ]
      }
    },
    "TermList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopTermCount"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "TopTermCount[]",
          "description": "List of terms."
        }
      },
      "description": "Response of listing hit terms.",
      "required": [
        "value"
      ]
    },
    "TopTermCount": {
      "type": "object",
      "properties": {
        "term": {
          "type": "string",
          "description": "The term content."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The API call count of the term."
        }
      },
      "description": "Popular term and it's API count.",
      "required": [
        "term",
        "count"
      ]
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-04-30-preview",
        "2023-05-30-preview",
        "2023-10-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_30_Preview",
            "value": "2023-04-30-preview"
          },
          {
            "name": "v2023_05_30_Preview",
            "value": "2023-05-30-preview"
          },
          {
            "name": "v2023_10_01",
            "value": "2023-10-01"
          }
        ]
      }
    },
    "object": {
      "type": "object",
      "properties": {}
    }
  },
  "parameters": {
    "AggregationQueryParameter": {
      "name": "aggregation",
      "in": "query",
      "required": true,
      "description": "Aggregation methods for latency.",
      "type": "string",
      "enum": [
        "P99",
        "P95",
        "Avg"
      ],
      "x-ms-enum": {
        "name": "Aggregation",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "required": false,
      "description": "The maximum number of result items per page.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "required": false,
      "description": "The number of result items to skip.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "required": false,
      "description": "The number of result items to return.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ContentSafetyOperationQueryParameter": {
      "name": "contentSafetyOperation",
      "in": "query",
      "required": true,
      "description": "Content safety Operation.",
      "type": "string",
      "enum": [
        "AnalyzeText",
        "AnalyzeImage"
      ],
      "x-ms-enum": {
        "name": "ContentSafetyOperation",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "ContentSafetyVersionQueryParameter": {
      "name": "contentSafetyVersion",
      "in": "query",
      "required": true,
      "description": "Content safety API version.",
      "type": "string",
      "enum": [
        "2023-04-30-preview",
        "2023-10-01"
      ],
      "x-ms-enum": {
        "name": "ContentSafetyVersion",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "EndTimeQueryParameter": {
      "name": "end",
      "in": "query",
      "required": true,
      "description": "End date time inclusive.",
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method"
    },
    "ModalityTypeQueryParameter": {
      "name": "modality",
      "in": "query",
      "required": true,
      "description": "Modality type.",
      "type": "string",
      "enum": [
        "Text",
        "Image"
      ],
      "x-ms-enum": {
        "name": "ContentModality",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "StartTimeQueryParameter": {
      "name": "start",
      "in": "query",
      "required": true,
      "description": "Start date time inclusive.",
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method"
    },
    "TimeGranularityQueryParameter": {
      "name": "granularity",
      "in": "query",
      "required": true,
      "description": "Time granularity.",
      "type": "string",
      "enum": [
        "Hourly",
        "Daily"
      ],
      "x-ms-enum": {
        "name": "Granularity",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "TopTermQueryParameter": {
      "name": "top",
      "in": "query",
      "required": true,
      "description": "The number of result items to return. ",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}
