{
  "swagger": "2.0",
  "info": {
    "title": "BatchServiceClient",
    "version": "2023-04-01.17.0",
    "description": "A client for issuing REST requests to the Azure Batch service.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AADToken": [
        "https://batch.core.windows.net//.default"
      ]
    }
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://batch.core.windows.net//.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "Applications"
    },
    {
      "name": "Pools"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Certificates"
    },
    {
      "name": "Files"
    },
    {
      "name": "JobSchedules"
    },
    {
      "name": "Tasks"
    },
    {
      "name": "ComputeNodes"
    }
  ],
  "paths": {
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Application_List",
        "summary": "Lists all of the applications available in the specified Account.",
        "description": "This operation returns only Applications and versions that are available for\nuse on Compute Nodes; that is, that can be used in an Package reference. For\nadministrator information about applications and versions that are not yet\navailable to Compute Nodes, use the Azure portal or the Azure Resource Manager\nAPI.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List applications": {
            "$ref": "./examples/ApplicationList.json"
          }
        }
      }
    },
    "/applications/{applicationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_Get",
        "summary": "Gets information about the specified Application.",
        "description": "This operation returns only Applications and versions that are available for\nuse on Compute Nodes; that is, that can be used in an Package reference. For\nadministrator information about Applications and versions that are not yet\navailable to Compute Nodes, use the Azure portal or the Azure Resource Manager\nAPI.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "A string that uniquely identifies the application within the Account.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get applications": {
            "$ref": "./examples/ApplicationGet.json"
          }
        }
      }
    },
    "/certificates": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "operationId": "Certificates_Add",
        "summary": "Adds a Certificate to the specified Account.",
        "description": "Adds a Certificate to the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "certificate",
            "in": "body",
            "required": true,
            "description": "The Certificate to be added.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Certificate add": {
            "$ref": "./examples/CertificateAdd.json"
          }
        }
      },
      "get": {
        "tags": [
          "Certificates"
        ],
        "operationId": "Certificates_List",
        "summary": "Lists all of the Certificates that have been added to the specified Account.",
        "description": "Lists all of the Certificates that have been added to the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Certificate list": {
            "$ref": "./examples/CertificateList.json"
          }
        }
      }
    },
    "/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})": {
      "delete": {
        "tags": [
          "Certificates"
        ],
        "operationId": "Certificates_Delete",
        "summary": "Deletes a Certificate from the specified Account.",
        "description": "You cannot delete a Certificate if a resource (Pool or Compute Node) is using\nit. Before you can delete a Certificate, you must therefore make sure that the\nCertificate is not associated with any existing Pools, the Certificate is not\ninstalled on any Nodes (even if you remove a Certificate from a Pool, it is not\nremoved from existing Compute Nodes in that Pool until they restart), and no\nrunning Tasks depend on the Certificate. If you try to delete a Certificate\nthat is in use, the deletion fails. The Certificate status changes to\ndeleteFailed. You can use Cancel Delete Certificate to set the status back to\nactive if you decide that you want to continue using the Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "thumbprintAlgorithm",
            "in": "path",
            "required": true,
            "description": "The algorithm used to derive the thumbprint parameter. This must be sha1.",
            "type": "string"
          },
          {
            "name": "thumbprint",
            "in": "path",
            "required": true,
            "description": "The thumbprint of the Certificate to be deleted.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Certificate delete": {
            "$ref": "./examples/CertificateDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Certificates"
        ],
        "operationId": "Certificates_Get",
        "description": "Gets information about the specified Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "thumbprintAlgorithm",
            "in": "path",
            "required": true,
            "description": "The algorithm used to derive the thumbprint parameter. This must be sha1.",
            "type": "string"
          },
          {
            "name": "thumbprint",
            "in": "path",
            "required": true,
            "description": "The thumbprint of the Certificate to get.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Certificate get": {
            "$ref": "./examples/CertificateGet.json"
          }
        }
      }
    },
    "/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "operationId": "Certificates_CancelDeletion",
        "summary": "Cancels a failed deletion of a Certificate from the specified Account.",
        "description": "If you try to delete a Certificate that is being used by a Pool or Compute\nNode, the status of the Certificate changes to deleteFailed. If you decide that\nyou want to continue using the Certificate, you can use this operation to set\nthe status of the Certificate back to active. If you intend to delete the\nCertificate, you do not need to run this operation after the deletion failed.\nYou must make sure that the Certificate is not being used by any resources, and\nthen you can try again to delete the Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "thumbprintAlgorithm",
            "in": "path",
            "required": true,
            "description": "The algorithm used to derive the thumbprint parameter. This must be sha1.",
            "type": "string"
          },
          {
            "name": "thumbprint",
            "in": "path",
            "required": true,
            "description": "The thumbprint of the Certificate being deleted.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Certificate cancel delete": {
            "$ref": "./examples/CertificateCancelDelete.json"
          }
        }
      }
    },
    "/jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Add",
        "summary": "Adds a Job to the specified Account.",
        "description": "The Batch service supports two ways to control the work done as part of a Job.\nIn the first approach, the user specifies a Job Manager Task. The Batch service\nlaunches this Task when it is ready to start the Job. The Job Manager Task\ncontrols all other Tasks that run under this Job, by using the Task APIs. In\nthe second approach, the user directly controls the execution of Tasks under an\nactive Job, by using the Task APIs. Also note: when naming Jobs, avoid\nincluding sensitive information such as user names or secret project names.\nThis information may appear in telemetry logs accessible to Microsoft Support\nengineers.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "job",
            "in": "body",
            "required": true,
            "description": "The Job to be added.",
            "schema": {
              "$ref": "#/definitions/BatchJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Add a complex job": {
            "$ref": "./examples/JobAdd_Complex.json"
          },
          "Add a basic job": {
            "$ref": "./examples/JobAdd_Basic.json"
          }
        }
      },
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_List",
        "summary": "Lists all of the Jobs in the specified Account.",
        "description": "Lists all of the Jobs in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJobListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Job list": {
            "$ref": "./examples/JobList.json"
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "delete": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Delete",
        "summary": "Deletes a Job.",
        "description": "Deleting a Job also deletes all Tasks that are part of that Job, and all Job\nstatistics. This also overrides the retention period for Task data; that is, if\nthe Job contains Tasks which are still retained on Compute Nodes, the Batch\nservices deletes those Tasks' working directories and all their contents.  When\na Delete Job request is received, the Batch service sets the Job to the\ndeleting state. All update operations on a Job that is in deleting state will\nfail with status code 409 (Conflict), with additional information indicating\nthat the Job is being deleted.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The parameters for a widget status request",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Job": {
            "$ref": "./examples/JobDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Get",
        "summary": "Gets information about the specified Job.",
        "description": "Gets information about the specified Job.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job get": {
            "$ref": "./examples/JobGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Patch",
        "summary": "Updates the properties of the specified Job.",
        "description": "This replaces only the Job properties specified in the request. For example, if\nthe Job has constraints, and a request does not specify the constraints\nelement, then the Job keeps the existing constraints.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job whose properties you want to update.",
            "type": "string"
          },
          {
            "name": "jobUpdate",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJobUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Job patch": {
            "$ref": "./examples/JobPatch.json"
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Update",
        "summary": "Updates the properties of the specified Job.",
        "description": "This fully replaces all the updatable properties of the Job. For example, if\nthe Job has constraints associated with it and if constraints is not specified\nwith this request, then the Batch service will remove the existing constraints.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job whose properties you want to update.",
            "type": "string"
          },
          {
            "name": "job",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Job update": {
            "$ref": "./examples/JobUpdate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/addtaskcollection": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_AddCollection",
        "summary": "Adds a collection of Tasks to the specified Job.",
        "description": "Note that each Task must have a unique ID. The Batch service may not return the\nresults for each Task in the same order the Tasks were submitted in this\nrequest. If the server times out or the connection is closed during the\nrequest, the request may have been partially or fully processed, or not at all.\nIn such cases, the user should re-issue the request. Note that it is up to the\nuser to correctly handle failures when re-issuing a request. For example, you\nshould use the same Task IDs during a retry so that if the prior operation\nsucceeded, the retry will not create extra Tasks unexpectedly. If the response\ncontains any Tasks which failed to add, a client can retry the request. In a\nretry, it is most efficient to resubmit only Tasks that failed to add, and to\nomit Tasks that were successfully added on the first attempt. The maximum\nlifetime of a Task from addition to completion is 180 days. If a Task has not\ncompleted within 180 days of being added it will be terminated by the Batch\nservice and left in whatever state it was in at that time.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to which the Task collection is to be added.",
            "type": "string"
          },
          {
            "name": "taskCollection",
            "in": "body",
            "required": true,
            "description": "The Tasks to be added.",
            "schema": {
              "$ref": "#/definitions/BatchTaskCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TaskAddCollectionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Add a complex collection of tasks": {
            "$ref": "./examples/TaskAddCollection_Complex.json"
          },
          "Add a basic collection of tasks": {
            "$ref": "./examples/TaskAddCollection_Basic.json"
          }
        }
      }
    },
    "/jobs/{jobId}/disable": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Disable",
        "summary": "Disables the specified Job, preventing new Tasks from running.",
        "description": "The Batch Service immediately moves the Job to the disabling state. Batch then\nuses the disableTasks parameter to determine what to do with the currently\nrunning Tasks of the Job. The Job remains in the disabling state until the\ndisable operation is completed and all Tasks have been dealt with according to\nthe disableTasks option; the Job then moves to the disabled state. No new Tasks\nare started under the Job until it moves back to active state. If you try to\ndisable a Job that is in any state other than active, disabling, or disabled,\nthe request fails with status code 409.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to disable.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJobDisableParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Job disable": {
            "$ref": "./examples/JobDisable.json"
          }
        }
      }
    },
    "/jobs/{jobId}/enable": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Enable",
        "summary": "Enables the specified Job, allowing new Tasks to run.",
        "description": "When you call this API, the Batch service sets a disabled Job to the enabling\nstate. After the this operation is completed, the Job moves to the active\nstate, and scheduling of new Tasks under the Job resumes. The Batch service\ndoes not allow a Task to remain in the active state for more than 180 days.\nTherefore, if you enable a Job containing active Tasks which were added more\nthan 180 days ago, those Tasks will not run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to enable.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job enable": {
            "$ref": "./examples/JobEnable.json"
          }
        }
      }
    },
    "/jobs/{jobId}/jobpreparationandreleasetaskstatus": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_ListPreparationAndReleaseTaskStatus",
        "summary": "Lists the execution status of the Job Preparation and Job Release Task for the\nspecified Job across the Compute Nodes where the Job has run.",
        "description": "This API returns the Job Preparation and Job Release Task status on all Compute\nNodes that have run the Job Preparation or Job Release Task. This includes\nCompute Nodes which have since been removed from the Pool. If this API is\ninvoked on a Job which has no Job Preparation or Job Release Task, the Batch\nservice returns HTTP status code 409 (Conflict) with an error code of\nJobPreparationTaskNotSpecified.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJobListPreparationAndReleaseTaskStatusResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Job list preparation and release task status": {
            "$ref": "./examples/JobListPreparationAndReleaseTaskStatus.json"
          }
        }
      }
    },
    "/jobs/{jobId}/taskcounts": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_GetTaskCounts",
        "summary": "Gets the Task counts for the specified Job.",
        "description": "Task counts provide a count of the Tasks by active, running or completed Task\nstate, and a count of Tasks which succeeded or failed. Tasks in the preparing\nstate are counted as running. Note that the numbers returned may not always be\nup to date. If you need exact task counts, use a list query.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TaskCountsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job get task counts": {
            "$ref": "./examples/JobGetTaskCounts.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Add",
        "summary": "Adds a Task to the specified Job.",
        "description": "The maximum lifetime of a Task from addition to completion is 180 days. If a\nTask has not completed within 180 days of being added it will be terminated by\nthe Batch service and left in whatever state it was in at that time.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to which the Task is to be added.",
            "type": "string"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "description": "The Task to be added.",
            "schema": {
              "$ref": "#/definitions/BatchTask"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Add a task with extra slot requirement": {
            "$ref": "./examples/TaskAdd_RequiredSlots.json"
          },
          "Add a task with container settings": {
            "$ref": "./examples/TaskAdd_ContainerSettings.json"
          },
          "Add a task with exit conditions": {
            "$ref": "./examples/TaskAdd_ExitConditions.json"
          },
          "Add a basic task": {
            "$ref": "./examples/TaskAdd_Basic.json"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_List",
        "summary": "Lists all of the Tasks that are associated with the specified Job.",
        "description": "For multi-instance Tasks, information such as affinityId, executionInfo and\nnodeInfo refer to the primary Task. Use the list subtasks API to retrieve\ninformation about subtasks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchTaskListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Task list": {
            "$ref": "./examples/TaskList.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Delete",
        "summary": "Deletes a Task from the specified Job.",
        "description": "When a Task is deleted, all of the files in its directory on the Compute Node\nwhere it ran are also deleted (regardless of the retention time). For\nmulti-instance Tasks, the delete Task operation applies synchronously to the\nprimary task; subtasks and their files are then deleted asynchronously in the\nbackground.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job from which to delete the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task delete": {
            "$ref": "./examples/TaskDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Get",
        "summary": "Gets information about the specified Task.",
        "description": "For multi-instance Tasks, information such as affinityId, executionInfo and\nnodeInfo refer to the primary Task. Use the list subtasks API to retrieve\ninformation about subtasks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job that contains the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task to get information about.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task get": {
            "$ref": "./examples/TaskGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Update",
        "description": "Updates the properties of the specified Task.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job containing the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task to update.",
            "type": "string"
          },
          {
            "name": "task",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Task update": {
            "$ref": "./examples/TaskUpdate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "File_ListFromTask",
        "summary": "Lists the files in a Task's directory on its Compute Node.",
        "description": "Lists the files in a Task's directory on its Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job that contains the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task whose files you want to list.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files.",
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "description": "Whether to list children of the Task directory. This parameter can be used in\ncombination with the filter parameter to list specific type of files.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NodeFileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "File list from task": {
            "$ref": "./examples/FileListFromTask.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/files/{filePath}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "operationId": "File_DeleteFromTask",
        "summary": "Deletes the specified Task file from the Compute Node where the Task ran.",
        "description": "Deletes the specified Task file from the Compute Node where the Task ran.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.jobId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.taskId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "description": "Whether to delete children of a directory. If the filePath parameter represents\na directory instead of a file, you can set recursive to true to delete the\ndirectory and all of the files and subdirectories in it. If recursive is false\nthen the directory must be empty or deletion will fail.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File delete from task": {
            "$ref": "./examples/FileDeleteFromTask.json"
          }
        }
      },
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "File_GetFromTask",
        "description": "Returns the content of the specified Task file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.jobId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.taskId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "ocp-range",
            "in": "header",
            "required": false,
            "description": "The byte range to be retrieved. The default is to retrieve the entire file. The\nformat is bytes=startRange-endRange.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-creation-time": {
                "description": "The file creation time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-batch-file-isdirectory": {
                "description": "Whether the object represents a directory.",
                "type": "boolean"
              },
              "ocp-batch-file-url": {
                "description": "The URL of the file.",
                "type": "string"
              },
              "ocp-batch-file-mode": {
                "description": "The file mode attribute in octal format.",
                "type": "string"
              },
              "content-length": {
                "description": "The length of the file.",
                "type": "integer",
                "format": "int64"
              }
            },
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "x-ms-examples": {
          "Get File From Task": {
            "$ref": "./examples/FileGetFromTask.json"
          }
        }
      },
      "head": {
        "tags": [
          "Files"
        ],
        "operationId": "File_GetPropertiesFromTask",
        "description": "Gets the properties of the specified Task file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.jobId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.taskId"
          },
          {
            "$ref": "#/parameters/BatchJobFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-creation-time": {
                "description": "The file creation time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-batch-file-isdirectory": {
                "description": "Whether the object represents a directory.",
                "type": "boolean"
              },
              "ocp-batch-file-url": {
                "description": "The URL of the file.",
                "type": "string"
              },
              "ocp-batch-file-mode": {
                "description": "The file mode attribute in octal format.",
                "type": "string"
              },
              "content-length": {
                "description": "The length of the file.",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File get properties from task": {
            "$ref": "./examples/FileGetPropertiesFromTask.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/reactivate": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Reactivate",
        "summary": "Reactivates a Task, allowing it to run again even if its retry count has been\nexhausted.",
        "description": "Reactivation makes a Task eligible to be retried again up to its maximum retry\ncount. The Task's state is changed to active. As the Task is no longer in the\ncompleted state, any previous exit code or failure information is no longer\navailable after reactivation. Each time a Task is reactivated, its retry count\nis reset to 0. Reactivation will fail for Tasks that are not completed or that\npreviously completed successfully (with an exit code of 0). Additionally, it\nwill fail if the Job has completed (or is terminating or deleting).",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job containing the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task to reactivate.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task reactivate": {
            "$ref": "./examples/TaskReactivate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/subtasksinfo": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_ListSubtasks",
        "summary": "Lists all of the subtasks that are associated with the specified multi-instance\nTask.",
        "description": "If the Task is not a multi-instance Task then this returns an empty collection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchTaskListSubtasksResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task list subtasks": {
            "$ref": "./examples/TaskListSubtasks.json"
          }
        }
      }
    },
    "/jobs/{jobId}/tasks/{taskId}/terminate": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task_Terminate",
        "summary": "Terminates the specified Task.",
        "description": "When the Task has been terminated, it moves to the completed state. For\nmulti-instance Tasks, the terminate Task operation applies synchronously to the\nprimary task; subtasks are then terminated asynchronously in the background.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job containing the Task.",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the Task to terminate.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Task terminate": {
            "$ref": "./examples/TaskTerminate.json"
          }
        }
      }
    },
    "/jobs/{jobId}/terminate": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_Terminate",
        "summary": "Terminates the specified Job, marking it as completed.",
        "description": "When a Terminate Job request is received, the Batch service sets the Job to the\nterminating state. The Batch service then terminates any running Tasks\nassociated with the Job and runs any required Job release Tasks. Then the Job\nmoves into the completed state. If there are any Tasks in the Job in the active\nstate, they will remain in the active state. Once a Job is terminated, new\nTasks cannot be added and any remaining active Tasks will not be scheduled.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job to terminate.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJobTerminateParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job terminate": {
            "$ref": "./examples/JobTerminate.json"
          }
        }
      }
    },
    "/jobschedules": {
      "post": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Add",
        "summary": "Adds a Job Schedule to the specified Account.",
        "description": "Adds a Job Schedule to the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "jobSchedule",
            "in": "body",
            "required": true,
            "description": "The Job Schedule to be added.",
            "schema": {
              "$ref": "#/definitions/BatchJobSchedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Add a complex JobScheduleAdd": {
            "$ref": "./examples/JobScheduleAdd_Complex.json"
          },
          "Add a basic JobSchedule": {
            "$ref": "./examples/JobScheduleAdd_Basic.json"
          }
        }
      },
      "get": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_List",
        "summary": "Lists all of the Job Schedules in the specified Account.",
        "description": "Lists all of the Job Schedules in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJobScheduleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobSchedule list": {
            "$ref": "./examples/JobScheduleList.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}": {
      "head": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Exists",
        "summary": "Checks the specified Job Schedule exists.",
        "description": "Checks the specified Job Schedule exists.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule which you want to check.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Check Job Schedule Exists": {
            "$ref": "./examples/JobScheduleExists.json"
          }
        }
      },
      "delete": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Delete",
        "summary": "Deletes a Job Schedule from the specified Account.",
        "description": "When you delete a Job Schedule, this also deletes all Jobs and Tasks under that\nschedule. When Tasks are deleted, all the files in their working directories on\nthe Compute Nodes are also deleted (the retention period is ignored). The Job\nSchedule statistics are no longer accessible once the Job Schedule is deleted,\nthough they are still counted towards Account lifetime statistics.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The parameters for a widget status request",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule delete": {
            "$ref": "./examples/JobScheduleDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Get",
        "description": "Gets information about the specified Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to get.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJobSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule get": {
            "$ref": "./examples/JobScheduleGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Patch",
        "summary": "Updates the properties of the specified Job Schedule.",
        "description": "This replaces only the Job Schedule properties specified in the request. For\nexample, if the schedule property is not specified with this request, then the\nBatch service will keep the existing schedule. Changes to a Job Schedule only\nimpact Jobs created by the schedule after the update has taken place; currently\nrunning Jobs are unaffected.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to update.",
            "type": "string"
          },
          {
            "name": "jobScheduleUpdate",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJobScheduleUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "JobSchedule patch": {
            "$ref": "./examples/JobSchedulePatch.json"
          }
        }
      },
      "put": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Update",
        "summary": "Updates the properties of the specified Job Schedule.",
        "description": "This fully replaces all the updatable properties of the Job Schedule. For\nexample, if the schedule property is not specified with this request, then the\nBatch service will remove the existing schedule. Changes to a Job Schedule only\nimpact Jobs created by the schedule after the update has taken place; currently\nrunning Jobs are unaffected.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to update.",
            "type": "string"
          },
          {
            "name": "jobSchedule",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchJobSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "JobSchedule update": {
            "$ref": "./examples/JobScheduleUpdate.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/disable": {
      "post": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Disable",
        "summary": "Disables a Job Schedule.",
        "description": "No new Jobs will be created until the Job Schedule is enabled again.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to disable.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule disable": {
            "$ref": "./examples/JobScheduleDisable.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/enable": {
      "post": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Enable",
        "summary": "Enables a Job Schedule.",
        "description": "Enables a Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to enable.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule enable": {
            "$ref": "./examples/JobScheduleEnable.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_ListFromJobSchedule",
        "summary": "Lists the Jobs that have been created under the specified Job Schedule.",
        "description": "Lists the Jobs that have been created under the specified Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule from which you want to get a list of Jobs.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchJobListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Job Under Job Schedule": {
            "$ref": "./examples/JobListFromJobSchedule.json"
          }
        }
      }
    },
    "/jobschedules/{jobScheduleId}/terminate": {
      "post": {
        "tags": [
          "JobSchedules"
        ],
        "operationId": "JobSchedule_Terminate",
        "summary": "Terminates a Job Schedule.",
        "description": "Terminates a Job Schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "jobScheduleId",
            "in": "path",
            "required": true,
            "description": "The ID of the Job Schedule to terminates.",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "JobSchedule terminate": {
            "$ref": "./examples/JobScheduleTerminate.json"
          }
        }
      }
    },
    "/lifetimejobstats": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Job_GetAllLifetimeStatistics",
        "summary": "Gets lifetime summary statistics for all of the Jobs in the specified Account.",
        "description": "Statistics are aggregated across all Jobs that have ever existed in the\nAccount, from Account creation to the last update time of the statistics. The\nstatistics may not be immediately available. The Batch service performs\nperiodic roll-up of statistics. The typical delay is about 30 minutes.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/JobStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Job get lifetime statistics": {
            "$ref": "./examples/JobGetLifetimeStatistics.json"
          }
        }
      }
    },
    "/lifetimepoolstats": {
      "get": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_GetAllLifetimeStatistics",
        "summary": "Gets lifetime summary statistics for all of the Pools in the specified Account.",
        "description": "Statistics are aggregated across all Pools that have ever existed in the\nAccount, from Account creation to the last update time of the statistics. The\nstatistics may not be immediately available. The Batch service performs\nperiodic roll-up of statistics. The typical delay is about 30 minutes.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PoolStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool get lifetime statistics": {
            "$ref": "./examples/PoolGetLifetimeStatistics.json"
          }
        }
      }
    },
    "/nodecounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "Account_ListPoolNodeCounts",
        "description": "Gets the number of Compute Nodes in each state, grouped by Pool. Note that the\nnumbers returned may not always be up to date. If you need exact node counts,\nuse a list query.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PoolNodeCountsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NodeCountsPayload": {
            "$ref": "./examples/AccountListPoolNodeCounts.json"
          }
        }
      }
    },
    "/pools": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Add",
        "summary": "Adds a Pool to the specified Account.",
        "description": "When naming Pools, avoid including sensitive information such as user names or\nsecret project names. This information may appear in telemetry logs accessible\nto Microsoft Support engineers.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "pool",
            "in": "body",
            "required": true,
            "description": "The Pool to be added.",
            "schema": {
              "$ref": "#/definitions/BatchPool"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Add a pool with mount drive specified": {
            "$ref": "./examples/PoolAdd_MountConfiguration.json"
          },
          "Add a VirtualMachineConfiguration pool with extensions": {
            "$ref": "./examples/PoolAdd_VirtualMachineConfigurationWithExtensions.json"
          },
          "Add a VirtualMachineConfiguration pool with containers": {
            "$ref": "./examples/PoolAdd_VirtualMachineConfigurationWithContainers.json"
          },
          "Add a VirtualMachineConfiguration pool": {
            "$ref": "./examples/PoolAdd_VirtualMachineConfiguration.json"
          },
          "Add a CloudServiceConfiguration pool": {
            "$ref": "./examples/PoolAdd_CloudServiceConfiguration.json"
          }
        }
      },
      "get": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_List",
        "summary": "Lists all of the Pools in the specified Account.",
        "description": "Lists all of the Pools in the specified Account.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchPoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Pool list": {
            "$ref": "./examples/PoolList_Basic.json"
          }
        }
      }
    },
    "/pools/{poolId}": {
      "delete": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Delete",
        "summary": "Deletes a Pool from the specified Account.",
        "description": "When you request that a Pool be deleted, the following actions occur: the Pool\nstate is set to deleting; any ongoing resize operation on the Pool are stopped;\nthe Batch service starts resizing the Pool to zero Compute Nodes; any Tasks\nrunning on existing Compute Nodes are terminated and requeued (as if a resize\nPool operation had been requested with the default requeue option); finally,\nthe Pool is removed from the system. Because running Tasks are requeued, the\nuser can rerun these Tasks by updating their Job to target a different Pool.\nThe Tasks can then run on the new Pool. If you want to override the requeue\nbehavior, then you should call resize Pool explicitly to shrink the Pool to\nzero size before deleting the Pool. If you call an Update, Patch or Delete API\non a Pool in the deleting state, it will fail with HTTP status code 409 with\nerror code PoolBeingDeleted.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          }
        ],
        "responses": {
          "202": {
            "description": "The parameters for a widget status request",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool delete": {
            "$ref": "./examples/PoolDelete.json"
          }
        }
      },
      "head": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Exists",
        "description": "Gets basic properties of a Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          }
        ],
        "responses": {
          "200": {
            "description": "A response containing headers related to the Pool, if it exists.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The Pool does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Check Pool Exists": {
            "$ref": "./examples/PoolExists.json"
          }
        }
      },
      "get": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Get",
        "description": "Gets information about the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "description": "An OData $expand clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/BatchPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get a VirtualMachineConfiguration pool with extensions": {
            "$ref": "./examples/PoolGet_VirtualMachineConfigurationWithExtensions.json"
          },
          "Pool get": {
            "$ref": "./examples/PoolGet_Basic.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Patch",
        "summary": "Updates the properties of the specified Pool.",
        "description": "This only replaces the Pool properties specified in the request. For example,\nif the Pool has a StartTask associated with it, and a request does not specify\na StartTask element, then the Pool keeps the existing StartTask.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "poolUpdate",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchPoolUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Patch the Pool": {
            "$ref": "./examples/PoolPatch.json"
          }
        }
      }
    },
    "/pools/{poolId}/disableautoscale": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_DisableAutoScale",
        "summary": "Disables automatic scaling for a Pool.",
        "description": "Disables automatic scaling for a Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool on which to disable automatic scaling.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Disable pool autoscale": {
            "$ref": "./examples/PoolDisableAutoScale.json"
          }
        }
      }
    },
    "/pools/{poolId}/enableautoscale": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_EnableAutoScale",
        "summary": "Enables automatic scaling for a Pool.",
        "description": "You cannot enable automatic scaling on a Pool if a resize operation is in\nprogress on the Pool. If automatic scaling of the Pool is currently disabled,\nyou must specify a valid autoscale formula as part of the request. If automatic\nscaling of the Pool is already enabled, you may specify a new autoscale formula\nand/or a new evaluation interval. You cannot call this API for the same Pool\nmore than once every 30 seconds.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "poolEnableAutoScaleParameter",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchPoolEnableAutoScaleParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Pool enable autoscale": {
            "$ref": "./examples/PoolEnableAutoscale.json"
          }
        }
      }
    },
    "/pools/{poolId}/evaluateautoscale": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_EvaluateAutoScale",
        "summary": "Gets the result of evaluating an automatic scaling formula on the Pool.",
        "description": "This API is primarily for validating an autoscale formula, as it simply returns\nthe result without applying the formula to the Pool. The Pool must have auto\nscaling enabled in order to evaluate a formula.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool on which to evaluate the automatic scaling formula.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchPoolEvaluateAutoScaleParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AutoScaleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Pool evaluate autoscale": {
            "$ref": "./examples/PoolEvaluateAutoscale.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_List",
        "summary": "Lists the Compute Nodes in the specified Pool.",
        "description": "Lists the Compute Nodes in the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool from which you want to list Compute Nodes.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeNodeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Node list": {
            "$ref": "./examples/NodeList.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_Get",
        "summary": "Gets information about the specified Compute Node.",
        "description": "Gets information about the specified Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node that you want to get information about.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node get": {
            "$ref": "./examples/NodeGet_Basic.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/disablescheduling": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_DisableScheduling",
        "summary": "Disables Task scheduling on the specified Compute Node.",
        "description": "You can disable Task scheduling on a Compute Node only if its current\nscheduling state is enabled.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node on which you want to disable Task scheduling.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/NodeDisableSchedulingParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node disable scheduling": {
            "$ref": "./examples/NodeDisableScheduling.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/enablescheduling": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_EnableScheduling",
        "summary": "Enables Task scheduling on the specified Compute Node.",
        "description": "You can enable Task scheduling on a Compute Node only if its current scheduling\nstate is disabled",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node on which you want to enable Task scheduling.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node enable scheduling": {
            "$ref": "./examples/NodeEnableScheduling.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/extensions": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodeExtensions_List",
        "summary": "Lists the Compute Nodes Extensions in the specified Pool.",
        "description": "Lists the Compute Nodes Extensions in the specified Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node that you want to list extensions.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NodeVMExtensionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List compute node extensions": {
            "$ref": "./examples/ComputeNodeExtensionList.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/extensions/{extensionName}": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodeExtensions_Get",
        "summary": "Gets information about the specified Compute Node Extension.",
        "description": "Gets information about the specified Compute Node Extension.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node that contains the extensions.",
            "type": "string"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "description": "The name of the of the Compute Node Extension that you want to get information\nabout.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "description": "An OData $select clause.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NodeVMExtension"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get compute node extension": {
            "$ref": "./examples/ComputeNodeExtensionGet.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "File_ListFromComputeNode",
        "summary": "Lists all of the files in Task directories on the specified Compute Node.",
        "description": "Lists all of the files in Task directories on the specified Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node whose files you want to list.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files.",
            "type": "string"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "description": "Whether to list children of a directory.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/NodeFileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "File list from node": {
            "$ref": "./examples/FileListFromNode.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/files/{filePath}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "operationId": "File_DeleteFromComputeNode",
        "summary": "Deletes the specified file from the Compute Node.",
        "description": "Deletes the specified file from the Compute Node.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.poolId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.nodeId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "description": "Whether to delete children of a directory. If the filePath parameter represents\na directory instead of a file, you can set recursive to true to delete the\ndirectory and all of the files and subdirectories in it. If recursive is false\nthen the directory must be empty or deletion will fail.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File delete from node": {
            "$ref": "./examples/FileDeleteFromNode.json"
          }
        }
      },
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "File_GetFromComputeNode",
        "description": "Returns the content of the specified Compute Node file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.poolId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.nodeId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "ocp-range",
            "in": "header",
            "required": false,
            "description": "The byte range to be retrieved. The default is to retrieve the entire file. The\nformat is bytes=startRange-endRange.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-creation-time": {
                "description": "The file creation time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-batch-file-isdirectory": {
                "description": "Whether the object represents a directory.",
                "type": "boolean"
              },
              "ocp-batch-file-url": {
                "description": "The URL of the file.",
                "type": "string"
              },
              "ocp-batch-file-mode": {
                "description": "The file mode attribute in octal format.",
                "type": "string"
              },
              "content-length": {
                "description": "The length of the file.",
                "type": "integer",
                "format": "int64"
              }
            },
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get File From Compute Node": {
            "$ref": "./examples/FileGetFromNode.json"
          }
        }
      },
      "head": {
        "tags": [
          "Files"
        ],
        "operationId": "File_GetPropertiesFromComputeNode",
        "description": "Gets the properties of the specified Compute Node file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.poolId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.nodeId"
          },
          {
            "$ref": "#/parameters/BatchPoolFileClientRequestHeaders.filePath"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-creation-time": {
                "description": "The file creation time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "ocp-batch-file-isdirectory": {
                "description": "Whether the object represents a directory.",
                "type": "boolean"
              },
              "ocp-batch-file-url": {
                "description": "The URL of the file.",
                "type": "string"
              },
              "ocp-batch-file-mode": {
                "description": "The file mode attribute in octal format.",
                "type": "string"
              },
              "content-length": {
                "description": "The length of the file.",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "File get properties from node": {
            "$ref": "./examples/FileGetPropertiesFromNode.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/rdp": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_GetRemoteDesktop",
        "summary": "Gets the Remote Desktop Protocol file for the specified Compute Node.",
        "description": "Before you can access a Compute Node by using the RDP file, you must create a\nuser Account on the Compute Node. This API can only be invoked on Pools created\nwith a cloud service configuration. For Pools created with a virtual machine\nconfiguration, see the GetRemoteLoginSettings API.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node for which you want to get the Remote Desktop\nProtocol file.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Get RDP file of the compute node": {
            "$ref": "./examples/NodeGetRemoteDesktop.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/reboot": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_Reboot",
        "summary": "Restarts the specified Compute Node.",
        "description": "You can restart a Compute Node only if it is in an idle or running state.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node that you want to restart.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/NodeRebootParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Node reboot": {
            "$ref": "./examples/NodeReboot.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/reimage": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_Reimage",
        "summary": "Reinstalls the operating system on the specified Compute Node.",
        "description": "You can reinstall the operating system on a Compute Node only if it is in an\nidle or running state. This API can be invoked only on Pools created with the\ncloud service configuration property.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node that you want to restart.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/NodeReimageParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Node reimage": {
            "$ref": "./examples/NodeReimage.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/remoteloginsettings": {
      "get": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_GetRemoteLoginSettings",
        "summary": "Gets the settings required for remote login to a Compute Node.",
        "description": "Before you can remotely login to a Compute Node using the remote login\nsettings, you must create a user Account on the Compute Node. This API can be\ninvoked only on Pools created with the virtual machine configuration property.\nFor Pools created with a cloud service configuration, see the GetRemoteDesktop\nAPI.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node for which to obtain the remote login settings.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeNodeGetRemoteLoginSettingsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node get remote login settings": {
            "$ref": "./examples/NodeGetRemoteLoginSettings.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/uploadbatchservicelogs": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_UploadBatchServiceLogs",
        "summary": "Upload Azure Batch service log files from the specified Compute Node to Azure\nBlob Storage.",
        "description": "This is for gathering Azure Batch service log files in an automated fashion\nfrom Compute Nodes if you are experiencing an error and wish to escalate to\nAzure support. The Azure Batch service log files should be shared with Azure\nsupport to aid in debugging issues with the Batch service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the Compute Node for which you want to get the Remote Desktop\nProtocol file.",
            "type": "string"
          },
          {
            "name": "uploadBatchServiceLogsConfiguration",
            "in": "body",
            "required": true,
            "description": "The Azure Batch service log files upload configuration.",
            "schema": {
              "$ref": "#/definitions/UploadBatchServiceLogsConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UploadBatchServiceLogsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Upload BatchService Logs": {
            "$ref": "./examples/NodeUploadBatchServiceLogs.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/users": {
      "post": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_AddUser",
        "summary": "Adds a user Account to the specified Compute Node.",
        "description": "You can add a user Account to a Compute Node only when it is in the idle or\nrunning state.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the machine on which you want to create a user Account.",
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "description": "The user Account to be created.",
            "schema": {
              "$ref": "#/definitions/ComputeNodeUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Node add user": {
            "$ref": "./examples/NodeAddUser.json"
          }
        }
      }
    },
    "/pools/{poolId}/nodes/{nodeId}/users/{userName}": {
      "delete": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_DeleteUser",
        "summary": "Deletes a user Account from the specified Compute Node.",
        "description": "You can delete a user Account to a Compute Node only when it is in the idle or\nrunning state.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the machine on which you want to delete a user Account.",
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "description": "The name of the user Account to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Node delete user": {
            "$ref": "./examples/NodeDeleteUser.json"
          }
        }
      },
      "put": {
        "tags": [
          "ComputeNodes"
        ],
        "operationId": "ComputeNodes_UpdateUser",
        "summary": "Updates the password and expiration time of a user Account on the specified\nCompute Node.",
        "description": "This operation replaces of all the updatable properties of the Account. For\nexample, if the expiryTime element is not specified, the current value is\nreplaced with the default value, not left unmodified. You can update a user\nAccount on a Compute Node only when it is in the idle or running state.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool that contains the Compute Node.",
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "description": "The ID of the machine on which you want to update a user Account.",
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "description": "The name of the user Account to update.",
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/NodeUpdateUserParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Node update user": {
            "$ref": "./examples/NodeUpdateUser.json"
          }
        }
      }
    },
    "/pools/{poolId}/removenodes": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_RemoveNodes",
        "summary": "Removes Compute Nodes from the specified Pool.",
        "description": "This operation can only run when the allocation state of the Pool is steady.\nWhen this operation runs, the allocation state changes from steady to resizing.\nEach request may remove up to 100 nodes.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/NodeRemoveParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request to the Batch service was successful.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Pool remove nodes": {
            "$ref": "./examples/PoolRemoveNodes.json"
          }
        }
      }
    },
    "/pools/{poolId}/resize": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_Resize",
        "summary": "Changes the number of Compute Nodes that are assigned to a Pool.",
        "description": "You can only resize a Pool when its allocation state is steady. If the Pool is\nalready resizing, the request fails with status code 409. When you resize a\nPool, the Pool's allocation state changes from steady to resizing. You cannot\nresize Pools which are configured for automatic scaling. If you try to do this,\nthe Batch service returns an error 409. If you resize a Pool downwards, the\nBatch service chooses which Compute Nodes to remove. To remove specific Compute\nNodes, use the Pool remove Compute Nodes API instead.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchPoolResizeParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Pool resize": {
            "$ref": "./examples/PoolResize.json"
          }
        }
      }
    },
    "/pools/{poolId}/stopresize": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_StopResize",
        "summary": "Stops an ongoing resize operation on the Pool.",
        "description": "This does not restore the Pool to its previous state before the resize\noperation: it only stops any further changes being made, and the Pool maintains\nits current state. After stopping, the Pool stabilizes at the number of Compute\nNodes it was at when the stop operation was done. During the stop operation,\nthe Pool allocation state changes first to stopping and then to steady. A\nresize operation need not be an explicit resize Pool request; this API can also\nbe used to halt the initial sizing of the Pool when it is created.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchPoolHeaders"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-Match"
          },
          {
            "$ref": "#/parameters/BatchMatchHeaders.If-None-Match"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Modified-Since"
          },
          {
            "$ref": "#/parameters/BatchModifiedSinceHeaders.If-Unmodified-Since"
          }
        ],
        "responses": {
          "202": {
            "description": "The request to the Batch service was successful.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-examples": {
          "Pool stop resize": {
            "$ref": "./examples/PoolStopResize.json"
          }
        }
      }
    },
    "/pools/{poolId}/updateproperties": {
      "post": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_UpdateProperties",
        "summary": "Updates the properties of the specified Pool.",
        "description": "This fully replaces all the updatable properties of the Pool. For example, if\nthe Pool has a StartTask associated with it and if StartTask is not specified\nwith this request, then the Batch service will remove the existing StartTask.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.ocp-date"
          },
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "description": "The ID of the Pool to update.",
            "type": "string"
          },
          {
            "name": "poolUpdatePropertiesParameter",
            "in": "body",
            "required": true,
            "description": "The parameters for the request.",
            "schema": {
              "$ref": "#/definitions/BatchPool"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request to the Batch service was successful.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "DataServiceId": {
                "description": "The OData ID of the resource to which the request applied",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "consumes": [
          "application/json; odata=minimalmetadata"
        ],
        "x-ms-examples": {
          "Pool update": {
            "$ref": "./examples/PoolUpdate.json"
          }
        }
      }
    },
    "/poolusagemetrics": {
      "get": {
        "tags": [
          "Pools"
        ],
        "operationId": "Pool_ListUsageMetrics",
        "summary": "Lists the usage metrics, aggregated by Pool across individual time intervals,\nfor the specified Account.",
        "description": "If you do not specify a $filter clause including a poolId, the response\nincludes all Pools that existed in the Account in the time range of the\nreturned aggregation intervals. If you do not specify a $filter clause\nincluding a startTime or endTime these filters default to the start and end\ntimes of the last aggregation interval currently available; that is, only the\nlast aggregation interval is returned.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PoolUsageMetrics"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "PoolUsageMetrics[]",
                  "description": "The PoolUsageMetrics items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of PoolUsageMetrics items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<PoolUsageMetrics, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Pool list usage metrics": {
            "$ref": "./examples/PoolListUsageMetrics.json"
          }
        }
      }
    },
    "/supportedimages": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "Account_ListSupportedImages",
        "summary": "Lists all Virtual Machine Images supported by the Azure Batch service.",
        "description": "Lists all Virtual Machine Images supported by the Azure Batch service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.maxresults"
          },
          {
            "$ref": "#/parameters/BatchApplicationListHeaders.ocp-date"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.timeOut"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.client-request-id"
          },
          {
            "$ref": "#/parameters/BatchClientRequestHeaders.return-client-request-id"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "client-request-id": {
                "description": "The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.",
                "format": "uuid",
                "type": "string"
              },
              "request-id": {
                "description": "A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.",
                "format": "uuid",
                "type": "string"
              },
              "etag": {
                "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.",
                "type": "string"
              },
              "last-modified": {
                "description": "The time at which the resource was last modified.",
                "format": "date-time-rfc1123",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AccountListSupportedImagesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/BatchError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Account list node agent skus": {
            "$ref": "./examples/AccountListSupportedImages.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AADToken": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ],
          "description": "OAuth2 authentication"
        },
        "flows": {
          "type": "array",
          "items": {},
          "x-typespec-name": "[(anonymous model)]",
          "description": "Supported OAuth2 flows"
        }
      },
      "description": "The Azure Active Directory OAuth2 Flow",
      "required": [
        "type",
        "flows"
      ]
    },
    "AccessScope": {
      "type": "string",
      "enum": [
        "job"
      ],
      "x-ms-enum": {
        "name": "AccessScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Job",
            "value": "job",
            "description": "Grants access to perform all operations on the Job containing the Task."
          }
        ]
      }
    },
    "AccountListSupportedImagesResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageInformation"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ImageInformation[]",
          "description": "The list of supported Virtual Machine Images."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the supported Virtual Machine Images."
    },
    "AffinityInformation": {
      "type": "object",
      "properties": {
        "affinityId": {
          "type": "string",
          "description": "You can pass the affinityId of a Node to indicate that this Task needs to run\non that Compute Node. Note that this is just a soft affinity. If the target\nCompute Node is busy or unavailable at the time the Task is scheduled, then the\nTask will be scheduled elsewhere."
        }
      },
      "description": "A locality hint that can be used by the Batch service to select a Compute Node\non which to start a Task.",
      "required": [
        "affinityId"
      ]
    },
    "AllocationState": {
      "type": "string",
      "enum": [
        "steady",
        "resizing",
        "stopping"
      ],
      "x-ms-enum": {
        "name": "AllocationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Steady",
            "value": "steady",
            "description": "The Pool is not resizing. There are no changes to the number of Compute Nodes in the Pool in progress. A Pool enters this state when it is created and when no operations are being performed on the Pool to change the number of Compute Nodes."
          },
          {
            "name": "Resizing",
            "value": "resizing",
            "description": "The Pool is resizing; that is, Compute Nodes are being added to or removed from the Pool."
          },
          {
            "name": "Stopping",
            "value": "stopping",
            "description": "The Pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed."
          }
        ]
      }
    },
    "Application": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the application within the Account.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the application."
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The list of available versions of the application."
        }
      },
      "description": "Contains information about an application in an Azure Batch Account.",
      "required": [
        "id",
        "displayName",
        "versions"
      ]
    },
    "ApplicationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "x-typespec-name": "Application[]",
          "description": "The list of applications available in the Account."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the applications available in an Account."
    },
    "ApplicationPackageReference": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "When creating a pool, the package's application ID must be fully qualified\n(/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName})."
        },
        "version": {
          "type": "string",
          "description": "If this is omitted on a Pool, and no default version is specified for this\napplication, the request fails with the error code\nInvalidApplicationPackageReferences and HTTP status code 409. If this is\nomitted on a Task, and no default version is specified for this application,\nthe Task fails with a pre-processing error."
        }
      },
      "description": "A reference to an Package to be deployed to Compute Nodes.",
      "required": [
        "applicationId"
      ]
    },
    "AuthenticationTokenSettings": {
      "type": "object",
      "properties": {
        "access": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessScope"
          },
          "x-typespec-name": "AccessScope[]",
          "description": "The authentication token grants access to a limited set of Batch service\noperations. Currently the only supported value for the access property is\n'job', which grants access to all operations related to the Job which contains\nthe Task."
        }
      },
      "description": "The settings for an authentication token that the Task can use to perform Batch\nservice operations."
    },
    "AutoPoolSpecification": {
      "type": "object",
      "properties": {
        "autoPoolIdPrefix": {
          "type": "string",
          "description": "The Batch service assigns each auto Pool a unique identifier on creation. To\ndistinguish between Pools created for different purposes, you can specify this\nelement to add a prefix to the ID that is assigned. The prefix can be up to 20\ncharacters long."
        },
        "poolLifetimeOption": {
          "$ref": "#/definitions/PoolLifetimeOption",
          "description": "The minimum lifetime of created auto Pools, and how multiple Jobs on a schedule\nare assigned to Pools."
        },
        "keepAlive": {
          "type": "boolean",
          "description": "If false, the Batch service deletes the Pool once its lifetime (as determined\nby the poolLifetimeOption setting) expires; that is, when the Job or Job\nSchedule completes. If true, the Batch service does not delete the Pool\nautomatically. It is up to the user to delete auto Pools created with this\noption."
        },
        "pool": {
          "$ref": "#/definitions/PoolSpecification",
          "description": "Specification for creating a new Pool."
        }
      },
      "description": "Specifies characteristics for a temporary 'auto pool'. The Batch service will\ncreate this auto Pool when the Job is submitted.",
      "required": [
        "poolLifetimeOption"
      ]
    },
    "AutoPoolSpecificationUpdate": {
      "type": "object",
      "properties": {
        "autoPoolIdPrefix": {
          "type": "string",
          "description": "The Batch service assigns each auto Pool a unique identifier on creation. To\ndistinguish between Pools created for different purposes, you can specify this\nelement to add a prefix to the ID that is assigned. The prefix can be up to 20\ncharacters long."
        },
        "poolLifetimeOption": {
          "$ref": "#/definitions/PoolLifetimeOption",
          "description": "The minimum lifetime of created auto Pools, and how multiple Jobs on a schedule\nare assigned to Pools."
        },
        "keepAlive": {
          "type": "boolean",
          "description": "If false, the Batch service deletes the Pool once its lifetime (as determined\nby the poolLifetimeOption setting) expires; that is, when the Job or Job\nSchedule completes. If true, the Batch service does not delete the Pool\nautomatically. It is up to the user to delete auto Pools created with this\noption."
        },
        "pool": {
          "$ref": "#/definitions/PoolSpecificationUpdate",
          "description": "Specification for creating a new Pool."
        }
      },
      "description": "Specifies characteristics for a temporary 'auto pool'. The Batch service will\ncreate this auto Pool when the Job is submitted."
    },
    "AutoScaleRun": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the autoscale formula was last evaluated.",
          "readOnly": true
        },
        "results": {
          "type": "string",
          "description": "Each variable value is returned in the form $variable=value, and variables are\nseparated by semicolons."
        },
        "error": {
          "$ref": "#/definitions/AutoScaleRunError",
          "description": "An error that occurred when executing or evaluating a Pool autoscale formula."
        }
      },
      "description": "The results and errors from an execution of a Pool autoscale formula.",
      "required": [
        "timestamp"
      ]
    },
    "AutoScaleRunError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the autoscale error. Codes are invariant and are intended to\nbe consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the autoscale error, intended to be suitable for display\nin a user interface."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "A list of additional error details related to the autoscale error."
        }
      },
      "description": "An error that occurred when executing or evaluating a Pool autoscale formula."
    },
    "AutoUserScope": {
      "type": "string",
      "enum": [
        "task",
        "pool"
      ],
      "x-ms-enum": {
        "name": "AutoUserScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Task",
            "value": "task",
            "description": "Specifies that the service should create a new user for the Task."
          },
          {
            "name": "Pool",
            "value": "pool",
            "description": "Specifies that the Task runs as the common auto user Account which is created on every Compute Node in a Pool."
          }
        ]
      }
    },
    "AutoUserSpecification": {
      "type": "object",
      "properties": {
        "scope": {
          "$ref": "#/definitions/AutoUserScope",
          "description": "The default value is pool. If the pool is running Windows a value of Task\nshould be specified if stricter isolation between tasks is required. For\nexample, if the task mutates the registry in a way which could impact other\ntasks, or if certificates have been specified on the pool which should not be\naccessible by normal tasks but should be accessible by StartTasks."
        },
        "elevationLevel": {
          "$ref": "#/definitions/ElevationLevel",
          "description": "The default value is nonAdmin."
        }
      },
      "description": "Specifies the parameters for the auto user that runs a Task on the Batch\nservice."
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "AzureBlobFileSystemConfiguration": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The Azure Storage Account name."
        },
        "containerName": {
          "type": "string",
          "description": "The Azure Blob Storage Container name."
        },
        "accountKey": {
          "type": "string",
          "description": "This property is mutually exclusive with both sasKey and identity; exactly one\nmust be specified."
        },
        "sasKey": {
          "type": "string",
          "description": "This property is mutually exclusive with both accountKey and identity; exactly\none must be specified."
        },
        "blobfuseOptions": {
          "type": "string",
          "description": "These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "All file systems are mounted relative to the Batch mounts directory, accessible\nvia the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "identityReference": {
          "$ref": "#/definitions/ComputeNodeIdentityReference",
          "description": "This property is mutually exclusive with both accountKey and sasKey; exactly\none must be specified."
        }
      },
      "description": "Information used to connect to an Azure Storage Container using Blobfuse.",
      "required": [
        "accountName",
        "containerName",
        "relativeMountPath"
      ]
    },
    "AzureFileShareConfiguration": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The Azure Storage account name."
        },
        "azureFileUrl": {
          "type": "string",
          "description": "This is of the form 'https://{account}.file.core.windows.net/'."
        },
        "accountKey": {
          "type": "string",
          "description": "The Azure Storage account key."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "All file systems are mounted relative to the Batch mounts directory, accessible\nvia the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "These are 'net use' options in Windows and 'mount' options in Linux."
        }
      },
      "description": "Information used to connect to an Azure Fileshare.",
      "required": [
        "accountName",
        "azureFileUrl",
        "accountKey",
        "relativeMountPath"
      ]
    },
    "BatchClientResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "Client related response header values"
    },
    "BatchError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be\nconsumed programmatically."
        },
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "An error message received in an Azure Batch error response."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchErrorDetail"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "BatchErrorDetail[]",
          "description": "A collection of key-value pairs containing additional details about the error."
        }
      },
      "description": "An error response received from the Azure Batch service.",
      "required": [
        "code"
      ]
    },
    "BatchErrorDetail": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "An identifier specifying the meaning of the Value property."
        },
        "value": {
          "type": "string",
          "description": "The additional information included with the error response."
        }
      },
      "description": "An item of additional information included in an Azure Batch error response."
    },
    "BatchEtagResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "Etag related response header values"
    },
    "BatchJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID is case-preserving and case-insensitive (that is, you may not have two\nIDs within an Account that differ only by case)."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the Job.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is\nfalse.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "This is an opaque string. You can use it to detect whether the Job has changed\nbetween requests. In particular, you can be pass the ETag when updating a Job\nto specify that your changes should take effect only if nobody else has\nmodified the Job in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "This is the last time at which the Job level data, such as the Job state or\npriority, changed. It does not factor in task-level changes such as adding new\nTasks or Tasks changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Job.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/JobState",
          "description": "The state of the Job.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job entered its current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/JobState",
          "description": "This property is not set if the Job is in its initial Active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is not set if the Job is in its initial Active state.",
          "readOnly": true
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority values can range from -1000 to 1000, with -1000 being the lowest\npriority and 1000 being the highest priority. The default value is 0."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "If the value is set to True, other high priority jobs submitted to the system\nwill take precedence and will be able requeue tasks from this job. You can\nupdate a job's allowTaskPreemption after it has been created using the update\njob API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The value of maxParallelTasks must be -1 or greater than 0 if specified. If not\nspecified, the default value is -1, which means there's no limit to the number\nof tasks that can be run at once. You can update a job's maxParallelTasks after\nit has been created using the update job API.",
          "default": -1
        },
        "constraints": {
          "$ref": "#/definitions/JobConstraints",
          "description": "The execution constraints for a Job."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/JobManagerTask",
          "description": "The Job Manager Task is automatically started when the Job is created. The\nBatch service tries to schedule the Job Manager Task before any other Tasks in\nthe Job. When shrinking a Pool, the Batch service tries to preserve Nodes where\nJob Manager Tasks are running for as long as possible (that is, Compute Nodes\nrunning 'normal' Tasks are removed before Compute Nodes running Job Manager\nTasks). When a Job Manager Task fails and needs to be restarted, the system\ntries to schedule it at the highest priority. If there are no idle Compute\nNodes available, the system may terminate one of the running Tasks in the Pool\nand return it to the queue in order to make room for the Job Manager Task to\nrestart. Note that a Job Manager Task in one Job does not have priority over\nTasks in other Jobs. Across Jobs, only Job level priorities are observed. For\nexample, if a Job Manager in a priority 0 Job needs to be restarted, it will\nnot displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery\noperation is triggered on a Node. Examples of recovery operations include (but\nare not limited to) when an unhealthy Node is rebooted or a Compute Node\ndisappeared due to host failure. Retries due to recovery operations are\nindependent of and are not counted against the maxTaskRetryCount. Even if the\nmaxTaskRetryCount is 0, an internal retry due to a recovery operation may\noccur. Because of this, all Tasks should be idempotent. This means Tasks need\nto tolerate being interrupted and restarted without causing any corruption or\nduplicate data. The best practice for long running Tasks is to use some form of\ncheckpointing.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/JobPreparationTask",
          "description": "The Job Preparation Task is a special Task run on each Compute Node before any\nother Task of the Job.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/JobReleaseTask",
          "description": "The Job Release Task is a special Task run at the end of the Job on each\nCompute Node that has run any other Task of the Job.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "Individual Tasks can override an environment setting specified here by\nspecifying the same setting name with a different value.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "poolInfo": {
          "$ref": "#/definitions/PoolInformation",
          "description": "Specifies how a Job should be assigned to a Pool."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllTasksComplete",
          "description": "The default is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnTaskFailure",
          "description": "A Task is considered to have failed if has a failureInfo. A failureInfo is set\nif the Task completes with a non-zero exit code after exhausting its retry\ncount, or if there was an error starting the Task, for example due to a\nresource file download error. The default is noaction.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "networkConfiguration": {
          "$ref": "#/definitions/JobNetworkConfiguration",
          "description": "The network configuration for the Job.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        },
        "executionInfo": {
          "$ref": "#/definitions/JobExecutionInformation",
          "description": "Contains information about the execution of a Job in the Azure Batch service.",
          "readOnly": true
        },
        "stats": {
          "$ref": "#/definitions/JobStatistics",
          "description": "This property is populated only if the CloudJob was retrieved with an expand\nclause including the 'stats' attribute; otherwise it is null. The statistics\nmay not be immediately available. The Batch service performs periodic roll-up\nof statistics. The typical delay is about 30 minutes.",
          "readOnly": true
        }
      },
      "description": "An Azure Batch Job."
    },
    "BatchJobDisableParameters": {
      "type": "object",
      "properties": {
        "disableTasks": {
          "$ref": "#/definitions/DisableJobOption",
          "description": "What to do with active Tasks associated with the Job."
        }
      },
      "description": "Options when disabling a Job.",
      "required": [
        "disableTasks"
      ]
    },
    "BatchJobListPreparationAndReleaseTaskStatusResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobPreparationAndReleaseTaskExecutionInformation"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "JobPreparationAndReleaseTaskExecutionInformation[]",
          "description": "A list of Job Preparation and Job Release Task execution information."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the status of the Job Preparation and Job Release Tasks\nfor a Job."
    },
    "BatchJobListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchJob"
          },
          "x-typespec-name": "BatchJob[]",
          "description": "The list of Jobs."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Jobs in an Account."
    },
    "BatchJobSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A string that uniquely identifies the schedule within the Account.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the schedule.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job Schedule.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "This is an opaque string. You can use it to detect whether the Job Schedule has\nchanged between requests. In particular, you can be pass the ETag with an\nUpdate Job Schedule request to specify that your changes should take effect\nonly if nobody else has modified the schedule in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "This is the last time at which the schedule level data, such as the Job\nspecification or recurrence information, changed. It does not factor in\njob-level changes such as new Jobs being created or Jobs changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Job Schedule.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/JobScheduleState",
          "description": "The state of the Job Schedule.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Job Schedule entered the current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/JobScheduleState",
          "description": "This property is not present if the Job Schedule is in its initial active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is not present if the Job Schedule is in its initial active state.",
          "readOnly": true
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "All times are fixed respective to UTC and are not impacted by daylight saving\ntime."
        },
        "jobSpecification": {
          "$ref": "#/definitions/JobSpecification",
          "description": "Specifies details of the Jobs to be created on a schedule."
        },
        "executionInfo": {
          "$ref": "#/definitions/JobScheduleExecutionInformation",
          "description": "Contains information about Jobs that have been and will be run under a Job\nSchedule.",
          "readOnly": true
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        },
        "stats": {
          "$ref": "#/definitions/JobScheduleStatistics",
          "description": "Resource usage statistics for a Job Schedule.",
          "readOnly": true
        }
      },
      "description": "A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a\nspecification used to create each Job."
    },
    "BatchJobScheduleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchJobSchedule"
          },
          "x-typespec-name": "BatchJobSchedule[]",
          "description": "The list of Job Schedules."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Job Schedules in an Account."
    },
    "BatchJobScheduleUpdate": {
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "All times are fixed respective to UTC and are not impacted by daylight saving\ntime."
        },
        "jobSpecification": {
          "$ref": "#/definitions/JobSpecificationUpdate",
          "description": "Specifies details of the Jobs to be created on a schedule."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        }
      },
      "description": "A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a\nspecification used to create each Job."
    },
    "BatchJobTerminateParameters": {
      "type": "object",
      "properties": {
        "terminateReason": {
          "type": "string",
          "description": "The text you want to appear as the Job's TerminateReason. The default is\n'UserTerminate'."
        }
      },
      "description": "Options when terminating a Job."
    },
    "BatchJobUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID is case-preserving and case-insensitive (that is, you may not have two\nIDs within an Account that differ only by case)."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority values can range from -1000 to 1000, with -1000 being the lowest\npriority and 1000 being the highest priority. The default value is 0."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "If the value is set to True, other high priority jobs submitted to the system\nwill take precedence and will be able requeue tasks from this job. You can\nupdate a job's allowTaskPreemption after it has been created using the update\njob API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The value of maxParallelTasks must be -1 or greater than 0 if specified. If not\nspecified, the default value is -1, which means there's no limit to the number\nof tasks that can be run at once. You can update a job's maxParallelTasks after\nit has been created using the update job API.",
          "default": -1
        },
        "constraints": {
          "$ref": "#/definitions/JobConstraints",
          "description": "The execution constraints for a Job."
        },
        "poolInfo": {
          "$ref": "#/definitions/PoolInformationUpdate",
          "description": "Specifies how a Job should be assigned to a Pool."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllTasksComplete",
          "description": "The default is noaction."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        }
      },
      "description": "An Azure Batch Job."
    },
    "BatchPool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores, and cannot contain more than 64 characters. The ID is\ncase-preserving and case-insensitive (that is, you may not have two IDs within\nan Account that differ only by case).",
          "x-ms-mutability": [
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The display name need not be unique and can contain any Unicode characters up\nto a maximum length of 1024.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "url": {
          "type": "string",
          "description": "The URL of the Pool.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "This is an opaque string. You can use it to detect whether the Pool has changed\nbetween requests. In particular, you can be pass the ETag when updating a Pool\nto specify that your changes should take effect only if nobody else has\nmodified the Pool in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "This is the last time at which the Pool level data, such as the\ntargetDedicatedNodes or enableAutoscale settings, changed. It does not factor\nin node-level changes such as a Compute Node changing state.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Pool.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/PoolState",
          "description": "The current state of the Pool.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Pool entered its current state.",
          "readOnly": true
        },
        "allocationState": {
          "$ref": "#/definitions/AllocationState",
          "description": "Whether the Pool is resizing.",
          "readOnly": true
        },
        "allocationStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Pool entered its current allocation state.",
          "readOnly": true
        },
        "vmSize": {
          "type": "string",
          "description": "For information about available sizes of virtual machines in Pools, see Choose\na VM size for Compute Nodes in an Azure Batch Pool\n(https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).",
          "x-ms-mutability": [
            "create"
          ]
        },
        "cloudServiceConfiguration": {
          "$ref": "#/definitions/CloudServiceConfiguration",
          "description": "This property and virtualMachineConfiguration are mutually exclusive and one of\nthe properties must be specified. This property cannot be specified if the\nBatch Account was created with its poolAllocationMode property set to\n'UserSubscription'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "description": "This property and cloudServiceConfiguration are mutually exclusive and one of\nthe properties must be specified.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "This is the timeout for the most recent resize operation. (The initial sizing\nwhen the Pool is created counts as a resize.) The default value is 15 minutes.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "resizeErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResizeError"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResizeError[]",
          "description": "This property is set only if one or more errors occurred during the last Pool\nresize, and only when the Pool allocationState is Steady.",
          "readOnly": true
        },
        "currentDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of dedicated Compute Nodes currently in the Pool.",
          "readOnly": true
        },
        "currentLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "Spot/Low-priority Compute Nodes which have been preempted are included in this\ncount.",
          "readOnly": true
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must\nbe specified. If true, the autoScaleFormula property is required and the Pool\nautomatically resizes according to the formula. The default value is false.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "This property is set only if the Pool automatically scales, i.e.\nenableAutoScale is true.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "This property is set only if the Pool automatically scales, i.e.\nenableAutoScale is true.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "autoScaleRun": {
          "$ref": "#/definitions/AutoScaleRun",
          "description": "This property is set only if the Pool automatically scales, i.e.\nenableAutoScale is true.",
          "readOnly": true
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "This imposes restrictions on which Compute Nodes can be assigned to the Pool.\nSpecifying this value can reduce the chance of the requested number of Compute\nNodes to be allocated in the Pool.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration for a Pool.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "startTask": {
          "$ref": "#/definitions/StartTask",
          "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "CertificateReference[]",
          "description": "For Windows Nodes, the Batch service installs the Certificates to the specified\nCertificate store and location. For Linux Compute Nodes, the Certificates are\nstored in a directory inside the Task working directory and an environment\nvariable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this\nlocation. For Certificates with visibility of 'remoteUser', a 'certs' directory\nis created in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "Changes to Package references affect all new Nodes joining the Pool, but do not\naffect Compute Nodes that are already in the Pool until they are rebooted or\nreimaged. There is a maximum of 10 Package references on any given Pool."
        },
        "applicationLicenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The list of application licenses must be a subset of available Batch service\napplication licenses. If a license is requested which is not supported, Pool\ncreation will fail.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The default value is 1. The maximum value is the smaller of 4 times the number\nof cores of the vmSize of the pool or 256.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/TaskSchedulingPolicy",
          "description": "If not specified, the default is spread.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "userAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "UserAccount[]",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "A list of name-value pairs associated with the Pool as metadata."
        },
        "stats": {
          "$ref": "#/definitions/PoolStatistics",
          "description": "This property is populated only if the CloudPool was retrieved with an expand\nclause including the 'stats' attribute; otherwise it is null. The statistics\nmay not be immediately available. The Batch service performs periodic roll-up\nof statistics. The typical delay is about 30 minutes.",
          "readOnly": true
        },
        "mountConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MountConfiguration[]",
          "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/BatchPoolIdentity",
          "description": "The list of user identities associated with the Batch pool. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "readOnly": true
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/NodeCommunicationMode",
          "description": "If omitted, the default value is Default."
        },
        "currentNodeCommunicationMode": {
          "$ref": "#/definitions/NodeCommunicationMode",
          "description": "Determines how a pool communicates with the Batch service.",
          "readOnly": true
        }
      },
      "description": "A Pool in the Azure Batch service."
    },
    "BatchPoolEnableAutoScaleParameters": {
      "type": "object",
      "properties": {
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula is checked for validity before it is applied to the Pool. If the\nformula is not valid, the Batch service rejects the request with detailed error\ninformation. For more information about specifying this formula, see\nAutomatically scale Compute Nodes in an Azure Batch Pool\n(https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The default value is 15 minutes. The minimum and maximum value are 5 minutes\nand 168 hours respectively. If you specify a value less than 5 minutes or\ngreater than 168 hours, the Batch service rejects the request with an invalid\nproperty value error; if you are calling the REST API directly, the HTTP status\ncode is 400 (Bad Request). If you specify a new interval, then the existing\nautoscale evaluation schedule will be stopped and a new autoscale evaluation\nschedule will be started, with its starting time being the time when this\nrequest was issued."
        }
      },
      "description": "Options for enabling automatic scaling on a Pool."
    },
    "BatchPoolEvaluateAutoScaleParameters": {
      "type": "object",
      "properties": {
        "autoScaleFormula": {
          "type": "string",
          "description": "The formula is validated and its results calculated, but it is not applied to\nthe Pool. To apply the formula to the Pool, 'Enable automatic scaling on a\nPool'. For more information about specifying this formula, see Automatically\nscale Compute Nodes in an Azure Batch Pool\n(https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
        }
      },
      "description": "Options for evaluating an automatic scaling formula on a Pool.",
      "required": [
        "autoScaleFormula"
      ]
    },
    "BatchPoolIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/PoolIdentityType",
          "description": "The list of user identities associated with the Batch pool. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        },
        "userAssignedIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAssignedIdentity"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "UserAssignedIdentity[]",
          "description": "The user identity dictionary key references will be ARM resource ids in the\nform:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "The identity of the Batch pool, if configured.",
      "required": [
        "type"
      ]
    },
    "BatchPoolListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchPool"
          },
          "x-typespec-name": "BatchPool[]",
          "description": "The list of Pools."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Pools in an Account."
    },
    "BatchPoolResizeParameters": {
      "type": "object",
      "properties": {
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of dedicated Compute Nodes in the Pool."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of Spot/Low-priority Compute Nodes in the Pool."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The default value is 15 minutes. The minimum value is 5 minutes. If you specify\na value less than 5 minutes, the Batch service returns an error; if you are\ncalling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "nodeDeallocationOption": {
          "$ref": "#/definitions/ComputeNodeDeallocationOption",
          "description": "The default value is requeue."
        }
      },
      "description": "Options for changing the size of a Pool."
    },
    "BatchPoolUpdate": {
      "type": "object",
      "properties": {
        "startTask": {
          "$ref": "#/definitions/StartTaskUpdate",
          "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "CertificateReference[]",
          "description": "For Windows Nodes, the Batch service installs the Certificates to the specified\nCertificate store and location. For Linux Compute Nodes, the Certificates are\nstored in a directory inside the Task working directory and an environment\nvariable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this\nlocation. For Certificates with visibility of 'remoteUser', a 'certs' directory\nis created in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "Changes to Package references affect all new Nodes joining the Pool, but do not\naffect Compute Nodes that are already in the Pool until they are rebooted or\nreimaged. There is a maximum of 10 Package references on any given Pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "A list of name-value pairs associated with the Pool as metadata."
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/NodeCommunicationMode",
          "description": "If omitted, the default value is Default."
        }
      },
      "description": "A Pool in the Azure Batch service."
    },
    "BatchTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores, and cannot contain more than 64 characters."
        },
        "displayName": {
          "type": "string",
          "description": "The display name need not be unique and can contain any Unicode characters up\nto a maximum length of 1024."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Task.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "This is an opaque string. You can use it to detect whether the Task has changed\nbetween requests. In particular, you can be pass the ETag when updating a Task\nto specify that your changes should take effect only if nobody else has\nmodified the Task in the meantime.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Task.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Task.",
          "readOnly": true
        },
        "exitConditions": {
          "$ref": "#/definitions/ExitConditions",
          "description": "How the Batch service should respond when the Task completes."
        },
        "state": {
          "$ref": "#/definitions/TaskState",
          "description": "The state of the Task.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Task entered its current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/TaskState",
          "description": "This property is not set if the Task is in its initial Active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is not set if the Task is in its initial Active state.",
          "readOnly": true
        },
        "commandLine": {
          "type": "string",
          "description": "For multi-instance Tasks, the command line is executed as the primary Task,\nafter the primary Task and all subtasks have finished executing the\ncoordination command line. The command line does not run under a shell, and\ntherefore cannot take advantage of shell features such as environment variable\nexpansion. If you want to take advantage of such features, you should invoke\nthe shell in the command line, for example using \"cmd /c MyCommand\" in\nWindows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to\nfile paths, it should use a relative path (relative to the Task working\ndirectory), or use the Batch provided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "description": "If the Pool that will run this Task has containerConfiguration set, this must\nbe set as well. If the Pool that will run this Task doesn't have\ncontainerConfiguration set, this must not be set. When this is specified, all\ndirectories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure\nBatch directories on the node) are mapped into the container, all Task\nenvironment variables are mapped into the container, and the Task command line\nis executed in the container. Files produced in the container outside of\nAZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that\nBatch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "For multi-instance Tasks, the resource files will only be downloaded to the\nCompute Node on which the primary Task is executed. There is a maximum size for\nthe list of resource files.  When the max size is exceeded, the request will\nfail and the response error code will be RequestEntityTooLarge. If this occurs,\nthe collection of ResourceFiles must be reduced in size. This can be achieved\nusing .zip files, Application Packages, or Docker Containers."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "OutputFile[]",
          "description": "For multi-instance Tasks, the files will only be uploaded from the Compute Node\non which the primary Task is executed."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Task."
        },
        "affinityInfo": {
          "$ref": "#/definitions/AffinityInformation",
          "description": "A locality hint that can be used by the Batch service to select a Compute Node\non which to start a Task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "description": "Execution constraints to apply to a Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The default is 1. A Task can only be scheduled to run on a compute node if the\nnode has enough free scheduling slots available. For multi-instance Tasks, this\nmust be 1."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "executionInfo": {
          "$ref": "#/definitions/TaskExecutionInformation",
          "description": "Information about the execution of a Task.",
          "readOnly": true
        },
        "nodeInfo": {
          "$ref": "#/definitions/ComputeNodeInformation",
          "description": "Information about the Compute Node on which a Task ran.",
          "readOnly": true
        },
        "multiInstanceSettings": {
          "$ref": "#/definitions/MultiInstanceSettings",
          "description": "Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI case,\nif any of the subtasks fail (for example due to exiting with a non-zero exit\ncode) the entire multi-instance Task fails. The multi-instance Task is then\nterminated and retried, up to its retry limit."
        },
        "stats": {
          "$ref": "#/definitions/TaskStatistics",
          "description": "Resource usage statistics for a Task.",
          "readOnly": true
        },
        "dependsOn": {
          "$ref": "#/definitions/TaskDependencies",
          "description": "This Task will not be scheduled until all Tasks that it depends on have\ncompleted successfully. If any of those Tasks fail and exhaust their retry\ncounts, this Task will never be scheduled."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "Application packages are downloaded and deployed to a shared directory, not the\nTask working directory. Therefore, if a referenced package is already on the\nNode, and is up to date, then it is not re-downloaded; the existing copy on the\nCompute Node is used. If a referenced Package cannot be installed, for example\nbecause the package has been deleted or because download failed, the Task\nfails."
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "If this property is set, the Batch service provides the Task with an\nauthentication token which can be used to authenticate Batch service operations\nwithout requiring an Account access key. The token is provided via the\nAZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the\nTask can carry out using the token depend on the settings. For example, a Task\ncan request Job permissions in order to add other Tasks to the Job, or check\nthe status of the Job or of other Tasks under the Job."
        }
      },
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing."
    },
    "BatchTaskCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchTask"
          },
          "x-typespec-name": "BatchTask[]",
          "description": "The total serialized size of this collection must be less than 1MB. If it is\ngreater than 1MB (for example if each Task has 100's of resource files or\nenvironment variables), the request will fail with code 'RequestBodyTooLarge'\nand should be retried again with fewer Tasks."
        }
      },
      "description": "A collection of Azure Batch Tasks to add.",
      "required": [
        "value"
      ]
    },
    "BatchTaskListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchTask"
          },
          "x-typespec-name": "BatchTask[]",
          "description": "The list of Tasks."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Tasks in a Job."
    },
    "BatchTaskListSubtasksResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubtaskInformation"
          },
          "x-typespec-name": "SubtaskInformation[]",
          "description": "The list of subtasks."
        }
      },
      "description": "The result of listing the subtasks of a Task."
    },
    "CachingType": {
      "type": "string",
      "enum": [
        "none",
        "readonly",
        "readwrite"
      ],
      "x-ms-enum": {
        "name": "CachingType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "The caching mode for the disk is not enabled."
          },
          {
            "name": "ReadOnly",
            "value": "readonly",
            "description": "The caching mode for the disk is read only."
          },
          {
            "name": "ReadWrite",
            "value": "readwrite",
            "description": "The caching mode for the disk is read and write."
          }
        ]
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The X.509 thumbprint of the Certificate. This is a sequence of up to 40 hex\ndigits."
        },
        "thumbprintAlgorithm": {
          "type": "string",
          "description": "The algorithm used to derive the thumbprint."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Certificate.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/CertificateState",
          "description": "The state of the Certificate.",
          "readOnly": true
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Certificate entered its current state.",
          "readOnly": true
        },
        "previousState": {
          "$ref": "#/definitions/CertificateState",
          "description": "This property is not set if the Certificate is in its initial active state.",
          "readOnly": true
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is not set if the Certificate is in its initial Active state.",
          "readOnly": true
        },
        "publicData": {
          "type": "string",
          "description": "The public part of the Certificate as a base-64 encoded .cer file.",
          "readOnly": true
        },
        "deleteCertificateError": {
          "$ref": "#/definitions/DeleteCertificateError",
          "description": "This property is set only if the Certificate is in the DeleteFailed state.",
          "readOnly": true
        },
        "data": {
          "type": "string",
          "description": "The base64-encoded contents of the Certificate. The maximum size is 10KB."
        },
        "certificateFormat": {
          "$ref": "#/definitions/CertificateFormat",
          "description": "The format of the Certificate data."
        },
        "password": {
          "type": "string",
          "description": "This must be omitted if the Certificate format is cer."
        }
      },
      "description": "A Certificate that can be installed on Compute Nodes and can be used to\nauthenticate operations on the machine."
    },
    "CertificateFormat": {
      "type": "string",
      "enum": [
        "pfx",
        "cer"
      ],
      "x-ms-enum": {
        "name": "CertificateFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Pfx",
            "value": "pfx",
            "description": "The Certificate is a PFX (PKCS#12) formatted Certificate or Certificate chain."
          },
          {
            "name": "Cer",
            "value": "cer",
            "description": "The Certificate is a base64-encoded X.509 Certificate."
          }
        ]
      }
    },
    "CertificateListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Certificate[]",
          "description": "The list of Certificates."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Certificates in the Account."
    },
    "CertificateReference": {
      "type": "object",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of the Certificate."
        },
        "thumbprintAlgorithm": {
          "type": "string",
          "description": "The algorithm with which the thumbprint is associated. This must be sha1."
        },
        "storeLocation": {
          "$ref": "#/definitions/CertificateStoreLocation",
          "description": "The default value is currentuser. This property is applicable only for Pools\nconfigured with Windows Compute Nodes (that is, created with\ncloudServiceConfiguration, or with virtualMachineConfiguration using a Windows\nImage reference). For Linux Compute Nodes, the Certificates are stored in a\ndirectory inside the Task working directory and an environment variable\nAZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location.\nFor Certificates with visibility of 'remoteUser', a 'certs' directory is\ncreated in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "storeName": {
          "type": "string",
          "description": "This property is applicable only for Pools configured with Windows Compute\nNodes (that is, created with cloudServiceConfiguration, or with\nvirtualMachineConfiguration using a Windows Image reference). Common store\nnames include: My, Root, CA, Trust, Disallowed, TrustedPeople,\nTrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be\nused. The default value is My."
        },
        "visibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateVisibility"
          },
          "x-typespec-name": "CertificateVisibility[]",
          "description": "You can specify more than one visibility in this collection. The default is all\nAccounts."
        }
      },
      "description": "A reference to a Certificate to be installed on Compute Nodes in a Pool.",
      "required": [
        "thumbprint",
        "thumbprintAlgorithm"
      ]
    },
    "CertificateState": {
      "type": "string",
      "enum": [
        "active",
        "deleting",
        "deletefailed"
      ],
      "x-ms-enum": {
        "name": "CertificateState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Certificate is available for use in Pools."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "The user has requested that the Certificate be deleted, but the delete operation has not yet completed. You may not reference the Certificate when creating or updating Pools."
          },
          {
            "name": "DeleteFailed",
            "value": "deletefailed",
            "description": "The user requested that the Certificate be deleted, but there are Pools that still have references to the Certificate, or it is still installed on one or more Nodes. (The latter can occur if the Certificate has been removed from the Pool, but the Compute Node has not yet restarted. Compute Nodes refresh their Certificates only when they restart.) You may use the cancel Certificate delete operation to cancel the delete, or the delete Certificate operation to retry the delete."
          }
        ]
      }
    },
    "CertificateStoreLocation": {
      "type": "string",
      "enum": [
        "currentuser",
        "localmachine"
      ],
      "x-ms-enum": {
        "name": "CertificateStoreLocation",
        "modelAsString": true,
        "values": [
          {
            "name": "CurrentUser",
            "value": "currentuser",
            "description": "Certificates should be installed to the CurrentUser Certificate store."
          },
          {
            "name": "LocalMachine",
            "value": "localmachine",
            "description": "Certificates should be installed to the LocalMachine Certificate store."
          }
        ]
      }
    },
    "CertificateVisibility": {
      "type": "string",
      "enum": [
        "starttask",
        "task",
        "remoteuser"
      ],
      "x-ms-enum": {
        "name": "CertificateVisibility",
        "modelAsString": true,
        "values": [
          {
            "name": "StartTask",
            "value": "starttask",
            "description": "The Certificate should be visible to the user account under which the StartTask is run. Note that if AutoUser Scope is Pool for both the StartTask and a Task, this certificate will be visible to the Task as well."
          },
          {
            "name": "Task",
            "value": "task",
            "description": "The Certificate should be visible to the user accounts under which Job Tasks are run."
          },
          {
            "name": "RemoteUser",
            "value": "remoteuser",
            "description": "The Certificate should be visible to the user accounts under which users remotely access the Compute Node."
          }
        ]
      }
    },
    "CifsMountConfiguration": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user to use for authentication against the CIFS file system."
        },
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "All file systems are mounted relative to the Batch mounts directory, accessible\nvia the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "password": {
          "type": "string",
          "description": "The password to use for authentication against the CIFS file system."
        }
      },
      "description": "Information used to connect to a CIFS file system.",
      "required": [
        "username",
        "source",
        "relativeMountPath",
        "password"
      ]
    },
    "CloudServiceConfiguration": {
      "type": "object",
      "properties": {
        "osFamily": {
          "type": "string",
          "description": "Possible values are:\n2 - OS Family 2, equivalent to Windows Server 2008 R2\nSP1.\n3 - OS Family 3, equivalent to Windows Server 2012.\n4 - OS Family 4,\nequivalent to Windows Server 2012 R2.\n5 - OS Family 5, equivalent to Windows\nServer 2016.\n6 - OS Family 6, equivalent to Windows Server 2019. For more\ninformation, see Azure Guest OS Releases\n(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        },
        "osVersion": {
          "type": "string",
          "description": "The default value is * which specifies the latest operating system version for\nthe specified OS family."
        }
      },
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Cloud Services\nplatform.",
      "required": [
        "osFamily"
      ]
    },
    "CloudServiceConfigurationUpdate": {
      "type": "object",
      "properties": {
        "osFamily": {
          "type": "string",
          "description": "Possible values are:\n2 - OS Family 2, equivalent to Windows Server 2008 R2\nSP1.\n3 - OS Family 3, equivalent to Windows Server 2012.\n4 - OS Family 4,\nequivalent to Windows Server 2012 R2.\n5 - OS Family 5, equivalent to Windows\nServer 2016.\n6 - OS Family 6, equivalent to Windows Server 2019. For more\ninformation, see Azure Guest OS Releases\n(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        },
        "osVersion": {
          "type": "string",
          "description": "The default value is * which specifies the latest operating system version for\nthe specified OS family."
        }
      },
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Cloud Services\nplatform."
    },
    "ComputeNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Every Compute Node that is added to a Pool is assigned a unique ID. Whenever a\nCompute Node is removed from a Pool, all of its local files are deleted, and\nthe ID is reclaimed and could be reused for new Compute Nodes."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Compute Node."
        },
        "state": {
          "$ref": "#/definitions/ComputeNodeState",
          "description": "The Spot/Low-priority Compute Node has been preempted. Tasks which were running\non the Compute Node when it was preempted will be rescheduled when another\nCompute Node becomes available."
        },
        "schedulingState": {
          "$ref": "#/definitions/SchedulingState",
          "description": "Whether the Compute Node is available for Task scheduling."
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the Compute Node entered its current state."
        },
        "lastBootTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property may not be present if the Compute Node state is unusable."
        },
        "allocationTime": {
          "type": "string",
          "format": "date-time",
          "description": "This is the time when the Compute Node was initially allocated and doesn't\nchange once set. It is not updated when the Compute Node is service healed or\npreempted."
        },
        "ipAddress": {
          "type": "string",
          "description": "Every Compute Node that is added to a Pool is assigned a unique IP address.\nWhenever a Compute Node is removed from a Pool, all of its local files are\ndeleted, and the IP address is reclaimed and could be reused for new Compute\nNodes."
        },
        "affinityId": {
          "type": "string",
          "description": "Note that this is just a soft affinity. If the target Compute Node is busy or\nunavailable at the time the Task is scheduled, then the Task will be scheduled\nelsewhere."
        },
        "vmSize": {
          "type": "string",
          "description": "For information about available sizes of virtual machines in Pools, see Choose\na VM size for Compute Nodes in an Azure Batch Pool\n(https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "totalTasksRun": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Job Tasks completed on the Compute Node. This includes Job\nManager Tasks and normal Tasks, but not Job Preparation, Job Release or Start\nTasks."
        },
        "runningTasksCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of currently running Job Tasks on the Compute Node. This\nincludes Job Manager Tasks and normal Tasks, but not Job Preparation, Job\nRelease or Start Tasks."
        },
        "runningTaskSlotsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of scheduling slots used by currently running Job Tasks on the\nCompute Node. This includes Job Manager Tasks and normal Tasks, but not Job\nPreparation, Job Release or Start Tasks."
        },
        "totalTasksSucceeded": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Job Tasks which completed successfully (with exitCode 0) on\nthe Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job\nPreparation, Job Release or Start Tasks."
        },
        "recentTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskInformation"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "TaskInformation[]",
          "description": "This property is present only if at least one Task has run on this Compute Node\nsince it was assigned to the Pool."
        },
        "startTask": {
          "$ref": "#/definitions/StartTask",
          "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
        },
        "startTaskInfo": {
          "$ref": "#/definitions/StartTaskInformation",
          "description": "Information about a StartTask running on a Compute Node."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "CertificateReference[]",
          "description": "For Windows Nodes, the Batch service installs the Certificates to the specified\nCertificate store and location. For Linux Compute Nodes, the Certificates are\nstored in a directory inside the Task working directory and an environment\nvariable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this\nlocation. For Certificates with visibility of 'remoteUser', a 'certs' directory\nis created in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeNodeError"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ComputeNodeError[]",
          "description": "The list of errors that are currently being encountered by the Compute Node."
        },
        "isDedicated": {
          "type": "boolean",
          "description": "Whether this Compute Node is a dedicated Compute Node. If false, the Compute\nNode is a Spot/Low-priority Compute Node."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/ComputeNodeEndpointConfiguration",
          "description": "The endpoint configuration for the Compute Node."
        },
        "nodeAgentInfo": {
          "$ref": "#/definitions/NodeAgentInformation",
          "description": "The Batch Compute Node agent is a program that runs on each Compute Node in the\nPool and provides Batch capability on the Compute Node."
        },
        "virtualMachineInfo": {
          "$ref": "#/definitions/VirtualMachineInfo",
          "description": "Info about the current state of the virtual machine."
        }
      },
      "description": "A Compute Node in the Batch service."
    },
    "ComputeNodeDeallocationOption": {
      "type": "string",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "ComputeNodeDeallocationOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Remove Compute Nodes as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Remove Compute Nodes as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Remove Compute Nodes when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Remove Compute Nodes when all Task retention periods have expired."
          }
        ]
      }
    },
    "ComputeNodeEndpointConfiguration": {
      "type": "object",
      "properties": {
        "inboundEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundEndpoint"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "InboundEndpoint[]",
          "description": "The list of inbound endpoints that are accessible on the Compute Node."
        }
      },
      "description": "The endpoint configuration for the Compute Node.",
      "required": [
        "inboundEndpoints"
      ]
    },
    "ComputeNodeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the Compute Node error. Codes are invariant and are intended\nto be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Compute Node error, intended to be suitable for\ndisplay in a user interface."
        },
        "errorDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "The list of additional error details related to the Compute Node error."
        }
      },
      "description": "An error encountered by a Compute Node."
    },
    "ComputeNodeFillType": {
      "type": "string",
      "enum": [
        "spread",
        "pack"
      ],
      "x-ms-enum": {
        "name": "ComputeNodeFillType",
        "modelAsString": true,
        "values": [
          {
            "name": "Spread",
            "value": "spread",
            "description": "Tasks should be assigned evenly across all Compute Nodes in the Pool."
          },
          {
            "name": "Pack",
            "value": "pack",
            "description": "As many Tasks as possible (taskSlotsPerNode) should be assigned to each Compute Node in the Pool before any Tasks are assigned to the next Compute Node in the Pool."
          }
        ]
      }
    },
    "ComputeNodeGetRemoteLoginSettingsResult": {
      "type": "object",
      "properties": {
        "remoteLoginIPAddress": {
          "type": "string",
          "description": "The IP address used for remote login to the Compute Node.",
          "readOnly": true
        },
        "remoteLoginPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for remote login to the Compute Node."
        }
      },
      "description": "The remote login settings for a Compute Node.",
      "required": [
        "remoteLoginIPAddress",
        "remoteLoginPort"
      ]
    },
    "ComputeNodeIdentityReference": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource id of the user assigned identity."
        }
      },
      "description": "The reference to a user assigned identity associated with the Batch pool which\na compute node will use."
    },
    "ComputeNodeInformation": {
      "type": "object",
      "properties": {
        "affinityId": {
          "type": "string",
          "description": "An identifier for the Node on which the Task ran, which can be passed when\nadding a Task to request that the Task be scheduled on this Compute Node."
        },
        "nodeUrl": {
          "type": "string",
          "description": "The URL of the Compute Node on which the Task ran. "
        },
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool on which the Task ran."
        },
        "nodeId": {
          "type": "string",
          "description": "The ID of the Compute Node on which the Task ran."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Task on the Compute Node."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Task on the Compute Node."
        }
      },
      "description": "Information about the Compute Node on which a Task ran."
    },
    "ComputeNodeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeNode"
          },
          "x-typespec-name": "ComputeNode[]",
          "description": "The list of Compute Nodes."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Compute Nodes in a Pool."
    },
    "ComputeNodeRebootOption": {
      "type": "string",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "ComputeNodeRebootOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Restart the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Restart the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Restart the Compute Node when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Restart the Compute Node when all Task retention periods have expired."
          }
        ]
      }
    },
    "ComputeNodeReimageOption": {
      "type": "string",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion",
        "retaineddata"
      ],
      "x-ms-enum": {
        "name": "ComputeNodeReimageOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Reimage the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Reimage the Compute Node as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Reimage the Compute Node when all Tasks have completed."
          },
          {
            "name": "RetainedData",
            "value": "retaineddata",
            "description": "Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Reimage the Compute Node when all Task retention periods have expired."
          }
        ]
      }
    },
    "ComputeNodeState": {
      "type": "string",
      "enum": [
        "idle",
        "rebooting",
        "reimaging",
        "running",
        "unusable",
        "creating",
        "starting",
        "waitingforstarttask",
        "starttaskfailed",
        "unknown",
        "leavingpool",
        "offline",
        "preempted"
      ],
      "x-ms-enum": {
        "name": "ComputeNodeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Idle",
            "value": "idle",
            "description": "The Compute Node is not currently running a Task."
          },
          {
            "name": "Rebooting",
            "value": "rebooting",
            "description": "The Compute Node is rebooting."
          },
          {
            "name": "Reimaging",
            "value": "reimaging",
            "description": "The Compute Node is reimaging."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Compute Node is running one or more Tasks (other than a StartTask)."
          },
          {
            "name": "Unusable",
            "value": "unusable",
            "description": "The Compute Node cannot be used for Task execution due to errors."
          },
          {
            "name": "Creating",
            "value": "creating",
            "description": "The Batch service has obtained the underlying virtual machine from Azure Compute, but it has not yet started to join the Pool."
          },
          {
            "name": "Starting",
            "value": "starting",
            "description": "The Batch service is starting on the underlying virtual machine."
          },
          {
            "name": "WaitingForStartTask",
            "value": "waitingforstarttask",
            "description": "The StartTask has started running on the Compute Node, but waitForSuccess is set and the StartTask has not yet completed."
          },
          {
            "name": "StartTaskFailed",
            "value": "starttaskfailed",
            "description": "The StartTask has failed on the Compute Node (and exhausted all retries), and waitForSuccess is set. The Compute Node is not usable for running Tasks."
          },
          {
            "name": "Unknown",
            "value": "unknown",
            "description": "The Batch service has lost contact with the Compute Node, and does not know its true state."
          },
          {
            "name": "LeavingPool",
            "value": "leavingpool",
            "description": "The Compute Node is leaving the Pool, either because the user explicitly removed it or because the Pool is resizing or autoscaling down."
          },
          {
            "name": "Offline",
            "value": "offline",
            "description": "The Compute Node is not currently running a Task, and scheduling of new Tasks to the Compute Node is disabled."
          },
          {
            "name": "Preempted",
            "value": "preempted",
            "description": "The Spot/Low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was preempted will be rescheduled when another Compute Node becomes available."
          }
        ]
      }
    },
    "ComputeNodeUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user name of the Account."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "The default value is false."
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "If omitted, the default is 1 day from the current time. For Linux Compute\nNodes, the expiryTime has a precision up to a day."
        },
        "password": {
          "type": "string",
          "description": "The password is required for Windows Compute Nodes (those created with\n'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\nusing a Windows Image reference). For Linux Compute Nodes, the password can\noptionally be specified along with the sshPublicKey property."
        },
        "sshPublicKey": {
          "type": "string",
          "description": "The public key should be compatible with OpenSSH encoding and should be base 64\nencoded. This property can be specified only for Linux Compute Nodes. If this\nis specified for a Windows Compute Node, then the Batch service rejects the\nrequest; if you are calling the REST API directly, the HTTP status code is 400\n(Bad Request)."
        }
      },
      "description": "A user Account for RDP or SSH access on a Compute Node.",
      "required": [
        "name"
      ]
    },
    "ContainerConfiguration": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContainerType",
          "description": "The container technology to be used."
        },
        "containerImageNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "This is the full Image reference, as would be specified to \"docker pull\". An\nImage will be sourced from the default Docker registry unless the Image is\nfully qualified with an alternative registry."
        },
        "containerRegistries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRegistry"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ContainerRegistry[]",
          "description": "If any Images must be downloaded from a private registry which requires\ncredentials, then those credentials must be provided here."
        }
      },
      "description": "The configuration for container-enabled Pools.",
      "required": [
        "type"
      ]
    },
    "ContainerConfigurationUpdate": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContainerType",
          "description": "The container technology to be used."
        },
        "containerImageNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "This is the full Image reference, as would be specified to \"docker pull\". An\nImage will be sourced from the default Docker registry unless the Image is\nfully qualified with an alternative registry."
        },
        "containerRegistries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRegistry"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ContainerRegistry[]",
          "description": "If any Images must be downloaded from a private registry which requires\ncredentials, then those credentials must be provided here."
        }
      },
      "description": "The configuration for container-enabled Pools."
    },
    "ContainerRegistry": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user name to log into the registry server."
        },
        "password": {
          "type": "string",
          "description": "The password to log into the registry server."
        },
        "registryServer": {
          "type": "string",
          "description": "If omitted, the default is \"docker.io\"."
        },
        "identityReference": {
          "$ref": "#/definitions/ComputeNodeIdentityReference",
          "description": "The reference to a user assigned identity associated with the Batch pool which\na compute node will use."
        }
      },
      "description": "A private container registry."
    },
    "ContainerType": {
      "type": "string",
      "enum": [
        "dockerCompatible"
      ],
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true,
        "values": [
          {
            "name": "DockerCompatible",
            "value": "dockerCompatible",
            "description": "A Docker compatible container technology will be used to launch the containers."
          }
        ]
      }
    },
    "ContainerWorkingDirectory": {
      "type": "string",
      "enum": [
        "taskWorkingDirectory",
        "containerImageDefault"
      ],
      "x-ms-enum": {
        "name": "ContainerWorkingDirectory",
        "modelAsString": true,
        "values": [
          {
            "name": "TaskWorkingDirectory",
            "value": "taskWorkingDirectory",
            "description": "Use the standard Batch service Task working directory, which will contain the Task Resource Files populated by Batch."
          },
          {
            "name": "ContainerImageDefault",
            "value": "containerImageDefault",
            "description": "Use the working directory defined in the container Image. Beware that this directory will not contain the Resource Files downloaded by Batch."
          }
        ]
      }
    },
    "DataDisk": {
      "type": "object",
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "The lun is used to uniquely identify each data disk. If attaching multiple\ndisks, each should have a distinct lun. The value must be between 0 and 63,\ninclusive."
        },
        "caching": {
          "$ref": "#/definitions/CachingType",
          "description": "The default value for caching is readwrite. For information about the caching\noptions see:\nhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The initial disk size in gigabytes."
        },
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType",
          "description": "If omitted, the default is \"standard_lrs\"."
        }
      },
      "description": "Settings which will be used by the data disks associated to Compute Nodes in\nthe Pool. When using attached data disks, you need to mount and format the\ndisks from within a VM to use them.",
      "required": [
        "lun",
        "diskSizeGB"
      ]
    },
    "DeleteCertificateError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the Certificate deletion error. Codes are invariant and are\nintended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Certificate deletion error, intended to be suitable\nfor display in a user interface."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "This list includes details such as the active Pools and Compute Nodes\nreferencing this Certificate. However, if a large number of resources reference\nthe Certificate, the list contains only about the first hundred."
        }
      },
      "description": "An error encountered by the Batch service when deleting a Certificate."
    },
    "DeleteResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "The parameters for a widget status request"
    },
    "DependencyAction": {
      "type": "string",
      "enum": [
        "satisfy",
        "block"
      ],
      "x-ms-enum": {
        "name": "DependencyAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Satisfy",
            "value": "satisfy",
            "description": "Satisfy tasks waiting on this task; once all dependencies are satisfied, the task will be scheduled to run."
          },
          {
            "name": "Block",
            "value": "block",
            "description": "Blocks tasks waiting on this task, preventing them from being scheduled."
          }
        ]
      }
    },
    "DiffDiskPlacement": {
      "type": "string",
      "enum": [
        "cachedisk"
      ],
      "x-ms-enum": {
        "name": "DiffDiskPlacement",
        "modelAsString": true,
        "values": [
          {
            "name": "CacheDisk",
            "value": "cachedisk",
            "description": "The Ephemeral OS Disk is stored on the VM cache."
          }
        ]
      }
    },
    "DiffDiskSettings": {
      "type": "object",
      "properties": {
        "placement": {
          "$ref": "#/definitions/DiffDiskPlacement",
          "description": "This property can be used by user in the request to choose the location e.g.,\ncache disk space for Ephemeral OS disk provisioning. For more information on\nEphemeral OS disk size requirements, please refer to Ephemeral OS disk size\nrequirements for Windows VMs at\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements\nand Linux VMs at\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements."
        }
      },
      "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the\ncompute node (VM)."
    },
    "DisableComputeNodeSchedulingOption": {
      "type": "string",
      "enum": [
        "requeue",
        "terminate",
        "taskcompletion"
      ],
      "x-ms-enum": {
        "name": "DisableComputeNodeSchedulingOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Task processes and requeue the Tasks. The Tasks may run again on other Compute Nodes, or when Task scheduling is re-enabled on this Compute Node. Enter offline state as soon as Tasks have been terminated."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Enter offline state as soon as Tasks have been terminated."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Enter offline state when all Tasks have completed."
          }
        ]
      }
    },
    "DisableJobOption": {
      "type": "string",
      "enum": [
        "requeue",
        "terminate",
        "wait"
      ],
      "x-ms-enum": {
        "name": "DisableJobOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Requeue",
            "value": "requeue",
            "description": "Terminate running Tasks and requeue them. The Tasks will run again when the Job is enabled."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again."
          },
          {
            "name": "Wait",
            "value": "wait",
            "description": "Allow currently running Tasks to complete."
          }
        ]
      }
    },
    "DiskEncryptionConfiguration": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskEncryptionTarget"
          },
          "x-typespec-name": "DiskEncryptionTarget[]",
          "description": "If omitted, no disks on the compute nodes in the pool will be encrypted. On\nLinux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\"\nand \"TemporaryDisk\" must be specified."
        }
      },
      "description": "The disk encryption configuration applied on compute nodes in the pool. Disk\nencryption configuration is not supported on Linux pool created with Shared\nImage Gallery Image."
    },
    "DiskEncryptionTarget": {
      "type": "string",
      "enum": [
        "osdisk",
        "temporarydisk"
      ],
      "x-ms-enum": {
        "name": "DiskEncryptionTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "OsDisk",
            "value": "osdisk",
            "description": "The OS Disk on the compute node is encrypted."
          },
          {
            "name": "TemporaryDisk",
            "value": "temporarydisk",
            "description": "The temporary disk on the compute node is encrypted. On Linux this encryption applies to other partitions (such as those on mounted data disks) when encryption occurs at boot time."
          }
        ]
      }
    },
    "DynamicVNetAssignmentScope": {
      "type": "string",
      "enum": [
        "none",
        "job"
      ],
      "x-ms-enum": {
        "name": "DynamicVNetAssignmentScope",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "No dynamic VNet assignment is enabled."
          },
          {
            "name": "Job",
            "value": "job",
            "description": "Dynamic VNet assignment is done per-job."
          }
        ]
      }
    },
    "ElevationLevel": {
      "type": "string",
      "enum": [
        "nonadmin",
        "admin"
      ],
      "x-ms-enum": {
        "name": "ElevationLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "NonAdmin",
            "value": "nonadmin",
            "description": "The user is a standard user without elevated access."
          },
          {
            "name": "Admin",
            "value": "admin",
            "description": "The user is a user with elevated access and operates with full Administrator permissions."
          }
        ]
      }
    },
    "EnvironmentSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "description": "An environment variable to be set on a Task process.",
      "required": [
        "name"
      ]
    },
    "ErrorCategory": {
      "type": "string",
      "enum": [
        "usererror",
        "servererror"
      ],
      "x-ms-enum": {
        "name": "ErrorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "UserError",
            "value": "usererror",
            "description": "The error is due to a user issue, such as misconfiguration."
          },
          {
            "name": "ServerError",
            "value": "servererror",
            "description": "The error is due to an internal server issue."
          }
        ]
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string",
          "description": "The language code of the error message"
        },
        "value": {
          "type": "string",
          "description": "The text of the message."
        }
      },
      "description": "An error message received in an Azure Batch error response."
    },
    "ExitCodeMapping": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A process exit code."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "description": "Specifies how the Batch service responds to a particular exit condition."
        }
      },
      "description": "How the Batch service should respond if a Task exits with a particular exit\ncode.",
      "required": [
        "code",
        "exitOptions"
      ]
    },
    "ExitCodeRangeMapping": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "The first exit code in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "The last exit code in the range."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "description": "Specifies how the Batch service responds to a particular exit condition."
        }
      },
      "description": "A range of exit codes and how the Batch service should respond to exit codes\nwithin that range.",
      "required": [
        "start",
        "end",
        "exitOptions"
      ]
    },
    "ExitConditions": {
      "type": "object",
      "properties": {
        "exitCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExitCodeMapping"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ExitCodeMapping[]",
          "description": "A list of individual Task exit codes and how the Batch service should respond\nto them."
        },
        "exitCodeRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExitCodeRangeMapping"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ExitCodeRangeMapping[]",
          "description": "A list of Task exit code ranges and how the Batch service should respond to\nthem."
        },
        "preProcessingError": {
          "$ref": "#/definitions/ExitOptions",
          "description": "Specifies how the Batch service responds to a particular exit condition."
        },
        "fileUploadError": {
          "$ref": "#/definitions/ExitOptions",
          "description": "If the Task exited with an exit code that was specified via exitCodes or\nexitCodeRanges, and then encountered a file upload error, then the action\nspecified by the exit code takes precedence."
        },
        "default": {
          "$ref": "#/definitions/ExitOptions",
          "description": "This value is used if the Task exits with any nonzero exit code not listed in\nthe exitCodes or exitCodeRanges collection, with a pre-processing error if the\npreProcessingError property is not present, or with a file upload error if the\nfileUploadError property is not present. If you want non-default behavior on\nexit code 0, you must list it explicitly using the exitCodes or exitCodeRanges\ncollection."
        }
      },
      "description": "Specifies how the Batch service should respond when the Task completes."
    },
    "ExitOptions": {
      "type": "object",
      "properties": {
        "jobAction": {
          "$ref": "#/definitions/JobAction",
          "description": "The default is none for exit code 0 and terminate for all other exit\nconditions. If the Job's onTaskFailed property is noaction, then specifying\nthis property returns an error and the add Task request fails with an invalid\nproperty value error; if you are calling the REST API directly, the HTTP status\ncode is 400 (Bad Request)."
        },
        "dependencyAction": {
          "$ref": "#/definitions/DependencyAction",
          "description": "Possible values are 'satisfy' (allowing dependent tasks to progress) and\n'block' (dependent tasks continue to wait). Batch does not yet support\ncancellation of dependent tasks."
        }
      },
      "description": "Specifies how the Batch service responds to a particular exit condition."
    },
    "FileProperties": {
      "type": "object",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time is not returned for files on Linux Compute Nodes."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the file was last modified."
        },
        "contentLength": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the file."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the file."
        },
        "fileMode": {
          "type": "string",
          "description": "The file mode is returned only for files on Linux Compute Nodes."
        }
      },
      "description": "The properties of a file on a Compute Node.",
      "required": [
        "lastModified",
        "contentLength"
      ]
    },
    "FileResponse": {
      "type": "object",
      "properties": {},
      "description": "Common header values for pool requests"
    },
    "HttpHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The case-insensitive name of the header to be used while uploading output files"
        },
        "value": {
          "type": "string",
          "description": "The value of the header to be used while uploading output files"
        }
      },
      "description": "An HTTP header name-value pair",
      "required": [
        "name"
      ]
    },
    "IPAddressProvisioningType": {
      "type": "string",
      "enum": [
        "batchmanaged",
        "usermanaged",
        "nopublicipaddresses"
      ],
      "x-ms-enum": {
        "name": "IPAddressProvisioningType",
        "modelAsString": true,
        "values": [
          {
            "name": "BatchManaged",
            "value": "batchmanaged",
            "description": "A public IP will be created and managed by Batch. There may be multiple public IPs depending on the size of the Pool."
          },
          {
            "name": "UserManaged",
            "value": "usermanaged",
            "description": "Public IPs are provided by the user and will be used to provision the Compute Nodes."
          },
          {
            "name": "NoPublicIPAddresses",
            "value": "nopublicipaddresses",
            "description": "No public IP Address will be created."
          }
        ]
      }
    },
    "ImageInformation": {
      "type": "object",
      "properties": {
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The ID of the Compute Node agent SKU which the Image supports.",
          "readOnly": true
        },
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to an Azure Virtual Machines Marketplace Image or a Shared Image\nGallery Image. To get the list of all Azure Marketplace Image references\nverified by Azure Batch, see the 'List Supported Images' operation."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "The type of operating system (e.g. Windows or Linux) of the Image."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "Not every capability of the Image is listed. Capabilities in this list are\nconsidered of special interest and are generally related to integration with\nother features in the Azure Batch service."
        },
        "batchSupportEndOfLife": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Azure Batch service will stop accepting create Pool requests\nfor the Image."
        },
        "verificationType": {
          "$ref": "#/definitions/VerificationType",
          "description": "Whether the Azure Batch service actively verifies that the Image is compatible\nwith the associated Compute Node agent SKU."
        }
      },
      "description": "A reference to the Azure Virtual Machines Marketplace Image and additional\ninformation about the Image.",
      "required": [
        "nodeAgentSKUId",
        "imageReference",
        "osType",
        "verificationType"
      ]
    },
    "ImageReference": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "For example, Canonical or MicrosoftWindowsServer."
        },
        "offer": {
          "type": "string",
          "description": "For example, UbuntuServer or WindowsServer."
        },
        "sku": {
          "type": "string",
          "description": "For example, 18.04-LTS or 2019-Datacenter."
        },
        "version": {
          "type": "string",
          "description": "A value of 'latest' can be specified to select the latest version of an Image.\nIf omitted, the default is 'latest'."
        },
        "virtualMachineImageId": {
          "type": "string",
          "description": "This property is mutually exclusive with other ImageReference properties. The\nShared Image Gallery Image must have replicas in the same region and must be in\nthe same subscription as the Azure Batch account. If the image version is not\nspecified in the imageId, the latest version will be used. For information\nabout the firewall settings for the Batch Compute Node agent to communicate\nwith the Batch service see\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        },
        "exactVersion": {
          "type": "string",
          "description": "The specific version of the platform image or marketplace image used to create\nthe node. This read-only field differs from 'version' only if the value\nspecified for 'version' when the pool was created was 'latest'.",
          "readOnly": true
        }
      },
      "description": "A reference to an Azure Virtual Machines Marketplace Image or a Shared Image\nGallery Image. To get the list of all Azure Marketplace Image references\nverified by Azure Batch, see the 'List Supported Images' operation."
    },
    "InboundEndpoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint."
        },
        "protocol": {
          "$ref": "#/definitions/InboundEndpointProtocol",
          "description": "The protocol of the endpoint."
        },
        "publicIPAddress": {
          "type": "string",
          "description": "The public IP address of the Compute Node."
        },
        "publicFQDN": {
          "type": "string",
          "description": "The public fully qualified domain name for the Compute Node."
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The public port number of the endpoint."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The backend port number of the endpoint."
        }
      },
      "description": "An inbound endpoint on a Compute Node.",
      "required": [
        "name",
        "protocol",
        "publicIPAddress",
        "publicFQDN",
        "frontendPort",
        "backendPort"
      ]
    },
    "InboundEndpointProtocol": {
      "type": "string",
      "enum": [
        "tcp",
        "udp"
      ],
      "x-ms-enum": {
        "name": "InboundEndpointProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "Tcp",
            "value": "tcp",
            "description": "Use TCP for the endpoint."
          },
          {
            "name": "Udp",
            "value": "udp",
            "description": "Use UDP for the endpoint."
          }
        ]
      }
    },
    "InboundNATPool": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name must be unique within a Batch Pool, can contain letters, numbers,\nunderscores, periods, and hyphens. Names must start with a letter or number,\nmust end with a letter, number, or underscore, and cannot exceed 77 characters.\n If any invalid values are provided the request fails with HTTP status code\n400."
        },
        "protocol": {
          "$ref": "#/definitions/InboundEndpointProtocol",
          "description": "The protocol of the endpoint."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "This must be unique within a Batch Pool. Acceptable values are between 1 and\n65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any\nreserved values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "Acceptable values range between 1 and 65534 except ports from 50000 to 55000\nwhich are reserved. All ranges within a Pool must be distinct and cannot\noverlap. Each range must contain at least 40 ports. If any reserved or\noverlapping values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "Acceptable values range between 1 and 65534 except ports from 50000 to 55000\nwhich are reserved by the Batch service. All ranges within a Pool must be\ndistinct and cannot overlap. Each range must contain at least 40 ports. If any\nreserved or overlapping values are provided the request fails with HTTP status\ncode 400."
        },
        "networkSecurityGroupRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroupRule"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NetworkSecurityGroupRule[]",
          "description": "The maximum number of rules that can be specified across all the endpoints on a\nBatch Pool is 25. If no network security group rules are specified, a default\nrule will be created to allow inbound access to the specified backendPort. If\nthe maximum number of network security group rules is exceeded the request\nfails with HTTP status code 400."
        }
      },
      "description": "A inbound NAT Pool that can be used to address specific ports on Compute Nodes\nin a Batch Pool externally.",
      "required": [
        "name",
        "protocol",
        "backendPort",
        "frontendPortRangeStart",
        "frontendPortRangeEnd"
      ]
    },
    "InstanceViewStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The status code."
        },
        "displayStatus": {
          "type": "string",
          "description": "The localized label for the status."
        },
        "level": {
          "$ref": "#/definitions/StatusLevelTypes",
          "description": "Level code."
        },
        "message": {
          "type": "string",
          "description": "The detailed status message."
        },
        "time": {
          "type": "string",
          "description": "The time of the status."
        }
      },
      "description": "The instance view status."
    },
    "JobAction": {
      "type": "string",
      "enum": [
        "none",
        "disable",
        "terminate"
      ],
      "x-ms-enum": {
        "name": "JobAction",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "Take no action."
          },
          {
            "name": "Disable",
            "value": "disable",
            "description": "Disable the Job. This is equivalent to calling the disable Job API, with a disableTasks value of requeue."
          },
          {
            "name": "Terminate",
            "value": "terminate",
            "description": "Terminate the Job. The terminateReason in the Job's executionInfo is set to \"TaskFailed\"."
          }
        ]
      }
    },
    "JobConstraints": {
      "type": "object",
      "properties": {
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "If the Job does not complete within the time limit, the Batch service\nterminates it and any Tasks that are still running. In this case, the\ntermination reason will be MaxWallClockTimeExpiry. If this property is not\nspecified, there is no time limit on how long the Job may run."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Note that this value specifically controls the number of retries. The Batch\nservice will try each Task once, and may then retry up to this limit. For\nexample, if the maximum retry count is 3, Batch tries a Task up to 4 times (one\ninitial try and 3 retries). If the maximum retry count is 0, the Batch service\ndoes not retry Tasks. If the maximum retry count is -1, the Batch service\nretries the Task without limit, however this is not recommended for a start\ntask or any task. The default value is 0 (no retries)"
        }
      },
      "description": "The execution constraints for a Job."
    },
    "JobExecutionInformation": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "This is the time at which the Job was created."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Job is in the completed state."
        },
        "poolId": {
          "type": "string",
          "description": "This element contains the actual Pool where the Job is assigned. When you get\nJob details from the service, they also contain a poolInfo element, which\ncontains the Pool configuration data from when the Job was added or updated.\nThat poolInfo element may also contain a poolId element. If it does, the two\nIDs are the same. If it does not, it means the Job ran on an auto Pool, and\nthis property contains the ID of that auto Pool."
        },
        "schedulingError": {
          "$ref": "#/definitions/JobSchedulingError",
          "description": "This property is not set if there was no error starting the Job."
        },
        "terminateReason": {
          "type": "string",
          "description": "This property is set only if the Job is in the completed state. If the Batch\nservice terminates the Job, it sets the reason as follows: JMComplete - the Job\nManager Task completed, and killJobOnCompletion was set to true.\nMaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint.\nTerminateJobSchedule - the Job ran as part of a schedule, and the schedule\nterminated. AllTasksComplete - the Job's onAllTasksComplete attribute is set to\nterminatejob, and all Tasks in the Job are complete. TaskFailed - the Job's\nonTaskFailure attribute is set to performExitOptionsJobAction, and a Task in\nthe Job failed with an exit condition that specified a jobAction of\nterminatejob. Any other string is a user-defined reason specified in a call to\nthe 'Terminate a Job' operation."
        }
      },
      "description": "Contains information about the execution of a Job in the Azure Batch service.",
      "required": [
        "startTime"
      ]
    },
    "JobManagerTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters."
        },
        "displayName": {
          "type": "string",
          "description": "It need not be unique and can contain any Unicode characters up to a maximum\nlength of 1024."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "description": "If the Pool that will run this Task has containerConfiguration set, this must\nbe set as well. If the Pool that will run this Task doesn't have\ncontainerConfiguration set, this must not be set. When this is specified, all\ndirectories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure\nBatch directories on the node) are mapped into the container, all Task\nenvironment variables are mapped into the container, and the Task command line\nis executed in the container. Files produced in the container outside of\nAZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that\nBatch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory.\nThere is a maximum size for the list of resource files.  When the max size is\nexceeded, the request will fail and the response error code will be\nRequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be\nreduced in size. This can be achieved using .zip files, Application Packages,\nor Docker Containers."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "OutputFile[]",
          "description": "For multi-instance Tasks, the files will only be uploaded from the Compute Node\non which the primary Task is executed."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Manager Task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "description": "Execution constraints to apply to a Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The default is 1. A Task can only be scheduled to run on a compute node if the\nnode has enough free scheduling slots available. For multi-instance Tasks, this\nproperty is not supported and must not be specified."
        },
        "killJobOnCompletion": {
          "type": "boolean",
          "description": "If true, when the Job Manager Task completes, the Batch service marks the Job\nas complete. If any Tasks are still running at this time (other than Job\nRelease), those Tasks are terminated. If false, the completion of the Job\nManager Task does not affect the Job status. In this case, you should either\nuse the onAllTasksComplete attribute to terminate the Job, or have a client or\nuser terminate the Job explicitly. An example of this is if the Job Manager\ncreates a set of Tasks but then takes no further role in their execution. The\ndefault value is true. If you are using the onAllTasksComplete and\nonTaskFailure attributes to control Job lifetime, and using the Job Manager\nTask only to create the Tasks for the Job (not to monitor progress), then it is\nimportant to set killJobOnCompletion to false."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "runExclusive": {
          "type": "boolean",
          "description": "If true, no other Tasks will run on the same Node for as long as the Job\nManager is running. If false, other Tasks can run simultaneously with the Job\nManager on a Compute Node. The Job Manager Task counts normally against the\nCompute Node's concurrent Task limit, so this is only relevant if the Compute\nNode allows multiple concurrent Tasks. The default value is true."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "Application Packages are downloaded and deployed to a shared directory, not the\nTask working directory. Therefore, if a referenced Application Package is\nalready on the Compute Node, and is up to date, then it is not re-downloaded;\nthe existing copy on the Compute Node is used. If a referenced Application\nPackage cannot be installed, for example because the package has been deleted\nor because download failed, the Task fails."
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "If this property is set, the Batch service provides the Task with an\nauthentication token which can be used to authenticate Batch service operations\nwithout requiring an Account access key. The token is provided via the\nAZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the\nTask can carry out using the token depend on the settings. For example, a Task\ncan request Job permissions in order to add other Tasks to the Job, or check\nthe status of the Job or of other Tasks under the Job."
        },
        "allowLowPriorityNode": {
          "type": "boolean",
          "description": "The default value is true."
        }
      },
      "description": "The Job Manager Task is automatically started when the Job is created. The\nBatch service tries to schedule the Job Manager Task before any other Tasks in\nthe Job. When shrinking a Pool, the Batch service tries to preserve Nodes where\nJob Manager Tasks are running for as long as possible (that is, Compute Nodes\nrunning 'normal' Tasks are removed before Compute Nodes running Job Manager\nTasks). When a Job Manager Task fails and needs to be restarted, the system\ntries to schedule it at the highest priority. If there are no idle Compute\nNodes available, the system may terminate one of the running Tasks in the Pool\nand return it to the queue in order to make room for the Job Manager Task to\nrestart. Note that a Job Manager Task in one Job does not have priority over\nTasks in other Jobs. Across Jobs, only Job level priorities are observed. For\nexample, if a Job Manager in a priority 0 Job needs to be restarted, it will\nnot displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery\noperation is triggered on a Node. Examples of recovery operations include (but\nare not limited to) when an unhealthy Node is rebooted or a Compute Node\ndisappeared due to host failure. Retries due to recovery operations are\nindependent of and are not counted against the maxTaskRetryCount. Even if the\nmaxTaskRetryCount is 0, an internal retry due to a recovery operation may\noccur. Because of this, all Tasks should be idempotent. This means Tasks need\nto tolerate being interrupted and restarted without causing any corruption or\nduplicate data. The best practice for long running Tasks is to use some form of\ncheckpointing.",
      "required": [
        "id",
        "commandLine"
      ]
    },
    "JobManagerTaskUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters."
        },
        "displayName": {
          "type": "string",
          "description": "It need not be unique and can contain any Unicode characters up to a maximum\nlength of 1024."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettingsUpdate",
          "description": "If the Pool that will run this Task has containerConfiguration set, this must\nbe set as well. If the Pool that will run this Task doesn't have\ncontainerConfiguration set, this must not be set. When this is specified, all\ndirectories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure\nBatch directories on the node) are mapped into the container, all Task\nenvironment variables are mapped into the container, and the Task command line\nis executed in the container. Files produced in the container outside of\nAZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that\nBatch file APIs will not be able to access those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory.\nThere is a maximum size for the list of resource files.  When the max size is\nexceeded, the request will fail and the response error code will be\nRequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be\nreduced in size. This can be achieved using .zip files, Application Packages,\nor Docker Containers."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "OutputFile[]",
          "description": "For multi-instance Tasks, the files will only be uploaded from the Compute Node\non which the primary Task is executed."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Manager Task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "description": "Execution constraints to apply to a Task."
        },
        "requiredSlots": {
          "type": "integer",
          "format": "int32",
          "description": "The default is 1. A Task can only be scheduled to run on a compute node if the\nnode has enough free scheduling slots available. For multi-instance Tasks, this\nproperty is not supported and must not be specified."
        },
        "killJobOnCompletion": {
          "type": "boolean",
          "description": "If true, when the Job Manager Task completes, the Batch service marks the Job\nas complete. If any Tasks are still running at this time (other than Job\nRelease), those Tasks are terminated. If false, the completion of the Job\nManager Task does not affect the Job status. In this case, you should either\nuse the onAllTasksComplete attribute to terminate the Job, or have a client or\nuser terminate the Job explicitly. An example of this is if the Job Manager\ncreates a set of Tasks but then takes no further role in their execution. The\ndefault value is true. If you are using the onAllTasksComplete and\nonTaskFailure attributes to control Job lifetime, and using the Job Manager\nTask only to create the Tasks for the Job (not to monitor progress), then it is\nimportant to set killJobOnCompletion to false."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "runExclusive": {
          "type": "boolean",
          "description": "If true, no other Tasks will run on the same Node for as long as the Job\nManager is running. If false, other Tasks can run simultaneously with the Job\nManager on a Compute Node. The Job Manager Task counts normally against the\nCompute Node's concurrent Task limit, so this is only relevant if the Compute\nNode allows multiple concurrent Tasks. The default value is true."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "Application Packages are downloaded and deployed to a shared directory, not the\nTask working directory. Therefore, if a referenced Application Package is\nalready on the Compute Node, and is up to date, then it is not re-downloaded;\nthe existing copy on the Compute Node is used. If a referenced Application\nPackage cannot be installed, for example because the package has been deleted\nor because download failed, the Task fails."
        },
        "authenticationTokenSettings": {
          "$ref": "#/definitions/AuthenticationTokenSettings",
          "description": "If this property is set, the Batch service provides the Task with an\nauthentication token which can be used to authenticate Batch service operations\nwithout requiring an Account access key. The token is provided via the\nAZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the\nTask can carry out using the token depend on the settings. For example, a Task\ncan request Job permissions in order to add other Tasks to the Job, or check\nthe status of the Job or of other Tasks under the Job."
        },
        "allowLowPriorityNode": {
          "type": "boolean",
          "description": "The default value is true."
        }
      },
      "description": "The Job Manager Task is automatically started when the Job is created. The\nBatch service tries to schedule the Job Manager Task before any other Tasks in\nthe Job. When shrinking a Pool, the Batch service tries to preserve Nodes where\nJob Manager Tasks are running for as long as possible (that is, Compute Nodes\nrunning 'normal' Tasks are removed before Compute Nodes running Job Manager\nTasks). When a Job Manager Task fails and needs to be restarted, the system\ntries to schedule it at the highest priority. If there are no idle Compute\nNodes available, the system may terminate one of the running Tasks in the Pool\nand return it to the queue in order to make room for the Job Manager Task to\nrestart. Note that a Job Manager Task in one Job does not have priority over\nTasks in other Jobs. Across Jobs, only Job level priorities are observed. For\nexample, if a Job Manager in a priority 0 Job needs to be restarted, it will\nnot displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery\noperation is triggered on a Node. Examples of recovery operations include (but\nare not limited to) when an unhealthy Node is rebooted or a Compute Node\ndisappeared due to host failure. Retries due to recovery operations are\nindependent of and are not counted against the maxTaskRetryCount. Even if the\nmaxTaskRetryCount is 0, an internal retry due to a recovery operation may\noccur. Because of this, all Tasks should be idempotent. This means Tasks need\nto tolerate being interrupted and restarted without causing any corruption or\nduplicate data. The best practice for long running Tasks is to use some form of\ncheckpointing."
    },
    "JobNetworkConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The virtual network must be in the same region and subscription as the Azure\nBatch Account. The specified subnet should have enough free IP addresses to\naccommodate the number of Compute Nodes which will run Tasks from the Job. This\ncan be up to the number of Compute Nodes in the Pool. The 'MicrosoftAzureBatch'\nservice principal must have the 'Classic Virtual Machine Contributor'\nRole-Based Access Control (RBAC) role for the specified VNet so that Azure\nBatch service can schedule Tasks on the Nodes. This can be verified by checking\nif the specified VNet has any associated Network Security Groups (NSG). If\ncommunication to the Nodes in the specified subnet is denied by an NSG, then\nthe Batch service will set the state of the Compute Nodes to unusable. This is\nof the form\n/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\nIf the specified VNet has any associated Network Security Groups (NSG), then a\nfew reserved system ports must be enabled for inbound communication from the\nAzure Batch service. For Pools created with a Virtual Machine configuration,\nenable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\nWindows. Port 443 is also required to be open for outbound connections for\ncommunications to Azure Storage. For more details see:\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
        }
      },
      "description": "The network configuration for the Job.",
      "required": [
        "subnetId"
      ]
    },
    "JobNetworkConfigurationUpdate": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The virtual network must be in the same region and subscription as the Azure\nBatch Account. The specified subnet should have enough free IP addresses to\naccommodate the number of Compute Nodes which will run Tasks from the Job. This\ncan be up to the number of Compute Nodes in the Pool. The 'MicrosoftAzureBatch'\nservice principal must have the 'Classic Virtual Machine Contributor'\nRole-Based Access Control (RBAC) role for the specified VNet so that Azure\nBatch service can schedule Tasks on the Nodes. This can be verified by checking\nif the specified VNet has any associated Network Security Groups (NSG). If\ncommunication to the Nodes in the specified subnet is denied by an NSG, then\nthe Batch service will set the state of the Compute Nodes to unusable. This is\nof the form\n/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\nIf the specified VNet has any associated Network Security Groups (NSG), then a\nfew reserved system ports must be enabled for inbound communication from the\nAzure Batch service. For Pools created with a Virtual Machine configuration,\nenable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\nWindows. Port 443 is also required to be open for outbound connections for\ncommunications to Azure Storage. For more details see:\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
        }
      },
      "description": "The network configuration for the Job."
    },
    "JobPreparationAndReleaseTaskExecutionInformation": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool containing the Compute Node to which this entry refers."
        },
        "nodeId": {
          "type": "string",
          "description": "The ID of the Compute Node to which this entry refers."
        },
        "nodeUrl": {
          "type": "string",
          "description": "The URL of the Compute Node to which this entry refers."
        },
        "jobPreparationTaskExecutionInfo": {
          "$ref": "#/definitions/JobPreparationTaskExecutionInformation",
          "description": "Contains information about the execution of a Job Preparation Task on a Compute\nNode."
        },
        "jobReleaseTaskExecutionInfo": {
          "$ref": "#/definitions/JobReleaseTaskExecutionInformation",
          "description": "This property is set only if the Job Release Task has run on the Compute Node."
        }
      },
      "description": "The status of the Job Preparation and Job Release Tasks on a Compute Node."
    },
    "JobPreparationTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters. If you do not\nspecify this property, the Batch service assigns a default value of\n'jobpreparation'. No other Task in the Job can have the same ID as the Job\nPreparation Task. If you try to submit a Task with the same id, the Batch\nservice rejects the request with error code TaskIdSameAsJobPreparationTask; if\nyou are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory. \nThere is a maximum size for the list of resource files.  When the max size is\nexceeded, the request will fail and the response error code will be\nRequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be\nreduced in size. This can be achieved using .zip files, Application Packages,\nor Docker Containers."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Preparation Task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "description": "Execution constraints to apply to a Task."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "If true and the Job Preparation Task fails on a Node, the Batch service retries\nthe Job Preparation Task up to its maximum retry count (as specified in the\nconstraints element). If the Task has still not completed successfully after\nall retries, then the Batch service will not schedule Tasks of the Job to the\nNode. The Node remains active and eligible to run Tasks of other Jobs. If\nfalse, the Batch service will not wait for the Job Preparation Task to\ncomplete. In this case, other Tasks of the Job can start executing on the\nCompute Node while the Job Preparation Task is still running; and even if the\nJob Preparation Task fails, new Tasks will continue to be scheduled on the\nCompute Node. The default value is true."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task on\nWindows Compute Nodes, or a non-administrative user unique to the Pool on Linux\nCompute Nodes."
        },
        "rerunOnNodeRebootAfterSuccess": {
          "type": "boolean",
          "description": "The Job Preparation Task is always rerun if a Compute Node is reimaged, or if\nthe Job Preparation Task did not complete (e.g. because the reboot occurred\nwhile the Task was running). Therefore, you should always write a Job\nPreparation Task to be idempotent and to behave correctly if run multiple\ntimes. The default value is true."
        }
      },
      "description": "You can use Job Preparation to prepare a Node to run Tasks for the Job.\nActivities commonly performed in Job Preparation include: Downloading common\nresource files used by all the Tasks in the Job. The Job Preparation Task can\ndownload these common resource files to the shared location on the Node.\n(AZ_BATCH_NODE_ROOT_DIR\\shared), or starting a local service on the Node so\nthat all Tasks of that Job can communicate with it. If the Job Preparation Task\nfails (that is, exhausts its retry count before exiting with exit code 0),\nBatch will not run Tasks of this Job on the Node. The Compute Node remains\nineligible to run Tasks of this Job until it is reimaged. The Compute Node\nremains active and can be used for other Jobs. The Job Preparation Task can run\nmultiple times on the same Node. Therefore, you should write the Job\nPreparation Task to handle re-execution. If the Node is rebooted, the Job\nPreparation Task is run again on the Compute Node before scheduling any other\nTask of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job\nPreparation Task did not previously complete. If the Node is reimaged, the Job\nPreparation Task is run again before scheduling any Task of the Job. Batch will\nretry Tasks when a recovery operation is triggered on a Node. Examples of\nrecovery operations include (but are not limited to) when an unhealthy Node is\nrebooted or a Compute Node disappeared due to host failure. Retries due to\nrecovery operations are independent of and are not counted against the\nmaxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to\na recovery operation may occur. Because of this, all Tasks should be\nidempotent. This means Tasks need to tolerate being interrupted and restarted\nwithout causing any corruption or duplicate data. The best practice for long\nrunning Tasks is to use some form of checkpointing.",
      "required": [
        "commandLine"
      ]
    },
    "JobPreparationTaskExecutionInformation": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "If the Task has been restarted or retried, this is the most recent time at\nwhich the Task started running."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Task is in the Completed state."
        },
        "state": {
          "$ref": "#/definitions/JobPreparationTaskState",
          "description": "The current state of the Job Preparation Task on the Compute Node."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Job Preparation Task on the Compute Node. You can use\nthis path to retrieve files created by the Task, such as log files."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Job Preparation Task on the Compute Node."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter is returned only if the Task is in the completed state. The exit\ncode for a process reflects the specific convention implemented by the\napplication developer for that process. If you use the exit code value to make\ndecisions in your code, be sure that you know the exit code convention used by\nthe application process. Note that the exit code may also be generated by the\nCompute Node operating system, such as when a process is forcibly terminated."
        },
        "containerInfo": {
          "$ref": "#/definitions/TaskContainerExecutionInformation",
          "description": "This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/TaskFailureInformation",
          "description": "This property is set only if the Task is in the completed state and encountered\na failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Task application failures (non-zero exit code) are retried, pre-processing\nerrors (the Task could not be run) and file upload errors are not retried. The\nBatch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Task was retried (i.e. retryCount is nonzero).\nIf present, this is typically the same as startTime, but may be different if\nthe Task has been restarted for reasons other than retry; for example, if the\nCompute Node was rebooted during a retry, then the startTime is updated but the\nlastRetryTime is not."
        },
        "result": {
          "$ref": "#/definitions/TaskExecutionResult",
          "description": "If the value is 'failed', then the details of the failure can be found in the\nfailureInfo property."
        }
      },
      "description": "Contains information about the execution of a Job Preparation Task on a Compute\nNode.",
      "required": [
        "startTime",
        "state",
        "retryCount"
      ]
    },
    "JobPreparationTaskState": {
      "type": "string",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "JobPreparationTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is currently running (including retrying)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "JobPreparationTaskUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters. If you do not\nspecify this property, the Batch service assigns a default value of\n'jobpreparation'. No other Task in the Job can have the same ID as the Job\nPreparation Task. If you try to submit a Task with the same id, the Batch\nservice rejects the request with error code TaskIdSameAsJobPreparationTask; if\nyou are calling the REST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettingsUpdate",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory. \nThere is a maximum size for the list of resource files.  When the max size is\nexceeded, the request will fail and the response error code will be\nRequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be\nreduced in size. This can be achieved using .zip files, Application Packages,\nor Docker Containers."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Preparation Task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "description": "Execution constraints to apply to a Task."
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "If true and the Job Preparation Task fails on a Node, the Batch service retries\nthe Job Preparation Task up to its maximum retry count (as specified in the\nconstraints element). If the Task has still not completed successfully after\nall retries, then the Batch service will not schedule Tasks of the Job to the\nNode. The Node remains active and eligible to run Tasks of other Jobs. If\nfalse, the Batch service will not wait for the Job Preparation Task to\ncomplete. In this case, other Tasks of the Job can start executing on the\nCompute Node while the Job Preparation Task is still running; and even if the\nJob Preparation Task fails, new Tasks will continue to be scheduled on the\nCompute Node. The default value is true."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task on\nWindows Compute Nodes, or a non-administrative user unique to the Pool on Linux\nCompute Nodes."
        },
        "rerunOnNodeRebootAfterSuccess": {
          "type": "boolean",
          "description": "The Job Preparation Task is always rerun if a Compute Node is reimaged, or if\nthe Job Preparation Task did not complete (e.g. because the reboot occurred\nwhile the Task was running). Therefore, you should always write a Job\nPreparation Task to be idempotent and to behave correctly if run multiple\ntimes. The default value is true."
        }
      },
      "description": "You can use Job Preparation to prepare a Node to run Tasks for the Job.\nActivities commonly performed in Job Preparation include: Downloading common\nresource files used by all the Tasks in the Job. The Job Preparation Task can\ndownload these common resource files to the shared location on the Node.\n(AZ_BATCH_NODE_ROOT_DIR\\shared), or starting a local service on the Node so\nthat all Tasks of that Job can communicate with it. If the Job Preparation Task\nfails (that is, exhausts its retry count before exiting with exit code 0),\nBatch will not run Tasks of this Job on the Node. The Compute Node remains\nineligible to run Tasks of this Job until it is reimaged. The Compute Node\nremains active and can be used for other Jobs. The Job Preparation Task can run\nmultiple times on the same Node. Therefore, you should write the Job\nPreparation Task to handle re-execution. If the Node is rebooted, the Job\nPreparation Task is run again on the Compute Node before scheduling any other\nTask of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job\nPreparation Task did not previously complete. If the Node is reimaged, the Job\nPreparation Task is run again before scheduling any Task of the Job. Batch will\nretry Tasks when a recovery operation is triggered on a Node. Examples of\nrecovery operations include (but are not limited to) when an unhealthy Node is\nrebooted or a Compute Node disappeared due to host failure. Retries due to\nrecovery operations are independent of and are not counted against the\nmaxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to\na recovery operation may occur. Because of this, all Tasks should be\nidempotent. This means Tasks need to tolerate being interrupted and restarted\nwithout causing any corruption or duplicate data. The best practice for long\nrunning Tasks is to use some form of checkpointing."
    },
    "JobReleaseTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters. If you do not\nspecify this property, the Batch service assigns a default value of\n'jobrelease'. No other Task in the Job can have the same ID as the Job Release\nTask. If you try to submit a Task with the same id, the Batch service rejects\nthe request with error code TaskIdSameAsJobReleaseTask; if you are calling the\nREST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Release Task."
        },
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Job Release Task may run on a given Compute\nNode, measured from the time the Task starts. If the Task does not complete\nwithin the time limit, the Batch service terminates it. The default value is 15\nminutes. You may not specify a timeout longer than 15 minutes. If you do, the\nBatch service rejects it with an error; if you are calling the REST API\ndirectly, the HTTP status code is 400 (Bad Request)."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The default is 7 days, i.e. the Task directory will be retained for 7 days\nunless the Compute Node is removed or the Job is deleted."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        }
      },
      "description": "The Job Release Task runs when the Job ends, because of one of the following:\nThe user calls the Terminate Job API, or the Delete Job API while the Job is\nstill active, the Job's maximum wall clock time constraint is reached, and the\nJob is still active, or the Job's Job Manager Task completed, and the Job is\nconfigured to terminate when the Job Manager completes. The Job Release Task\nruns on each Node where Tasks of the Job have run and the Job Preparation Task\nran and completed. If you reimage a Node after it has run the Job Preparation\nTask, and the Job ends without any further Tasks of the Job running on that\nNode (and hence the Job Preparation Task does not re-run), then the Job Release\nTask does not run on that Compute Node. If a Node reboots while the Job Release\nTask is still running, the Job Release Task runs again when the Compute Node\nstarts up. The Job is not marked as complete until all Job Release Tasks have\ncompleted. The Job Release Task runs in the background. It does not occupy a\nscheduling slot; that is, it does not count towards the taskSlotsPerNode limit\nspecified on the Pool.",
      "required": [
        "commandLine"
      ]
    },
    "JobReleaseTaskExecutionInformation": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "If the Task has been restarted or retried, this is the most recent time at\nwhich the Task started running."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Task is in the Completed state."
        },
        "state": {
          "$ref": "#/definitions/JobReleaseTaskState",
          "description": "The current state of the Job Release Task on the Compute Node."
        },
        "taskRootDirectory": {
          "type": "string",
          "description": "The root directory of the Job Release Task on the Compute Node. You can use\nthis path to retrieve files created by the Task, such as log files."
        },
        "taskRootDirectoryUrl": {
          "type": "string",
          "description": "The URL to the root directory of the Job Release Task on the Compute Node."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter is returned only if the Task is in the completed state. The exit\ncode for a process reflects the specific convention implemented by the\napplication developer for that process. If you use the exit code value to make\ndecisions in your code, be sure that you know the exit code convention used by\nthe application process. Note that the exit code may also be generated by the\nCompute Node operating system, such as when a process is forcibly terminated."
        },
        "containerInfo": {
          "$ref": "#/definitions/TaskContainerExecutionInformation",
          "description": "This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/TaskFailureInformation",
          "description": "This property is set only if the Task is in the completed state and encountered\na failure."
        },
        "result": {
          "$ref": "#/definitions/TaskExecutionResult",
          "description": "If the value is 'failed', then the details of the failure can be found in the\nfailureInfo property."
        }
      },
      "description": "Contains information about the execution of a Job Release Task on a Compute\nNode.",
      "required": [
        "startTime",
        "state"
      ]
    },
    "JobReleaseTaskState": {
      "type": "string",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "JobReleaseTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is currently running (including retrying)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "JobReleaseTaskUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID can contain any combination of alphanumeric characters including hyphens\nand underscores and cannot contain more than 64 characters. If you do not\nspecify this property, the Batch service assigns a default value of\n'jobrelease'. No other Task in the Job can have the same ID as the Job Release\nTask. If you try to submit a Task with the same id, the Batch service rejects\nthe request with error code TaskIdSameAsJobReleaseTask; if you are calling the\nREST API directly, the HTTP status code is 409 (Conflict)."
        },
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettingsUpdate",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the Job Release Task."
        },
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum elapsed time that the Job Release Task may run on a given Compute\nNode, measured from the time the Task starts. If the Task does not complete\nwithin the time limit, the Batch service terminates it. The default value is 15\nminutes. You may not specify a timeout longer than 15 minutes. If you do, the\nBatch service rejects it with an error; if you are calling the REST API\ndirectly, the HTTP status code is 400 (Bad Request)."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The default is 7 days, i.e. the Task directory will be retained for 7 days\nunless the Compute Node is removed or the Job is deleted."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        }
      },
      "description": "The Job Release Task runs when the Job ends, because of one of the following:\nThe user calls the Terminate Job API, or the Delete Job API while the Job is\nstill active, the Job's maximum wall clock time constraint is reached, and the\nJob is still active, or the Job's Job Manager Task completed, and the Job is\nconfigured to terminate when the Job Manager completes. The Job Release Task\nruns on each Node where Tasks of the Job have run and the Job Preparation Task\nran and completed. If you reimage a Node after it has run the Job Preparation\nTask, and the Job ends without any further Tasks of the Job running on that\nNode (and hence the Job Preparation Task does not re-run), then the Job Release\nTask does not run on that Compute Node. If a Node reboots while the Job Release\nTask is still running, the Job Release Task runs again when the Compute Node\nstarts up. The Job is not marked as complete until all Job Release Tasks have\ncompleted. The Job Release Task runs in the background. It does not occupy a\nscheduling slot; that is, it does not count towards the taskSlotsPerNode limit\nspecified on the Pool."
    },
    "JobScheduleExecutionInformation": {
      "type": "object",
      "properties": {
        "nextRunTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is meaningful only if the schedule is in the active state when\nthe time comes around. For example, if the schedule is disabled, no Job will be\ncreated at nextRunTime unless the Job is enabled before then."
        },
        "recentJob": {
          "$ref": "#/definitions/RecentJob",
          "description": "This property is present only if the at least one Job has run under the\nschedule."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Job Schedule is in the completed state."
        }
      },
      "description": "Contains information about Jobs that have been and will be run under a Job\nSchedule."
    },
    "JobScheduleState": {
      "type": "string",
      "enum": [
        "active",
        "completed",
        "disabled",
        "terminating",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "JobScheduleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Job Schedule is active and will create Jobs as per its schedule."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Job Schedule has terminated, either by reaching its end time or by the user terminating it explicitly."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "The user has disabled the Job Schedule. The scheduler will not initiate any new Jobs will on this schedule, but any existing active Job will continue to run."
          },
          {
            "name": "Terminating",
            "value": "terminating",
            "description": "The Job Schedule has no more work to do, or has been explicitly terminated by the user, but the termination operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, nor is any existing Job active."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "The user has requested that the Job Schedule be deleted, but the delete operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, and will delete any existing Jobs and Tasks under the Job Schedule, including any active Job. The Job Schedule will be deleted when all Jobs and Tasks under the Job Schedule have been deleted."
          }
        ]
      }
    },
    "JobScheduleStatistics": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by all Tasks in all Jobs created under the schedule."
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by all Tasks in all Jobs created under the schedule."
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The wall clock time is the elapsed time from when the Task started running on a\nCompute Node to when it finished (or to the last time the statistics were\nupdated, if the Task had not finished by then). If a Task was retried, this\nincludes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk read operations made by all Tasks in all Jobs created\nunder the schedule."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk write operations made by all Tasks in all Jobs created\nunder the schedule."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes read from disk by all Tasks in all Jobs created under the\nschedule."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes written to disk by all Tasks in all Jobs created under the\nschedule."
        },
        "numSucceededTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Tasks successfully completed during the given time range in\nJobs created under the schedule. A Task completes successfully if it returns\nexit code 0."
        },
        "numFailedTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Tasks that failed during the given time range in Jobs\ncreated under the schedule. A Task fails if it exhausts its maximum retry count\nwithout returning exit code 0."
        },
        "numTaskRetries": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of retries during the given time range on all Tasks in all\nJobs created under the schedule."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "This value is only reported in the Account lifetime statistics; it is not\nincluded in the Job statistics."
        }
      },
      "description": "Resource usage statistics for a Job Schedule.",
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "numSucceededTasks",
        "numFailedTasks",
        "numTaskRetries",
        "waitTime"
      ]
    },
    "JobSchedulingError": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/ErrorCategory",
          "description": "The category of the error."
        },
        "code": {
          "type": "string",
          "description": "An identifier for the Job scheduling error. Codes are invariant and are\nintended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Job scheduling error, intended to be suitable for\ndisplay in a user interface."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "A list of additional error details related to the scheduling error."
        }
      },
      "description": "An error encountered by the Batch service when scheduling a Job.",
      "required": [
        "category"
      ]
    },
    "JobSpecification": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority values can range from -1000 to 1000, with -1000 being the lowest\npriority and 1000 being the highest priority. The default value is 0. This\npriority is used as the default for all Jobs under the Job Schedule. You can\nupdate a Job's priority after it has been created using by using the update Job\nAPI."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "If the value is set to True, other high priority jobs submitted to the system\nwill take precedence and will be able requeue tasks from this job. You can\nupdate a job's allowTaskPreemption after it has been created using the update\njob API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The value of maxParallelTasks must be -1 or greater than 0 if specified. If not\nspecified, the default value is -1, which means there's no limit to the number\nof tasks that can be run at once. You can update a job's maxParallelTasks after\nit has been created using the update job API."
        },
        "displayName": {
          "type": "string",
          "description": "The name need not be unique and can contain any Unicode characters up to a\nmaximum length of 1024."
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is\nfalse."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllTasksComplete",
          "description": "Note that if a Job contains no Tasks, then all Tasks are considered complete.\nThis option is therefore most commonly used with a Job Manager task; if you\nwant to use automatic Job termination without a Job Manager, you should\ninitially set onAllTasksComplete to noaction and update the Job properties to\nset onAllTasksComplete to terminatejob once you have finished adding Tasks. The\ndefault is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnTaskFailure",
          "description": "The default is noaction."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/JobNetworkConfiguration",
          "description": "The network configuration for the Job."
        },
        "constraints": {
          "$ref": "#/definitions/JobConstraints",
          "description": "The execution constraints for a Job."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/JobManagerTask",
          "description": "If the Job does not specify a Job Manager Task, the user must explicitly add\nTasks to the Job using the Task API. If the Job does specify a Job Manager\nTask, the Batch service creates the Job Manager Task when the Job is created,\nand will try to schedule the Job Manager Task before scheduling other Tasks in\nthe Job."
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/JobPreparationTask",
          "description": "If a Job has a Job Preparation Task, the Batch service will run the Job\nPreparation Task on a Node before starting any Tasks of that Job on that\nCompute Node."
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/JobReleaseTask",
          "description": "The primary purpose of the Job Release Task is to undo changes to Nodes made by\nthe Job Preparation Task. Example activities include deleting local files, or\nshutting down services that were started as part of Job preparation. A Job\nRelease Task cannot be specified without also specifying a Job Preparation Task\nfor the Job. The Batch service runs the Job Release Task on the Compute Nodes\nthat have run the Job Preparation Task."
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "Individual Tasks can override an environment setting specified here by\nspecifying the same setting name with a different value."
        },
        "poolInfo": {
          "$ref": "#/definitions/PoolInformation",
          "description": "Specifies how a Job should be assigned to a Pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        }
      },
      "description": "Specifies details of the Jobs to be created on a schedule.",
      "required": [
        "poolInfo"
      ]
    },
    "JobSpecificationUpdate": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority values can range from -1000 to 1000, with -1000 being the lowest\npriority and 1000 being the highest priority. The default value is 0. This\npriority is used as the default for all Jobs under the Job Schedule. You can\nupdate a Job's priority after it has been created using by using the update Job\nAPI."
        },
        "allowTaskPreemption": {
          "type": "boolean",
          "description": "If the value is set to True, other high priority jobs submitted to the system\nwill take precedence and will be able requeue tasks from this job. You can\nupdate a job's allowTaskPreemption after it has been created using the update\njob API."
        },
        "maxParallelTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The value of maxParallelTasks must be -1 or greater than 0 if specified. If not\nspecified, the default value is -1, which means there's no limit to the number\nof tasks that can be run at once. You can update a job's maxParallelTasks after\nit has been created using the update job API."
        },
        "displayName": {
          "type": "string",
          "description": "The name need not be unique and can contain any Unicode characters up to a\nmaximum length of 1024."
        },
        "usesTaskDependencies": {
          "type": "boolean",
          "description": "Whether Tasks in the Job can define dependencies on each other. The default is\nfalse."
        },
        "onAllTasksComplete": {
          "$ref": "#/definitions/OnAllTasksComplete",
          "description": "Note that if a Job contains no Tasks, then all Tasks are considered complete.\nThis option is therefore most commonly used with a Job Manager task; if you\nwant to use automatic Job termination without a Job Manager, you should\ninitially set onAllTasksComplete to noaction and update the Job properties to\nset onAllTasksComplete to terminatejob once you have finished adding Tasks. The\ndefault is noaction."
        },
        "onTaskFailure": {
          "$ref": "#/definitions/OnTaskFailure",
          "description": "The default is noaction."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/JobNetworkConfigurationUpdate",
          "description": "The network configuration for the Job."
        },
        "constraints": {
          "$ref": "#/definitions/JobConstraints",
          "description": "The execution constraints for a Job."
        },
        "jobManagerTask": {
          "$ref": "#/definitions/JobManagerTaskUpdate",
          "description": "If the Job does not specify a Job Manager Task, the user must explicitly add\nTasks to the Job using the Task API. If the Job does specify a Job Manager\nTask, the Batch service creates the Job Manager Task when the Job is created,\nand will try to schedule the Job Manager Task before scheduling other Tasks in\nthe Job."
        },
        "jobPreparationTask": {
          "$ref": "#/definitions/JobPreparationTaskUpdate",
          "description": "If a Job has a Job Preparation Task, the Batch service will run the Job\nPreparation Task on a Node before starting any Tasks of that Job on that\nCompute Node."
        },
        "jobReleaseTask": {
          "$ref": "#/definitions/JobReleaseTaskUpdate",
          "description": "The primary purpose of the Job Release Task is to undo changes to Nodes made by\nthe Job Preparation Task. Example activities include deleting local files, or\nshutting down services that were started as part of Job preparation. A Job\nRelease Task cannot be specified without also specifying a Job Preparation Task\nfor the Job. The Batch service runs the Job Release Task on the Compute Nodes\nthat have run the Job Preparation Task."
        },
        "commonEnvironmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "Individual Tasks can override an environment setting specified here by\nspecifying the same setting name with a different value."
        },
        "poolInfo": {
          "$ref": "#/definitions/PoolInformationUpdate",
          "description": "Specifies how a Job should be assigned to a Pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        }
      },
      "description": "Specifies details of the Jobs to be created on a schedule."
    },
    "JobState": {
      "type": "string",
      "enum": [
        "active",
        "disabling",
        "disabled",
        "enabling",
        "terminating",
        "completed",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "JobState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Job is available to have Tasks scheduled."
          },
          {
            "name": "Disabling",
            "value": "disabling",
            "description": "A user has requested that the Job be disabled, but the disable operation is still in progress (for example, waiting for Tasks to terminate)."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "A user has disabled the Job. No Tasks are running, and no new Tasks will be scheduled."
          },
          {
            "name": "Enabling",
            "value": "enabling",
            "description": "A user has requested that the Job be enabled, but the enable operation is still in progress."
          },
          {
            "name": "Terminating",
            "value": "terminating",
            "description": "The Job is about to complete, either because a Job Manager Task has completed or because the user has terminated the Job, but the terminate operation is still in progress (for example, because Job Release Tasks are running)."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "All Tasks have terminated, and the system will not accept any more Tasks or any further changes to the Job."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "A user has requested that the Job be deleted, but the delete operation is still in progress (for example, because the system is still terminating running Tasks)."
          }
        ]
      }
    },
    "JobStatistics": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by all Tasks in the Job."
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by all Tasks in the Job."
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": " The wall clock time is the elapsed time from when the Task started running on\na Compute Node to when it finished (or to the last time the statistics were\nupdated, if the Task had not finished by then). If a Task was retried, this\nincludes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk read operations made by all Tasks in the Job."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk write operations made by all Tasks in the Job."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB read from disk by all Tasks in the Job."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB written to disk by all Tasks in the Job."
        },
        "numSucceededTasks": {
          "type": "integer",
          "format": "int32",
          "description": "A Task completes successfully if it returns exit code 0."
        },
        "numFailedTasks": {
          "type": "integer",
          "format": "int32",
          "description": "A Task fails if it exhausts its maximum retry count without returning exit code\n0."
        },
        "numTaskRetries": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of retries on all the Tasks in the Job during the given time\nrange."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "The wait time for a Task is defined as the elapsed time between the creation of\nthe Task and the start of Task execution. (If the Task is retried due to\nfailures, the wait time is the time to the most recent Task execution.) This\nvalue is only reported in the Account lifetime statistics; it is not included\nin the Job statistics."
        }
      },
      "description": "Resource usage statistics for a Job.",
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "numSucceededTasks",
        "numFailedTasks",
        "numTaskRetries",
        "waitTime"
      ]
    },
    "LinuxUserConfiguration": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "integer",
          "format": "int32",
          "description": "The uid and gid properties must be specified together or not at all. If not\nspecified the underlying operating system picks the uid."
        },
        "gid": {
          "type": "integer",
          "format": "int32",
          "description": "The uid and gid properties must be specified together or not at all. If not\nspecified the underlying operating system picks the gid."
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "The private key must not be password protected. The private key is used to\nautomatically configure asymmetric-key based authentication for SSH between\nCompute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication\nproperty is true (it is ignored if enableInterNodeCommunication is false). It\ndoes this by placing the key pair into the user's .ssh directory. If not\nspecified, password-less SSH is not configured between Compute Nodes (no\nmodification of the user's .ssh directory is done)."
        }
      },
      "description": "Properties used to create a user Account on a Linux Compute Node."
    },
    "LoginMode": {
      "type": "string",
      "enum": [
        "batch",
        "interactive"
      ],
      "x-ms-enum": {
        "name": "LoginMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Batch",
            "value": "batch",
            "description": "The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode is recommended for long running parallel processes."
          },
          {
            "name": "Interactive",
            "value": "interactive",
            "description": "The LOGON32_LOGON_INTERACTIVE Win32 login mode. UAC is enabled on Windows VirtualMachineConfiguration Pools. If this option is used with an elevated user identity in a Windows VirtualMachineConfiguration Pool, the user session will not be elevated unless the application executed by the Task command line is configured to always require administrative privilege or to always require maximum privilege."
          }
        ]
      }
    },
    "MetadataItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metadata item."
        },
        "value": {
          "type": "string",
          "description": "The value of the metadata item."
        }
      },
      "description": "The Batch service does not assign any meaning to this metadata; it is solely\nfor the use of user code.",
      "required": [
        "name",
        "value"
      ]
    },
    "MountConfiguration": {
      "type": "object",
      "properties": {
        "azureBlobFileSystemConfiguration": {
          "$ref": "#/definitions/AzureBlobFileSystemConfiguration",
          "description": "This property is mutually exclusive with all other properties."
        },
        "nfsMountConfiguration": {
          "$ref": "#/definitions/NFSMountConfiguration",
          "description": "This property is mutually exclusive with all other properties."
        },
        "cifsMountConfiguration": {
          "$ref": "#/definitions/CifsMountConfiguration",
          "description": "This property is mutually exclusive with all other properties."
        },
        "azureFileShareConfiguration": {
          "$ref": "#/definitions/AzureFileShareConfiguration",
          "description": "This property is mutually exclusive with all other properties."
        }
      },
      "description": "The file system to mount on each node."
    },
    "MultiInstanceSettings": {
      "type": "object",
      "properties": {
        "numberOfInstances": {
          "type": "integer",
          "format": "int32",
          "description": "If omitted, the default is 1."
        },
        "coordinationCommandLine": {
          "type": "string",
          "description": "A typical coordination command line launches a background service and verifies\nthat the service is ready to process inter-node messages."
        },
        "commonResourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "The difference between common resource files and Task resource files is that\ncommon resource files are downloaded for all subtasks including the primary,\nwhereas Task resource files are downloaded only for the primary. Also note that\nthese resource files are not downloaded to the Task working directory, but\ninstead are downloaded to the Task root directory (one directory above the\nworking directory).  There is a maximum size for the list of resource files. \nWhen the max size is exceeded, the request will fail and the response error\ncode will be RequestEntityTooLarge. If this occurs, the collection of\nResourceFiles must be reduced in size. This can be achieved using .zip files,\nApplication Packages, or Docker Containers."
        }
      },
      "description": "Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI case,\nif any of the subtasks fail (for example due to exiting with a non-zero exit\ncode) the entire multi-instance Task fails. The multi-instance Task is then\nterminated and retried, up to its retry limit.",
      "required": [
        "coordinationCommandLine"
      ]
    },
    "NFSMountConfiguration": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "All file systems are mounted relative to the Batch mounts directory, accessible\nvia the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "mountOptions": {
          "type": "string",
          "description": "These are 'net use' options in Windows and 'mount' options in Linux."
        }
      },
      "description": "Information used to connect to an NFS file system.",
      "required": [
        "source",
        "relativeMountPath"
      ]
    },
    "NameValuePair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name in the name-value pair."
        },
        "value": {
          "type": "string",
          "description": "The value in the name-value pair."
        }
      },
      "description": "Represents a name-value pair."
    },
    "NetworkConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The virtual network must be in the same region and subscription as the Azure\nBatch Account. The specified subnet should have enough free IP addresses to\naccommodate the number of Compute Nodes in the Pool. If the subnet doesn't have\nenough free IP addresses, the Pool will partially allocate Nodes and a resize\nerror will occur. The 'MicrosoftAzureBatch' service principal must have the\n'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for\nthe specified VNet. The specified subnet must allow communication from the\nAzure Batch service to be able to schedule Tasks on the Nodes. This can be\nverified by checking if the specified VNet has any associated Network Security\nGroups (NSG). If communication to the Nodes in the specified subnet is denied\nby an NSG, then the Batch service will set the state of the Compute Nodes to\nunusable. For Pools created with virtualMachineConfiguration only ARM virtual\nnetworks ('Microsoft.Network/virtualNetworks') are supported, but for Pools\ncreated with cloudServiceConfiguration both ARM and classic virtual networks\nare supported. If the specified VNet has any associated Network Security Groups\n(NSG), then a few reserved system ports must be enabled for inbound\ncommunication. For Pools created with a virtual machine configuration, enable\nports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows.\nFor Pools created with a cloud service configuration, enable ports 10100,\n20100, and 30100. Also enable outbound connections to Azure Storage on port\n443. For more details see:\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
        },
        "dynamicVNetAssignmentScope": {
          "$ref": "#/definitions/DynamicVNetAssignmentScope",
          "description": "The scope of dynamic vnet assignment."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/PoolEndpointConfiguration",
          "description": "Pool endpoint configuration is only supported on Pools with the\nvirtualMachineConfiguration property."
        },
        "publicIPAddressConfiguration": {
          "$ref": "#/definitions/PublicIPAddressConfiguration",
          "description": "Public IP configuration property is only supported on Pools with the\nvirtualMachineConfiguration property."
        }
      },
      "description": "The network configuration for a Pool."
    },
    "NetworkConfigurationUpdate": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The virtual network must be in the same region and subscription as the Azure\nBatch Account. The specified subnet should have enough free IP addresses to\naccommodate the number of Compute Nodes in the Pool. If the subnet doesn't have\nenough free IP addresses, the Pool will partially allocate Nodes and a resize\nerror will occur. The 'MicrosoftAzureBatch' service principal must have the\n'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for\nthe specified VNet. The specified subnet must allow communication from the\nAzure Batch service to be able to schedule Tasks on the Nodes. This can be\nverified by checking if the specified VNet has any associated Network Security\nGroups (NSG). If communication to the Nodes in the specified subnet is denied\nby an NSG, then the Batch service will set the state of the Compute Nodes to\nunusable. For Pools created with virtualMachineConfiguration only ARM virtual\nnetworks ('Microsoft.Network/virtualNetworks') are supported, but for Pools\ncreated with cloudServiceConfiguration both ARM and classic virtual networks\nare supported. If the specified VNet has any associated Network Security Groups\n(NSG), then a few reserved system ports must be enabled for inbound\ncommunication. For Pools created with a virtual machine configuration, enable\nports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows.\nFor Pools created with a cloud service configuration, enable ports 10100,\n20100, and 30100. Also enable outbound connections to Azure Storage on port\n443. For more details see:\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
        },
        "dynamicVNetAssignmentScope": {
          "$ref": "#/definitions/DynamicVNetAssignmentScope",
          "description": "The scope of dynamic vnet assignment."
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/PoolEndpointConfigurationUpdate",
          "description": "Pool endpoint configuration is only supported on Pools with the\nvirtualMachineConfiguration property."
        },
        "publicIPAddressConfiguration": {
          "$ref": "#/definitions/PublicIPAddressConfiguration",
          "description": "Public IP configuration property is only supported on Pools with the\nvirtualMachineConfiguration property."
        }
      },
      "description": "The network configuration for a Pool."
    },
    "NetworkSecurityGroupRule": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priorities within a Pool must be unique and are evaluated in order of priority.\nThe lower the number the higher the priority. For example, rules could be\nspecified with order numbers of 150, 250, and 350. The rule with the order\nnumber of 150 takes precedence over the rule that has an order of 250. Allowed\npriorities are 150 to 4096. If any reserved or duplicate values are provided\nthe request fails with HTTP status code 400."
        },
        "access": {
          "$ref": "#/definitions/NetworkSecurityGroupRuleAccess",
          "description": "The action that should be taken for a specified IP address, subnet range or tag."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e.\n192.168.1.0/24), default tag, or * (for all addresses).  If any other values\nare provided the request fails with HTTP status code 400."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a\nport range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each\nentry in this collection must not overlap any other entry (either a range or an\nindividual port). If any other values are provided the request fails with HTTP\nstatus code 400. The default value is '*'."
        }
      },
      "description": "A network security group rule to apply to an inbound endpoint.",
      "required": [
        "priority",
        "access",
        "sourceAddressPrefix"
      ]
    },
    "NetworkSecurityGroupRuleAccess": {
      "type": "string",
      "enum": [
        "allow",
        "deny"
      ],
      "x-ms-enum": {
        "name": "NetworkSecurityGroupRuleAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "allow",
            "description": "Allow access."
          },
          {
            "name": "Deny",
            "value": "deny",
            "description": "Deny access."
          }
        ]
      }
    },
    "NodeAgentInformation": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "This version number can be checked against the Compute Node agent release notes\nlocated at\nhttps://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "This is the most recent time that the Compute Node agent was updated to a new\nversion."
        }
      },
      "description": "The Batch Compute Node agent is a program that runs on each Compute Node in the\nPool and provides Batch capability on the Compute Node.",
      "required": [
        "version",
        "lastUpdateTime"
      ]
    },
    "NodeCommunicationMode": {
      "type": "string",
      "enum": [
        "default",
        "classic",
        "simplified"
      ],
      "x-ms-enum": {
        "name": "NodeCommunicationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "default",
            "description": "The node communication mode is automatically set by the Batch service."
          },
          {
            "name": "Classic",
            "value": "classic",
            "description": "Nodes using the classic communication mode require inbound TCP communication on ports 29876 and 29877 from the \"BatchNodeManagement.{region}\" service tag and outbound TCP communication on port 443 to the \"Storage.region\" and \"BatchNodeManagement.{region}\" service tags."
          },
          {
            "name": "Simplified",
            "value": "simplified",
            "description": "Nodes using the simplified communication mode require outbound TCP communication on port 443 to the \"BatchNodeManagement.{region}\" service tag. No open inbound ports are required."
          }
        ]
      }
    },
    "NodeCounts": {
      "type": "object",
      "properties": {
        "creating": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the creating state."
        },
        "idle": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the idle state."
        },
        "offline": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the offline state."
        },
        "preempted": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the preempted state."
        },
        "rebooting": {
          "type": "integer",
          "format": "int32",
          "description": "The count of Compute Nodes in the rebooting state."
        },
        "reimaging": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the reimaging state."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the running state."
        },
        "starting": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the starting state."
        },
        "startTaskFailed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the startTaskFailed state."
        },
        "leavingPool": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the leavingPool state."
        },
        "unknown": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the unknown state."
        },
        "unusable": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the unusable state."
        },
        "waitingForStartTask": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Compute Nodes in the waitingForStartTask state."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of Compute Nodes."
        }
      },
      "description": "The number of Compute Nodes in each Compute Node state.",
      "required": [
        "creating",
        "idle",
        "offline",
        "preempted",
        "rebooting",
        "reimaging",
        "running",
        "starting",
        "startTaskFailed",
        "leavingPool",
        "unknown",
        "unusable",
        "waitingForStartTask",
        "total"
      ]
    },
    "NodeDisableSchedulingParameters": {
      "type": "object",
      "properties": {
        "nodeDisableSchedulingOption": {
          "$ref": "#/definitions/DisableComputeNodeSchedulingOption",
          "description": "The default value is requeue."
        }
      },
      "description": "Options for disabling scheduling on a Compute Node."
    },
    "NodeFile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The file path."
        },
        "url": {
          "type": "string",
          "description": "The URL of the file."
        },
        "isDirectory": {
          "type": "boolean",
          "description": "Whether the object represents a directory."
        },
        "properties": {
          "$ref": "#/definitions/FileProperties",
          "description": "The properties of a file on a Compute Node."
        }
      },
      "description": "Information about a file or directory on a Compute Node."
    },
    "NodeFileListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NodeFile[]",
          "description": "The list of files."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the files on a Compute Node, or the files associated with\na Task on a Compute Node."
    },
    "NodePlacementConfiguration": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/NodePlacementPolicyType",
          "description": "Allocation policy used by Batch Service to provision the nodes. If not\nspecified, Batch will use the regional policy."
        }
      },
      "description": "For regional placement, nodes in the pool will be allocated in the same region.\nFor zonal placement, nodes in the pool will be spread across different zones\nwith best effort balancing."
    },
    "NodePlacementPolicyType": {
      "type": "string",
      "enum": [
        "regional",
        "zonal"
      ],
      "x-ms-enum": {
        "name": "NodePlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Regional",
            "value": "regional",
            "description": "All nodes in the pool will be allocated in the same region."
          },
          {
            "name": "Zonal",
            "value": "zonal",
            "description": "Nodes in the pool will be spread across different availability zones with best effort balancing."
          }
        ]
      }
    },
    "NodeRebootParameters": {
      "type": "object",
      "properties": {
        "nodeRebootOption": {
          "$ref": "#/definitions/ComputeNodeRebootOption",
          "description": "The default value is requeue."
        }
      },
      "description": "Options for rebooting a Compute Node."
    },
    "NodeReimageParameters": {
      "type": "object",
      "properties": {
        "nodeReimageOption": {
          "$ref": "#/definitions/ComputeNodeReimageOption",
          "description": "The default value is requeue."
        }
      },
      "description": "Options for reimaging a Compute Node."
    },
    "NodeRemoveParameters": {
      "type": "object",
      "properties": {
        "nodeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "A maximum of 100 nodes may be removed per request."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The default value is 15 minutes. The minimum value is 5 minutes. If you specify\na value less than 5 minutes, the Batch service returns an error; if you are\ncalling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "nodeDeallocationOption": {
          "$ref": "#/definitions/ComputeNodeDeallocationOption",
          "description": "The default value is requeue."
        }
      },
      "description": "Options for removing Compute Nodes from a Pool.",
      "required": [
        "nodeList"
      ]
    },
    "NodeUpdateUserParameters": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "The password is required for Windows Compute Nodes (those created with\n'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\nusing a Windows Image reference). For Linux Compute Nodes, the password can\noptionally be specified along with the sshPublicKey property. If omitted, any\nexisting password is removed."
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "If omitted, the default is 1 day from the current time. For Linux Compute\nNodes, the expiryTime has a precision up to a day."
        },
        "sshPublicKey": {
          "type": "string",
          "description": "The public key should be compatible with OpenSSH encoding and should be base 64\nencoded. This property can be specified only for Linux Compute Nodes. If this\nis specified for a Windows Compute Node, then the Batch service rejects the\nrequest; if you are calling the REST API directly, the HTTP status code is 400\n(Bad Request). If omitted, any existing SSH public key is removed."
        }
      },
      "description": "The set of changes to be made to a user Account on a Compute Node."
    },
    "NodeVMExtension": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the virtual machine extension."
        },
        "vmExtension": {
          "$ref": "#/definitions/VMExtension",
          "description": "The configuration for virtual machine extensions."
        },
        "instanceView": {
          "$ref": "#/definitions/VMExtensionInstanceView",
          "description": "The vm extension instance view."
        }
      },
      "description": "The configuration for virtual machine extension instance view."
    },
    "NodeVMExtensionList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeVMExtension"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NodeVMExtension[]",
          "description": "The list of Compute Node extensions."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Compute Node extensions in a Node."
    },
    "OSDisk": {
      "type": "object",
      "properties": {
        "ephemeralOSDiskSettings": {
          "$ref": "#/definitions/DiffDiskSettings",
          "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the\ncompute node (VM)."
        }
      },
      "description": "Settings for the operating system disk of the compute node (VM)."
    },
    "OSType": {
      "type": "string",
      "enum": [
        "linux",
        "windows"
      ],
      "x-ms-enum": {
        "name": "OSType",
        "modelAsString": true,
        "values": [
          {
            "name": "Linux",
            "value": "linux",
            "description": "The Linux operating system."
          },
          {
            "name": "Windows",
            "value": "windows",
            "description": "The Windows operating system."
          }
        ]
      }
    },
    "OnAllTasksComplete": {
      "type": "string",
      "enum": [
        "noaction",
        "terminatejob"
      ],
      "x-ms-enum": {
        "name": "OnAllTasksComplete",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAction",
            "value": "noaction",
            "description": "Do nothing. The Job remains active unless terminated or disabled by some other means."
          },
          {
            "name": "TerminateJob",
            "value": "terminatejob",
            "description": ""
          }
        ]
      }
    },
    "OnTaskFailure": {
      "type": "string",
      "enum": [
        "noaction",
        "performexitoptionsjobaction"
      ],
      "x-ms-enum": {
        "name": "OnTaskFailure",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAction",
            "value": "noaction",
            "description": "Do nothing. The Job remains active unless terminated or disabled by some other means."
          },
          {
            "name": "PerformExitOptionsJobAction",
            "value": "performexitoptionsjobaction",
            "description": "Terminate the Job. The Job's terminateReason is set to 'AllTasksComplete'."
          }
        ]
      }
    },
    "OutputFile": {
      "type": "object",
      "properties": {
        "filePattern": {
          "type": "string",
          "description": "Both relative and absolute paths are supported. Relative paths are relative to\nthe Task working directory. The following wildcards are supported: * matches 0\nor more characters (for example pattern abc* would match abc or abcdef), **\nmatches any directory, ? matches any single character, [abc] matches one\ncharacter in the brackets, and [a-c] matches one character in the range.\nBrackets can include a negation to match any character not specified (for\nexample [!abc] matches any character but a, b, or c). If a file name starts\nwith \".\" it is ignored by default but may be matched by specifying it\nexplicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple\nexample: **\\*.txt matches any file that does not start in '.' and ends with\n.txt in the Task working directory or any subdirectory. If the filename\ncontains a wildcard character it can be escaped using brackets (for example\nabc[*] would match a file named abc*). Note that both \\ and / are treated as\ndirectory separators on Windows, but only / is on Linux. Environment variables\n(%var% on Windows or $var on Linux) are expanded prior to the pattern being\napplied."
        },
        "destination": {
          "$ref": "#/definitions/OutputFileDestination",
          "description": "The destination to which a file should be uploaded."
        },
        "uploadOptions": {
          "$ref": "#/definitions/OutputFileUploadOptions",
          "description": "Details about an output file upload operation, including under what conditions\nto perform the upload."
        }
      },
      "description": "On every file uploads, Batch service writes two log files to the compute node,\n'fileuploadout.txt' and 'fileuploaderr.txt'. These log files are used to learn\nmore about a specific failure.",
      "required": [
        "filePattern",
        "destination",
        "uploadOptions"
      ]
    },
    "OutputFileBlobContainerDestination": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "If filePattern refers to a specific file (i.e. contains no wildcards), then\npath is the name of the blob to which to upload that file. If filePattern\ncontains one or more wildcards (and therefore may match multiple files), then\npath is the name of the blob virtual directory (which is prepended to each blob\nname) to which to upload the file(s). If omitted, file(s) are uploaded to the\nroot of the container with a blob name matching their file name."
        },
        "containerUrl": {
          "type": "string",
          "description": "If not using a managed identity, the URL must include a Shared Access Signature\n(SAS) granting write permissions to the container."
        },
        "identityReference": {
          "$ref": "#/definitions/ComputeNodeIdentityReference",
          "description": "The identity must have write access to the Azure Blob Storage container"
        },
        "uploadHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HttpHeader"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "HttpHeader[]",
          "description": "These headers will be specified when uploading files to Azure Storage. Official\ndocument on allowed headers when uploading blobs:\nhttps://docs.microsoft.com/en-us/rest/api/storageservices/put-blob#request-headers-all-blob-types"
        }
      },
      "description": "Specifies a file upload destination within an Azure blob storage container.",
      "required": [
        "containerUrl"
      ]
    },
    "OutputFileDestination": {
      "type": "object",
      "properties": {
        "container": {
          "$ref": "#/definitions/OutputFileBlobContainerDestination",
          "description": "Specifies a file upload destination within an Azure blob storage container."
        }
      },
      "description": "The destination to which a file should be uploaded."
    },
    "OutputFileUploadCondition": {
      "type": "string",
      "enum": [
        "tasksuccess",
        "taskfailure",
        "taskcompletion"
      ],
      "x-ms-enum": {
        "name": "OutputFileUploadCondition",
        "modelAsString": true,
        "values": [
          {
            "name": "TaskSuccess",
            "value": "tasksuccess",
            "description": "Upload the file(s) only after the Task process exits with an exit code of 0."
          },
          {
            "name": "TaskFailure",
            "value": "taskfailure",
            "description": "Upload the file(s) only after the Task process exits with a nonzero exit code."
          },
          {
            "name": "TaskCompletion",
            "value": "taskcompletion",
            "description": "Upload the file(s) after the Task process exits, no matter what the exit code was."
          }
        ]
      }
    },
    "OutputFileUploadOptions": {
      "type": "object",
      "properties": {
        "uploadCondition": {
          "$ref": "#/definitions/OutputFileUploadCondition",
          "description": "The default is taskcompletion."
        }
      },
      "description": "Details about an output file upload operation, including under what conditions\nto perform the upload.",
      "required": [
        "uploadCondition"
      ]
    },
    "PoolDoesExistResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "A response containing headers related to the Pool, if it exists."
    },
    "PoolDoesntExistResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "The Pool does not exist."
    },
    "PoolEndpointConfiguration": {
      "type": "object",
      "properties": {
        "inboundNATPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNATPool"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "InboundNATPool[]",
          "description": "The maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum\nnumber of inbound NAT Pools is exceeded the request fails with HTTP status code\n400. This cannot be specified if the IPAddressProvisioningType is\nNoPublicIPAddresses."
        }
      },
      "description": "The endpoint configuration for a Pool.",
      "required": [
        "inboundNATPools"
      ]
    },
    "PoolEndpointConfigurationUpdate": {
      "type": "object",
      "properties": {
        "inboundNATPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNATPool"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "InboundNATPool[]",
          "description": "The maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum\nnumber of inbound NAT Pools is exceeded the request fails with HTTP status code\n400. This cannot be specified if the IPAddressProvisioningType is\nNoPublicIPAddresses."
        }
      },
      "description": "The endpoint configuration for a Pool."
    },
    "PoolIdentityType": {
      "type": "string",
      "enum": [
        "UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "PoolIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "Batch pool has user assigned identities with it."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Batch pool has no identity associated with it. Setting `None` in update pool will remove existing identities."
          }
        ]
      }
    },
    "PoolInformation": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "You must ensure that the Pool referenced by this property exists. If the Pool\ndoes not exist at the time the Batch service tries to schedule a Job, no Tasks\nfor the Job will run until you create a Pool with that id. Note that the Batch\nservice will not reject the Job request; it will simply not run Tasks until the\nPool exists. You must specify either the Pool ID or the auto Pool\nspecification, but not both."
        },
        "autoPoolSpecification": {
          "$ref": "#/definitions/AutoPoolSpecification",
          "description": "If auto Pool creation fails, the Batch service moves the Job to a completed\nstate, and the Pool creation error is set in the Job's scheduling error\nproperty. The Batch service manages the lifetime (both creation and, unless\nkeepAlive is specified, deletion) of the auto Pool. Any user actions that\naffect the lifetime of the auto Pool while the Job is active will result in\nunexpected behavior. You must specify either the Pool ID or the auto Pool\nspecification, but not both."
        }
      },
      "description": "Specifies how a Job should be assigned to a Pool."
    },
    "PoolInformationUpdate": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "You must ensure that the Pool referenced by this property exists. If the Pool\ndoes not exist at the time the Batch service tries to schedule a Job, no Tasks\nfor the Job will run until you create a Pool with that id. Note that the Batch\nservice will not reject the Job request; it will simply not run Tasks until the\nPool exists. You must specify either the Pool ID or the auto Pool\nspecification, but not both."
        },
        "autoPoolSpecification": {
          "$ref": "#/definitions/AutoPoolSpecificationUpdate",
          "description": "If auto Pool creation fails, the Batch service moves the Job to a completed\nstate, and the Pool creation error is set in the Job's scheduling error\nproperty. The Batch service manages the lifetime (both creation and, unless\nkeepAlive is specified, deletion) of the auto Pool. Any user actions that\naffect the lifetime of the auto Pool while the Job is active will result in\nunexpected behavior. You must specify either the Pool ID or the auto Pool\nspecification, but not both."
        }
      },
      "description": "Specifies how a Job should be assigned to a Pool."
    },
    "PoolLifetimeOption": {
      "type": "string",
      "enum": [
        "jobschedule",
        "job"
      ],
      "x-ms-enum": {
        "name": "PoolLifetimeOption",
        "modelAsString": true,
        "values": [
          {
            "name": "JobSchedule",
            "value": "jobschedule",
            "description": "The Pool exists for the lifetime of the Job Schedule. The Batch Service creates the Pool when it creates the first Job on the schedule. You may apply this option only to Job Schedules, not to Jobs."
          },
          {
            "name": "Job",
            "value": "job",
            "description": "The Pool exists for the lifetime of the Job to which it is dedicated. The Batch service creates the Pool when it creates the Job. If the 'job' option is applied to a Job Schedule, the Batch service creates a new auto Pool for every Job created on the schedule."
          }
        ]
      }
    },
    "PoolListUsageMetricsResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolUsageMetrics"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "PoolUsageMetrics[]",
          "description": "The Pool usage metrics data."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of a listing the usage metrics for an Account."
    },
    "PoolNodeCounts": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool.",
          "readOnly": true
        },
        "dedicated": {
          "$ref": "#/definitions/NodeCounts",
          "description": "The number of Compute Nodes in each Compute Node state."
        },
        "lowPriority": {
          "$ref": "#/definitions/NodeCounts",
          "description": "The number of Compute Nodes in each Compute Node state."
        }
      },
      "description": "The number of Compute Nodes in each state for a Pool.",
      "required": [
        "poolId"
      ]
    },
    "PoolNodeCountsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolNodeCounts"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "PoolNodeCounts[]",
          "description": "A list of Compute Node counts by Pool."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The result of listing the Compute Node counts in the Account."
    },
    "PoolRemoveNodesResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "The request to the Batch service was successful."
    },
    "PoolResizeResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "The request to the Batch service was successful."
    },
    "PoolSpecification": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name need not be unique and can contain any Unicode characters up\nto a maximum length of 1024."
        },
        "vmSize": {
          "type": "string",
          "description": "For information about available sizes of virtual machines in Pools, see Choose\na VM size for Compute Nodes in an Azure Batch Pool\n(https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "cloudServiceConfiguration": {
          "$ref": "#/definitions/CloudServiceConfiguration",
          "description": "This property must be specified if the Pool needs to be created with Azure PaaS\nVMs. This property and virtualMachineConfiguration are mutually exclusive and\none of the properties must be specified. If neither is specified then the Batch\nservice returns an error; if you are calling the REST API directly, the HTTP\nstatus code is 400 (Bad Request). This property cannot be specified if the\nBatch Account was created with its poolAllocationMode property set to\n'UserSubscription'."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "description": "This property must be specified if the Pool needs to be created with Azure IaaS\nVMs. This property and cloudServiceConfiguration are mutually exclusive and one\nof the properties must be specified. If neither is specified then the Batch\nservice returns an error; if you are calling the REST API directly, the HTTP\nstatus code is 400 (Bad Request)."
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The default value is 1. The maximum value is the smaller of 4 times the number\nof cores of the vmSize of the pool or 256."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/TaskSchedulingPolicy",
          "description": "If not specified, the default is spread."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "This timeout applies only to manual scaling; it has no effect when\nenableAutoScale is set to true. The default value is 15 minutes. The minimum\nvalue is 5 minutes. If you specify a value less than 5 minutes, the Batch\nservice rejects the request with an error; if you are calling the REST API\ndirectly, the HTTP status code is 400 (Bad Request)."
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "This property must not be specified if enableAutoScale is set to true. If\nenableAutoScale is set to false, then you must set either targetDedicatedNodes,\ntargetLowPriorityNodes, or both."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "This property must not be specified if enableAutoScale is set to true. If\nenableAutoScale is set to false, then you must set either targetDedicatedNodes,\ntargetLowPriorityNodes, or both."
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must\nbe specified. If true, the autoScaleFormula element is required. The Pool\nautomatically resizes according to the formula. The default value is false."
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "This property must not be specified if enableAutoScale is set to false. It is\nrequired if enableAutoScale is set to true. The formula is checked for validity\nbefore the Pool is created. If the formula is not valid, the Batch service\nrejects the request with detailed error information."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The default value is 15 minutes. The minimum and maximum value are 5 minutes\nand 168 hours respectively. If you specify a value less than 5 minutes or\ngreater than 168 hours, the Batch service rejects the request with an invalid\nproperty value error; if you are calling the REST API directly, the HTTP status\ncode is 400 (Bad Request)."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Enabling inter-node communication limits the maximum size of the Pool due to\ndeployment restrictions on the Compute Nodes of the Pool. This may result in\nthe Pool not reaching its desired size. The default value is false."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration for a Pool."
        },
        "startTask": {
          "$ref": "#/definitions/StartTask",
          "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "CertificateReference[]",
          "description": "For Windows Nodes, the Batch service installs the Certificates to the specified\nCertificate store and location. For Linux Compute Nodes, the Certificates are\nstored in a directory inside the Task working directory and an environment\nvariable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this\nlocation. For Certificates with visibility of 'remoteUser', a 'certs' directory\nis created in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "When creating a pool, the package's application ID must be fully qualified\n(/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}).\nChanges to Package references affect all new Nodes joining the Pool, but do not\naffect Compute Nodes that are already in the Pool until they are rebooted or\nreimaged. There is a maximum of 10 Package references on any given Pool."
        },
        "applicationLicenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The list of application licenses must be a subset of available Batch service\napplication licenses. If a license is requested which is not supported, Pool\ncreation will fail. The permitted licenses available on the Pool are 'maya',\n'vray', '3dsmax', 'arnold'. An additional charge applies for each application\nlicense added to the Pool."
        },
        "userAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "UserAccount[]",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        },
        "mountConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MountConfiguration[]",
          "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/NodeCommunicationMode",
          "description": "If omitted, the default value is Default."
        }
      },
      "description": "Specification for creating a new Pool.",
      "required": [
        "vmSize"
      ]
    },
    "PoolSpecificationUpdate": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name need not be unique and can contain any Unicode characters up\nto a maximum length of 1024."
        },
        "vmSize": {
          "type": "string",
          "description": "For information about available sizes of virtual machines in Pools, see Choose\na VM size for Compute Nodes in an Azure Batch Pool\n(https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "cloudServiceConfiguration": {
          "$ref": "#/definitions/CloudServiceConfigurationUpdate",
          "description": "This property must be specified if the Pool needs to be created with Azure PaaS\nVMs. This property and virtualMachineConfiguration are mutually exclusive and\none of the properties must be specified. If neither is specified then the Batch\nservice returns an error; if you are calling the REST API directly, the HTTP\nstatus code is 400 (Bad Request). This property cannot be specified if the\nBatch Account was created with its poolAllocationMode property set to\n'UserSubscription'."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfigurationUpdate",
          "description": "This property must be specified if the Pool needs to be created with Azure IaaS\nVMs. This property and cloudServiceConfiguration are mutually exclusive and one\nof the properties must be specified. If neither is specified then the Batch\nservice returns an error; if you are calling the REST API directly, the HTTP\nstatus code is 400 (Bad Request)."
        },
        "taskSlotsPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The default value is 1. The maximum value is the smaller of 4 times the number\nof cores of the vmSize of the pool or 256."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/TaskSchedulingPolicyUpdate",
          "description": "If not specified, the default is spread."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "This timeout applies only to manual scaling; it has no effect when\nenableAutoScale is set to true. The default value is 15 minutes. The minimum\nvalue is 5 minutes. If you specify a value less than 5 minutes, the Batch\nservice rejects the request with an error; if you are calling the REST API\ndirectly, the HTTP status code is 400 (Bad Request)."
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "description": "This property must not be specified if enableAutoScale is set to true. If\nenableAutoScale is set to false, then you must set either targetDedicatedNodes,\ntargetLowPriorityNodes, or both."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "description": "This property must not be specified if enableAutoScale is set to true. If\nenableAutoScale is set to false, then you must set either targetDedicatedNodes,\ntargetLowPriorityNodes, or both."
        },
        "enableAutoScale": {
          "type": "boolean",
          "description": "If false, at least one of targetDedicatedNodes and targetLowPriorityNodes must\nbe specified. If true, the autoScaleFormula element is required. The Pool\nautomatically resizes according to the formula. The default value is false."
        },
        "autoScaleFormula": {
          "type": "string",
          "description": "This property must not be specified if enableAutoScale is set to false. It is\nrequired if enableAutoScale is set to true. The formula is checked for validity\nbefore the Pool is created. If the formula is not valid, the Batch service\nrejects the request with detailed error information."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The default value is 15 minutes. The minimum and maximum value are 5 minutes\nand 168 hours respectively. If you specify a value less than 5 minutes or\ngreater than 168 hours, the Batch service rejects the request with an invalid\nproperty value error; if you are calling the REST API directly, the HTTP status\ncode is 400 (Bad Request)."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "description": "Enabling inter-node communication limits the maximum size of the Pool due to\ndeployment restrictions on the Compute Nodes of the Pool. This may result in\nthe Pool not reaching its desired size. The default value is false."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfigurationUpdate",
          "description": "The network configuration for a Pool."
        },
        "startTask": {
          "$ref": "#/definitions/StartTaskUpdate",
          "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "CertificateReference[]",
          "description": "For Windows Nodes, the Batch service installs the Certificates to the specified\nCertificate store and location. For Linux Compute Nodes, the Certificates are\nstored in a directory inside the Task working directory and an environment\nvariable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this\nlocation. For Certificates with visibility of 'remoteUser', a 'certs' directory\nis created in the user's home directory (e.g., /home/{user-name}/certs) and\nCertificates are placed in that directory."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ApplicationPackageReference[]",
          "description": "When creating a pool, the package's application ID must be fully qualified\n(/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}).\nChanges to Package references affect all new Nodes joining the Pool, but do not\naffect Compute Nodes that are already in the Pool until they are rebooted or\nreimaged. There is a maximum of 10 Package references on any given Pool."
        },
        "applicationLicenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The list of application licenses must be a subset of available Batch service\napplication licenses. If a license is requested which is not supported, Pool\ncreation will fail. The permitted licenses available on the Pool are 'maya',\n'vray', '3dsmax', 'arnold'. An additional charge applies for each application\nlicense added to the Pool."
        },
        "userAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "UserAccount[]",
          "description": "The list of user Accounts to be created on each Compute Node in the Pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MetadataItem[]",
          "description": "The Batch service does not assign any meaning to metadata; it is solely for the\nuse of user code."
        },
        "mountConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountConfiguration"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MountConfiguration[]",
          "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
        },
        "targetNodeCommunicationMode": {
          "$ref": "#/definitions/NodeCommunicationMode",
          "description": "If omitted, the default value is Default."
        }
      },
      "description": "Specification for creating a new Pool."
    },
    "PoolState": {
      "type": "string",
      "enum": [
        "active",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "PoolState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Pool is available to run Tasks subject to the availability of Compute Nodes."
          },
          {
            "name": "Deleting",
            "value": "deleting",
            "description": "The user has requested that the Pool be deleted, but the delete operation has not yet completed."
          }
        ]
      }
    },
    "PoolStatistics": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL for the statistics.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "usageStats": {
          "$ref": "#/definitions/UsageStatistics",
          "description": "Statistics related to Pool usage information."
        },
        "resourceStats": {
          "$ref": "#/definitions/ResourceStatistics",
          "description": "Statistics related to resource consumption by Compute Nodes in a Pool."
        }
      },
      "description": "Contains utilization and resource usage statistics for the lifetime of a Pool.",
      "required": [
        "url",
        "startTime",
        "lastUpdateTime"
      ]
    },
    "PoolUpdatePropertiesResponseHeaders": {
      "type": "object",
      "properties": {},
      "description": "The request to the Batch service was successful."
    },
    "PoolUsageMetrics": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string",
          "description": "The ID of the Pool whose metrics are aggregated in this entry.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the aggregation interval covered by this entry."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the aggregation interval covered by this entry."
        },
        "vmSize": {
          "type": "string",
          "description": "For information about available sizes of virtual machines in Pools, see Choose\na VM size for Compute Nodes in an Azure Batch Pool\n(https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
        },
        "totalCoreHours": {
          "type": "number",
          "format": "float",
          "description": "The total core hours used in the Pool during this aggregation interval."
        }
      },
      "description": "Usage metrics for a Pool across an aggregation interval.",
      "required": [
        "poolId",
        "startTime",
        "endTime",
        "vmSize",
        "totalCoreHours"
      ]
    },
    "Pool_ListUsageMetricRequestHeaders": {
      "type": "object",
      "properties": {
        "starttime": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest time from which to include metrics. This must be at least two and\na half hours before the current time. If not specified this defaults to the\nstart time of the last aggregation interval currently available."
        },
        "endtime": {
          "type": "string",
          "format": "date-time",
          "description": "The latest time from which to include metrics. This must be at least two hours\nbefore the current time. If not specified this defaults to the end time of the\nlast aggregation interval currently available."
        },
        "$filter": {
          "type": "string",
          "description": "An OData $filter clause. For more information on constructing this filter, see\nhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics."
        }
      },
      "description": "The parameters for a widget status request"
    },
    "PublicIPAddressConfiguration": {
      "type": "object",
      "properties": {
        "provision": {
          "$ref": "#/definitions/IPAddressProvisioningType",
          "description": "The default value is BatchManaged."
        },
        "ipAddressIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The number of IPs specified here limits the maximum size of the Pool - 100\ndedicated nodes or 100 Spot/Low-priority nodes can be allocated for each public\nIP. For example, a pool needing 250 dedicated VMs would need at least 3 public\nIPs specified. Each element of this collection is of the form:\n/subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}."
        }
      },
      "description": "The public IP Address configuration of the networking configuration of a Pool."
    },
    "RecentJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the Job."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Job."
        }
      },
      "description": "Information about the most recent Job to run under the Job Schedule."
    },
    "ResizeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the Pool resize error. Codes are invariant and are intended\nto be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Pool resize error, intended to be suitable for display\nin a user interface."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "A list of additional error details related to the Pool resize error."
        }
      },
      "description": "An error that occurred when resizing a Pool."
    },
    "ResourceFile": {
      "type": "object",
      "properties": {
        "autoStorageContainerName": {
          "type": "string",
          "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are\nmutually exclusive and one of them must be specified."
        },
        "storageContainerUrl": {
          "type": "string",
          "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are\nmutually exclusive and one of them must be specified. This URL must be readable\nand listable from compute nodes. There are three ways to get such a URL for a\ncontainer in Azure storage: include a Shared Access Signature (SAS) granting\nread and list permissions on the container, use a managed identity with read\nand list permissions, or set the ACL for the container to allow public access."
        },
        "httpUrl": {
          "type": "string",
          "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are\nmutually exclusive and one of them must be specified. If the URL points to\nAzure Blob Storage, it must be readable from compute nodes. There are three\nways to get such a URL for a blob in Azure storage: include a Shared Access\nSignature (SAS) granting read permissions on the blob, use a managed identity\nwith read permission, or set the ACL for the blob or its container to allow\npublic access."
        },
        "blobPrefix": {
          "type": "string",
          "description": "The property is valid only when autoStorageContainerName or storageContainerUrl\nis used. This prefix can be a partial filename or a subdirectory. If a prefix\nis not specified, all the files in the container will be downloaded."
        },
        "filePath": {
          "type": "string",
          "description": "If the httpUrl property is specified, the filePath is required and describes\nthe path which the file will be downloaded to, including the filename.\nOtherwise, if the autoStorageContainerName or storageContainerUrl property is\nspecified, filePath is optional and is the directory to download the files to.\nIn the case where filePath is used as a directory, any directory structure\nalready associated with the input data will be retained in full and appended to\nthe specified filePath directory. The specified relative path cannot break out\nof the Task's working directory (for example by using '..')."
        },
        "fileMode": {
          "type": "string",
          "description": "This property applies only to files being downloaded to Linux Compute Nodes. It\nwill be ignored if it is specified for a resourceFile which will be downloaded\nto a Windows Compute Node. If this property is not specified for a Linux\nCompute Node, then a default value of 0770 is applied to the file."
        },
        "identityReference": {
          "$ref": "#/definitions/ComputeNodeIdentityReference",
          "description": "The reference to a user assigned identity associated with the Batch pool which\na compute node will use."
        }
      },
      "description": "A single file or multiple files to be downloaded to a Compute Node."
    },
    "ResourceStatistics": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "avgCPUPercentage": {
          "type": "number",
          "format": "float",
          "description": "The average CPU usage across all Compute Nodes in the Pool (percentage per\nnode)."
        },
        "avgMemoryGiB": {
          "type": "number",
          "format": "float",
          "description": "The average memory usage in GiB across all Compute Nodes in the Pool."
        },
        "peakMemoryGiB": {
          "type": "number",
          "format": "float",
          "description": "The peak memory usage in GiB across all Compute Nodes in the Pool."
        },
        "avgDiskGiB": {
          "type": "number",
          "format": "float",
          "description": "The average used disk space in GiB across all Compute Nodes in the Pool."
        },
        "peakDiskGiB": {
          "type": "number",
          "format": "float",
          "description": "The peak used disk space in GiB across all Compute Nodes in the Pool."
        },
        "diskReadIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk read operations across all Compute Nodes in the Pool."
        },
        "diskWriteIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk write operations across all Compute Nodes in the Pool."
        },
        "diskReadGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of disk reads across all Compute Nodes in the\nPool."
        },
        "diskWriteGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of disk writes across all Compute Nodes in the\nPool."
        },
        "networkReadGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of network reads across all Compute Nodes in\nthe Pool."
        },
        "networkWriteGiB": {
          "type": "number",
          "format": "float",
          "description": "The total amount of data in GiB of network writes across all Compute Nodes in\nthe Pool."
        }
      },
      "description": "Statistics related to resource consumption by Compute Nodes in a Pool.",
      "required": [
        "startTime",
        "lastUpdateTime",
        "avgCPUPercentage",
        "avgMemoryGiB",
        "peakMemoryGiB",
        "avgDiskGiB",
        "peakDiskGiB",
        "diskReadIOps",
        "diskWriteIOps",
        "diskReadGiB",
        "diskWriteGiB",
        "networkReadGiB",
        "networkWriteGiB"
      ]
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "doNotRunUntil": {
          "type": "string",
          "format": "date-time",
          "description": "If you do not specify a doNotRunUntil time, the schedule becomes ready to\ncreate Jobs immediately."
        },
        "doNotRunAfter": {
          "type": "string",
          "format": "date-time",
          "description": "If you do not specify a doNotRunAfter time, and you are creating a recurring\nJob Schedule, the Job Schedule will remain active until you explicitly\nterminate it."
        },
        "startWindow": {
          "type": "string",
          "format": "duration",
          "description": "If a Job is not created within the startWindow interval, then the 'opportunity'\nis lost; no Job will be created until the next recurrence of the schedule. If\nthe schedule is recurring, and the startWindow is longer than the recurrence\ninterval, then this is equivalent to an infinite startWindow, because the Job\nthat is 'due' in one recurrenceInterval is not carried forward into the next\nrecurrence interval. The default is infinite. The minimum value is 1 minute. If\nyou specify a lower value, the Batch service rejects the schedule with an\nerror; if you are calling the REST API directly, the HTTP status code is 400\n(Bad Request)."
        },
        "recurrenceInterval": {
          "type": "string",
          "format": "duration",
          "description": "Because a Job Schedule can have at most one active Job under it at any given\ntime, if it is time to create a new Job under a Job Schedule, but the previous\nJob is still running, the Batch service will not create the new Job until the\nprevious Job finishes. If the previous Job does not finish within the\nstartWindow period of the new recurrenceInterval, then no new Job will be\nscheduled for that interval. For recurring Jobs, you should normally specify a\njobManagerTask in the jobSpecification. If you do not use jobManagerTask, you\nwill need an external process to monitor when Jobs are created, add Tasks to\nthe Jobs and terminate the Jobs ready for the next recurrence. The default is\nthat the schedule does not recur: one Job is created, within the startWindow\nafter the doNotRunUntil time, and the schedule is complete as soon as that Job\nfinishes. The minimum value is 1 minute. If you specify a lower value, the\nBatch service rejects the schedule with an error; if you are calling the REST\nAPI directly, the HTTP status code is 400 (Bad Request)."
        }
      },
      "description": "The schedule according to which Jobs will be created. All times are fixed\nrespective to UTC and are not impacted by daylight saving time."
    },
    "SchedulingState": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "SchedulingState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "enabled",
            "description": "Tasks can be scheduled on the Compute Node."
          },
          {
            "name": "Disabled",
            "value": "disabled",
            "description": "No new Tasks will be scheduled on the Compute Node. Tasks already running on the Compute Node may still run to completion. All Compute Nodes start with scheduling enabled."
          }
        ]
      }
    },
    "StartTask": {
      "type": "object",
      "properties": {
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the StartTask."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The Batch service retries a Task if its exit code is nonzero. Note that this\nvalue specifically controls the number of retries. The Batch service will try\nthe Task once, and may then retry up to this limit. For example, if the maximum\nretry count is 3, Batch tries the Task up to 4 times (one initial try and 3\nretries). If the maximum retry count is 0, the Batch service does not retry the\nTask. If the maximum retry count is -1, the Batch service retries the Task\nwithout limit, however this is not recommended for a start task or any task.\nThe default value is 0 (no retries)"
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "If true and the StartTask fails on a Node, the Batch service retries the\nStartTask up to its maximum retry count (maxTaskRetryCount). If the Task has\nstill not completed successfully after all retries, then the Batch service\nmarks the Node unusable, and will not schedule Tasks to it. This condition can\nbe detected via the Compute Node state and failure info details. If false, the\nBatch service will not wait for the StartTask to complete. In this case, other\nTasks can start executing on the Compute Node while the StartTask is still\nrunning; and even if the StartTask fails, new Tasks will continue to be\nscheduled on the Compute Node. The default is true."
        }
      },
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask.",
      "required": [
        "commandLine"
      ]
    },
    "StartTaskInformation": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StartTaskState",
          "description": "The state of the StartTask on the Compute Node."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "This value is reset every time the Task is restarted or retried (that is, this\nis the most recent time at which the StartTask started running)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This is the end time of the most recent run of the StartTask, if that run has\ncompleted (even if that run failed and a retry is pending). This element is not\npresent if the StartTask is currently running."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "This property is set only if the StartTask is in the completed state. In\ngeneral, the exit code for a process reflects the specific convention\nimplemented by the application developer for that process. If you use the exit\ncode value to make decisions in your code, be sure that you know the exit code\nconvention used by the application process. However, if the Batch service\nterminates the StartTask (due to timeout, or user termination via the API) you\nmay see an operating system-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/TaskContainerExecutionInformation",
          "description": "This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/TaskFailureInformation",
          "description": "This property is set only if the Task is in the completed state and encountered\na failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Task application failures (non-zero exit code) are retried, pre-processing\nerrors (the Task could not be run) and file upload errors are not retried. The\nBatch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "This element is present only if the Task was retried (i.e. retryCount is\nnonzero). If present, this is typically the same as startTime, but may be\ndifferent if the Task has been restarted for reasons other than retry; for\nexample, if the Compute Node was rebooted during a retry, then the startTime is\nupdated but the lastRetryTime is not."
        },
        "result": {
          "$ref": "#/definitions/TaskExecutionResult",
          "description": "If the value is 'failed', then the details of the failure can be found in the\nfailureInfo property."
        }
      },
      "description": "Information about a StartTask running on a Compute Node.",
      "required": [
        "state",
        "startTime",
        "retryCount"
      ]
    },
    "StartTaskState": {
      "type": "string",
      "enum": [
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "StartTaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "running",
            "description": "The StartTask is currently running."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The StartTask has exited with exit code 0, or the StartTask has failed and the retry limit has reached, or the StartTask process did not run due to Task preparation errors (such as resource file download failures)."
          }
        ]
      }
    },
    "StartTaskUpdate": {
      "type": "object",
      "properties": {
        "commandLine": {
          "type": "string",
          "description": "The command line does not run under a shell, and therefore cannot take\nadvantage of shell features such as environment variable expansion. If you want\nto take advantage of such features, you should invoke the shell in the command\nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c\nMyCommand\" in Linux. If the command line refers to file paths, it should use a\nrelative path (relative to the Task working directory), or use the Batch\nprovided environment variable\n(https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettingsUpdate",
          "description": "When this is specified, all directories recursively below the\nAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\nmapped into the container, all Task environment variables are mapped into the\ncontainer, and the Task command line is executed in the container. Files\nproduced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be\nreflected to the host disk, meaning that Batch file APIs will not be able to\naccess those files."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ResourceFile[]",
          "description": "Files listed under this element are located in the Task's working directory."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "EnvironmentSetting[]",
          "description": "A list of environment variable settings for the StartTask."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "If omitted, the Task runs as a non-administrative user unique to the Task."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The Batch service retries a Task if its exit code is nonzero. Note that this\nvalue specifically controls the number of retries. The Batch service will try\nthe Task once, and may then retry up to this limit. For example, if the maximum\nretry count is 3, Batch tries the Task up to 4 times (one initial try and 3\nretries). If the maximum retry count is 0, the Batch service does not retry the\nTask. If the maximum retry count is -1, the Batch service retries the Task\nwithout limit, however this is not recommended for a start task or any task.\nThe default value is 0 (no retries)"
        },
        "waitForSuccess": {
          "type": "boolean",
          "description": "If true and the StartTask fails on a Node, the Batch service retries the\nStartTask up to its maximum retry count (maxTaskRetryCount). If the Task has\nstill not completed successfully after all retries, then the Batch service\nmarks the Node unusable, and will not schedule Tasks to it. This condition can\nbe detected via the Compute Node state and failure info details. If false, the\nBatch service will not wait for the StartTask to complete. In this case, other\nTasks can start executing on the Compute Node while the StartTask is still\nrunning; and even if the StartTask fails, new Tasks will continue to be\nscheduled on the Compute Node. The default is true."
        }
      },
      "description": "Batch will retry Tasks when a recovery operation is triggered on a Node.\nExamples of recovery operations include (but are not limited to) when an\nunhealthy Node is rebooted or a Compute Node disappeared due to host failure.\nRetries due to recovery operations are independent of and are not counted\nagainst the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal\nretry due to a recovery operation may occur. Because of this, all Tasks should\nbe idempotent. This means Tasks need to tolerate being interrupted and\nrestarted without causing any corruption or duplicate data. The best practice\nfor long running Tasks is to use some form of checkpointing. In some cases the\nStartTask may be re-run even though the Compute Node was not rebooted. Special\ncare should be taken to avoid StartTasks which create breakaway process or\ninstall/launch services from the StartTask working directory, as this will\nblock Batch from being able to re-run the StartTask."
    },
    "StatusLevelTypes": {
      "type": "string",
      "enum": [
        "Error",
        "Info",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "StatusLevelTypes",
        "modelAsString": true
      }
    },
    "StorageAccountType": {
      "type": "string",
      "enum": [
        "standard_lrs",
        "premium_lrs"
      ],
      "x-ms-enum": {
        "name": "StorageAccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "StandardLRS",
            "value": "standard_lrs",
            "description": "The data disk should use standard locally redundant storage."
          },
          {
            "name": "PremiumLRS",
            "value": "premium_lrs",
            "description": "The data disk should use premium locally redundant storage."
          }
        ]
      }
    },
    "SubtaskInformation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the subtask."
        },
        "nodeInfo": {
          "$ref": "#/definitions/ComputeNodeInformation",
          "description": "Information about the Compute Node on which a Task ran."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask started running. If the subtask has been\nrestarted or retried, this is the most recent time at which the subtask started\nrunning."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the subtask is in the Completed state."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "This property is set only if the subtask is in the completed state. In general,\nthe exit code for a process reflects the specific convention implemented by the\napplication developer for that process. If you use the exit code value to make\ndecisions in your code, be sure that you know the exit code convention used by\nthe application process. However, if the Batch service terminates the subtask\n(due to timeout, or user termination via the API) you may see an operating\nsystem-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/TaskContainerExecutionInformation",
          "description": "This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/TaskFailureInformation",
          "description": "This property is set only if the Task is in the completed state and encountered\na failure."
        },
        "state": {
          "$ref": "#/definitions/SubtaskState",
          "description": "The state of the subtask."
        },
        "stateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the subtask entered its current state."
        },
        "previousState": {
          "$ref": "#/definitions/SubtaskState",
          "description": "This property is not set if the subtask is in its initial running state."
        },
        "previousStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is not set if the subtask is in its initial running state."
        },
        "result": {
          "$ref": "#/definitions/TaskExecutionResult",
          "description": "If the value is 'failed', then the details of the failure can be found in the\nfailureInfo property."
        }
      },
      "description": "Information about an Azure Batch subtask."
    },
    "SubtaskState": {
      "type": "string",
      "enum": [
        "preparing",
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "SubtaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Preparing",
            "value": "preparing",
            "description": "The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated."
          }
        ]
      }
    },
    "TaskAddCollectionResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAddResult"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "TaskAddResult[]",
          "description": "The results of the add Task collection operation."
        }
      },
      "description": "The result of adding a collection of Tasks to a Job."
    },
    "TaskAddResult": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/TaskAddStatus",
          "description": "The status of the add Task request."
        },
        "taskId": {
          "type": "string",
          "description": "The ID of the Task for which this is the result."
        },
        "eTag": {
          "type": "string",
          "description": "You can use this to detect whether the Task has changed between requests. In\nparticular, you can be pass the ETag with an Update Task request to specify\nthat your changes should take effect only if nobody else has modified the Job\nin the meantime."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the Task."
        },
        "location": {
          "type": "string",
          "description": "The URL of the Task, if the Task was successfully added."
        },
        "error": {
          "$ref": "#/definitions/BatchError",
          "description": "An error response received from the Azure Batch service."
        }
      },
      "description": "Result for a single Task added as part of an add Task collection operation.",
      "required": [
        "status",
        "taskId"
      ]
    },
    "TaskAddStatus": {
      "type": "string",
      "enum": [
        "Success",
        "clienterror",
        "servererror"
      ],
      "x-ms-enum": {
        "name": "TaskAddStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "Success",
            "description": "The Task was added successfully."
          },
          {
            "name": "ClientError",
            "value": "clienterror",
            "description": "The Task failed to add due to a client error and should not be retried without modifying the request as appropriate."
          },
          {
            "name": "ServerError",
            "value": "servererror",
            "description": "Task failed to add due to a server error and can be retried without modification."
          }
        ]
      }
    },
    "TaskConstraints": {
      "type": "object",
      "properties": {
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "If this is not specified, there is no time limit on how long the Task may run."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "description": "The default is 7 days, i.e. the Task directory will be retained for 7 days\nunless the Compute Node is removed or the Job is deleted."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Note that this value specifically controls the number of retries for the Task\nexecutable due to a nonzero exit code. The Batch service will try the Task\nonce, and may then retry up to this limit. For example, if the maximum retry\ncount is 3, Batch tries the Task up to 4 times (one initial try and 3 retries).\nIf the maximum retry count is 0, the Batch service does not retry the Task\nafter the first attempt. If the maximum retry count is -1, the Batch service\nretries the Task without limit, however this is not recommended for a start\ntask or any task. The default value is 0 (no retries)"
        }
      },
      "description": "Execution constraints to apply to a Task."
    },
    "TaskContainerExecutionInformation": {
      "type": "object",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "The ID of the container."
        },
        "state": {
          "type": "string",
          "description": "This is the state of the container according to the Docker service. It is\nequivalent to the status field returned by \"docker inspect\"."
        },
        "error": {
          "type": "string",
          "description": "This is the detailed error string from the Docker service, if available. It is\nequivalent to the error field returned by \"docker inspect\"."
        }
      },
      "description": "Contains information about the container which a Task is executing."
    },
    "TaskContainerSettings": {
      "type": "object",
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "description": "These additional options are supplied as arguments to the \"docker create\"\ncommand, in addition to those controlled by the Batch Service."
        },
        "imageName": {
          "type": "string",
          "description": "This is the full Image reference, as would be specified to \"docker pull\". If\nno tag is provided as part of the Image name, the tag \":latest\" is used as a\ndefault."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistry",
          "description": "This setting can be omitted if was already provided at Pool creation."
        },
        "workingDirectory": {
          "$ref": "#/definitions/ContainerWorkingDirectory",
          "description": "The default is 'taskWorkingDirectory'."
        }
      },
      "description": "The container settings for a Task.",
      "required": [
        "imageName"
      ]
    },
    "TaskContainerSettingsUpdate": {
      "type": "object",
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "description": "These additional options are supplied as arguments to the \"docker create\"\ncommand, in addition to those controlled by the Batch Service."
        },
        "imageName": {
          "type": "string",
          "description": "This is the full Image reference, as would be specified to \"docker pull\". If\nno tag is provided as part of the Image name, the tag \":latest\" is used as a\ndefault."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistry",
          "description": "This setting can be omitted if was already provided at Pool creation."
        },
        "workingDirectory": {
          "$ref": "#/definitions/ContainerWorkingDirectory",
          "description": "The default is 'taskWorkingDirectory'."
        }
      },
      "description": "The container settings for a Task."
    },
    "TaskCounts": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the active state."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the running or preparing state."
        },
        "completed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks in the completed state."
        },
        "succeeded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks which succeeded. A Task succeeds if its result (found in\nthe executionInfo property) is 'success'."
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Tasks which failed. A Task fails if its result (found in the\nexecutionInfo property) is 'failure'."
        }
      },
      "description": "The Task counts for a Job.",
      "required": [
        "active",
        "running",
        "completed",
        "succeeded",
        "failed"
      ]
    },
    "TaskCountsResult": {
      "type": "object",
      "properties": {
        "taskCounts": {
          "$ref": "#/definitions/TaskCounts",
          "description": "The Task counts for a Job.",
          "readOnly": true
        },
        "taskSlotCounts": {
          "$ref": "#/definitions/TaskSlotCounts",
          "description": "The TaskSlot counts for a Job."
        }
      },
      "description": "The Task and TaskSlot counts for a Job.",
      "required": [
        "taskCounts",
        "taskSlotCounts"
      ]
    },
    "TaskDependencies": {
      "type": "object",
      "properties": {
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The taskIds collection is limited to 64000 characters total (i.e. the combined\nlength of all Task IDs). If the taskIds collection exceeds the maximum length,\nthe Add Task request fails with error code TaskDependencyListTooLong. In this\ncase consider using Task ID ranges instead."
        },
        "taskIdRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskIdRange"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "TaskIdRange[]",
          "description": "The list of Task ID ranges that this Task depends on. All Tasks in all ranges\nmust complete successfully before the dependent Task can be scheduled."
        }
      },
      "description": "Specifies any dependencies of a Task. Any Task that is explicitly specified or\nwithin a dependency range must complete before the dependant Task will be\nscheduled."
    },
    "TaskExecutionInformation": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "'Running' corresponds to the running state, so if the Task specifies resource\nfiles or Packages, then the start time reflects the time at which the Task\nstarted downloading or deploying these. If the Task has been restarted or\nretried, this is the most recent time at which the Task started running. This\nproperty is present only for Tasks that are in the running or completed state."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the Task is in the Completed state."
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "This property is set only if the Task is in the completed state. In general,\nthe exit code for a process reflects the specific convention implemented by the\napplication developer for that process. If you use the exit code value to make\ndecisions in your code, be sure that you know the exit code convention used by\nthe application process. However, if the Batch service terminates the Task (due\nto timeout, or user termination via the API) you may see an operating\nsystem-defined exit code."
        },
        "containerInfo": {
          "$ref": "#/definitions/TaskContainerExecutionInformation",
          "description": "This property is set only if the Task runs in a container context."
        },
        "failureInfo": {
          "$ref": "#/definitions/TaskFailureInformation",
          "description": "This property is set only if the Task is in the completed state and encountered\na failure."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Task application failures (non-zero exit code) are retried, pre-processing\nerrors (the Task could not be run) and file upload errors are not retried. The\nBatch service will retry the Task up to the limit specified by the constraints."
        },
        "lastRetryTime": {
          "type": "string",
          "format": "date-time",
          "description": "This element is present only if the Task was retried (i.e. retryCount is\nnonzero). If present, this is typically the same as startTime, but may be\ndifferent if the Task has been restarted for reasons other than retry; for\nexample, if the Compute Node was rebooted during a retry, then the startTime is\nupdated but the lastRetryTime is not."
        },
        "requeueCount": {
          "type": "integer",
          "format": "int32",
          "description": "When the user removes Compute Nodes from a Pool (by resizing/shrinking the\npool) or when the Job is being disabled, the user can specify that running\nTasks on the Compute Nodes be requeued for execution. This count tracks how\nmany times the Task has been requeued for these reasons."
        },
        "lastRequeueTime": {
          "type": "string",
          "format": "date-time",
          "description": "This property is set only if the requeueCount is nonzero."
        },
        "result": {
          "$ref": "#/definitions/TaskExecutionResult",
          "description": "If the value is 'failed', then the details of the failure can be found in the\nfailureInfo property."
        }
      },
      "description": "Information about the execution of a Task.",
      "required": [
        "retryCount",
        "requeueCount"
      ]
    },
    "TaskExecutionResult": {
      "type": "string",
      "enum": [
        "success",
        "failure"
      ],
      "x-ms-enum": {
        "name": "TaskExecutionResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "success",
            "description": "The Task ran successfully."
          },
          {
            "name": "Failure",
            "value": "failure",
            "description": "There was an error during processing of the Task. The failure may have occurred before the Task process was launched, while the Task process was executing, or after the Task process exited."
          }
        ]
      }
    },
    "TaskFailureInformation": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/ErrorCategory",
          "description": "The category of the error."
        },
        "code": {
          "type": "string",
          "description": "An identifier for the Task error. Codes are invariant and are intended to be\nconsumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the Task error, intended to be suitable for display in a\nuser interface."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "NameValuePair[]",
          "description": "A list of additional details related to the error."
        }
      },
      "description": "Information about a Task failure.",
      "required": [
        "category"
      ]
    },
    "TaskIdRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "The first Task ID in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "The last Task ID in the range."
        }
      },
      "description": "The start and end of the range are inclusive. For example, if a range has start\n9 and end 12, then it represents Tasks '9', '10', '11' and '12'.",
      "required": [
        "start",
        "end"
      ]
    },
    "TaskInformation": {
      "type": "object",
      "properties": {
        "taskUrl": {
          "type": "string",
          "description": "The URL of the Task."
        },
        "jobId": {
          "type": "string",
          "description": "The ID of the Job to which the Task belongs."
        },
        "taskId": {
          "type": "string",
          "description": "The ID of the Task."
        },
        "subtaskId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the subtask if the Task is a multi-instance Task."
        },
        "taskState": {
          "$ref": "#/definitions/TaskState",
          "description": "The state of the Task."
        },
        "executionInfo": {
          "$ref": "#/definitions/TaskExecutionInformation",
          "description": "Information about the execution of a Task."
        }
      },
      "description": "Information about a Task running on a Compute Node.",
      "required": [
        "taskState"
      ]
    },
    "TaskSchedulingPolicy": {
      "type": "object",
      "properties": {
        "nodeFillType": {
          "$ref": "#/definitions/ComputeNodeFillType",
          "description": "If not specified, the default is spread."
        }
      },
      "description": "Specifies how Tasks should be distributed across Compute Nodes.",
      "required": [
        "nodeFillType"
      ]
    },
    "TaskSchedulingPolicyUpdate": {
      "type": "object",
      "properties": {
        "nodeFillType": {
          "$ref": "#/definitions/ComputeNodeFillType",
          "description": "If not specified, the default is spread."
        }
      },
      "description": "Specifies how Tasks should be distributed across Compute Nodes."
    },
    "TaskSlotCounts": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for active Tasks."
        },
        "running": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for running Tasks."
        },
        "completed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for completed Tasks."
        },
        "succeeded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for succeeded Tasks."
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of TaskSlots for failed Tasks."
        }
      },
      "description": "The TaskSlot counts for a Job.",
      "required": [
        "active",
        "running",
        "completed",
        "succeeded",
        "failed"
      ]
    },
    "TaskState": {
      "type": "string",
      "enum": [
        "active",
        "preparing",
        "running",
        "completed"
      ],
      "x-ms-enum": {
        "name": "TaskState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "The Task is queued and able to run, but is not currently assigned to a Compute Node. A Task enters this state when it is created, when it is enabled after being disabled, or when it is awaiting a retry after a failed run."
          },
          {
            "name": "Preparing",
            "value": "preparing",
            "description": "The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing."
          },
          {
            "name": "Completed",
            "value": "completed",
            "description": "The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated."
          }
        ]
      }
    },
    "TaskStatistics": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the statistics."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "userCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total user mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by the Task."
        },
        "kernelCPUTime": {
          "type": "string",
          "format": "duration",
          "description": "The total kernel mode CPU time (summed across all cores and all Compute Nodes)\nconsumed by the Task."
        },
        "wallClockTime": {
          "type": "string",
          "format": "duration",
          "description": "The wall clock time is the elapsed time from when the Task started running on a\nCompute Node to when it finished (or to the last time the statistics were\nupdated, if the Task had not finished by then). If the Task was retried, this\nincludes the wall clock time of all the Task retries."
        },
        "readIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk read operations made by the Task."
        },
        "writeIOps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of disk write operations made by the Task."
        },
        "readIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes read from disk by the Task."
        },
        "writeIOGiB": {
          "type": "number",
          "format": "float",
          "description": "The total gibibytes written to disk by the Task."
        },
        "waitTime": {
          "type": "string",
          "format": "duration",
          "description": "The total wait time of the Task. The wait time for a Task is defined as the\nelapsed time between the creation of the Task and the start of Task execution.\n(If the Task is retried due to failures, the wait time is the time to the most\nrecent Task execution.)"
        }
      },
      "description": "Resource usage statistics for a Task.",
      "required": [
        "url",
        "startTime",
        "lastUpdateTime",
        "userCPUTime",
        "kernelCPUTime",
        "wallClockTime",
        "readIOps",
        "writeIOps",
        "readIOGiB",
        "writeIOGiB",
        "waitTime"
      ]
    },
    "UploadBatchServiceLogsConfiguration": {
      "type": "object",
      "properties": {
        "containerUrl": {
          "type": "string",
          "description": "If a user assigned managed identity is not being used, the URL must include a\nShared Access Signature (SAS) granting write permissions to the container. The\nSAS duration must allow enough time for the upload to finish. The start time\nfor SAS is optional and recommended to not be specified."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Any log file containing a log message in the time range will be uploaded. This\nmeans that the operation might retrieve more logs than have been requested\nsince the entire log file is always uploaded, but the operation should not\nretrieve fewer logs than have been requested."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Any log file containing a log message in the time range will be uploaded. This\nmeans that the operation might retrieve more logs than have been requested\nsince the entire log file is always uploaded, but the operation should not\nretrieve fewer logs than have been requested. If omitted, the default is to\nupload all logs available after the startTime."
        },
        "identityReference": {
          "$ref": "#/definitions/ComputeNodeIdentityReference",
          "description": "The identity must have write access to the Azure Blob Storage container."
        }
      },
      "description": "The Azure Batch service log files upload configuration for a Compute Node.",
      "required": [
        "containerUrl",
        "startTime"
      ]
    },
    "UploadBatchServiceLogsResult": {
      "type": "object",
      "properties": {
        "virtualDirectoryName": {
          "type": "string",
          "description": "The virtual directory name is part of the blob name for each log file uploaded,\nand it is built based poolId, nodeId and a unique identifier.",
          "readOnly": true
        },
        "numberOfFilesUploaded": {
          "type": "integer",
          "format": "int32",
          "description": "The number of log files which will be uploaded."
        }
      },
      "description": "The result of uploading Batch service log files from a specific Compute Node.",
      "required": [
        "virtualDirectoryName",
        "numberOfFilesUploaded"
      ]
    },
    "UsageStatistics": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the time range covered by the statistics."
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the statistics were last updated. All statistics are limited\nto the range between startTime and lastUpdateTime."
        },
        "dedicatedCoreTime": {
          "type": "string",
          "format": "duration",
          "description": "The aggregated wall-clock time of the dedicated Compute Node cores being part\nof the Pool."
        }
      },
      "description": "Statistics related to Pool usage information.",
      "required": [
        "startTime",
        "lastUpdateTime",
        "dedicatedCoreTime"
      ]
    },
    "UserAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user Account. Names can contain any Unicode characters up to a\nmaximum length of 20."
        },
        "password": {
          "type": "string",
          "description": "The password for the user Account."
        },
        "elevationLevel": {
          "$ref": "#/definitions/ElevationLevel",
          "description": "The default value is nonAdmin."
        },
        "linuxUserConfiguration": {
          "$ref": "#/definitions/LinuxUserConfiguration",
          "description": "This property is ignored if specified on a Windows Pool. If not specified, the\nuser is created with the default options."
        },
        "windowsUserConfiguration": {
          "$ref": "#/definitions/WindowsUserConfiguration",
          "description": "This property can only be specified if the user is on a Windows Pool. If not\nspecified and on a Windows Pool, the user is created with the default options."
        }
      },
      "description": "Properties used to create a user used to execute Tasks on an Azure Batch\nCompute Node.",
      "required": [
        "name",
        "password"
      ]
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource id of the user assigned identity"
        },
        "clientId": {
          "type": "string",
          "description": "The client id of the user assigned identity.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of the user assigned identity.",
          "readOnly": true
        }
      },
      "description": "The user assigned Identity",
      "required": [
        "resourceId"
      ]
    },
    "UserIdentity": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The userName and autoUser properties are mutually exclusive; you must specify\none but not both."
        },
        "autoUser": {
          "$ref": "#/definitions/AutoUserSpecification",
          "description": "The userName and autoUser properties are mutually exclusive; you must specify\none but not both."
        }
      },
      "description": "Specify either the userName or autoUser property, but not both."
    },
    "VMExtension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the virtual machine extension."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "The type of the extension."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "The version of script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is\navailable at deployment time. Once deployed, however, the extension will not\nupgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "$ref": "#/definitions/object",
          "description": "JSON formatted public settings for the extension."
        },
        "protectedSettings": {
          "$ref": "#/definitions/object",
          "description": "The extension can contain either protectedSettings or\nprotectedSettingsFromKeyVault or no protected settings at all. "
        },
        "provisionAfterExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "Collection of extension names after which this extension needs to be\nprovisioned."
        }
      },
      "description": "The configuration for virtual machine extensions.",
      "required": [
        "name",
        "publisher",
        "type"
      ]
    },
    "VMExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the vm extension instance view."
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "InstanceViewStatus[]",
          "description": "The resource status information."
        },
        "subStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "InstanceViewStatus[]",
          "description": "The resource status information."
        }
      },
      "description": "The vm extension instance view."
    },
    "VerificationType": {
      "type": "string",
      "enum": [
        "verified",
        "unverified"
      ],
      "x-ms-enum": {
        "name": "VerificationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Verified",
            "value": "verified",
            "description": "The Image is guaranteed to be compatible with the associated Compute Node agent SKU and all Batch features have been confirmed to work as expected."
          },
          {
            "name": "Unverified",
            "value": "unverified",
            "description": "The associated Compute Node agent SKU should have binary compatibility with the Image, but specific functionality has not been verified."
          }
        ]
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-04-01.17.0"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_01",
            "value": "2023-04-01.17.0"
          }
        ]
      }
    },
    "VirtualMachineConfiguration": {
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to an Azure Virtual Machines Marketplace Image or a Shared Image\nGallery Image. To get the list of all Azure Marketplace Image references\nverified by Azure Batch, see the 'List Supported Images' operation."
        },
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The Batch Compute Node agent is a program that runs on each Compute Node in the\nPool, and provides the command-and-control interface between the Compute Node\nand the Batch service. There are different implementations of the Compute Node\nagent, known as SKUs, for different operating systems. You must specify a\nCompute Node agent SKU which matches the selected Image reference. To get the\nlist of supported Compute Node agent SKUs along with their list of verified\nImage references, see the 'List supported Compute Node agent SKUs' operation."
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "This property must not be specified if the imageReference property specifies a\nLinux OS Image."
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "DataDisk[]",
          "description": "This property must be specified if the Compute Nodes in the Pool need to have\nempty data disks attached to them. This cannot be updated. Each Compute Node\ngets its own disk (the disk is not a file share). Existing disks cannot be\nattached, each attached disk is empty. When the Compute Node is removed from\nthe Pool, the disk and all data associated with it is also deleted. The disk is\nnot formatted after being attached, it must be formatted before use - for more\ninformation see\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux\nand\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine."
        },
        "licenseType": {
          "type": "string",
          "description": "This only applies to Images that contain the Windows operating system, and\nshould only be used when you hold valid on-premises licenses for the Compute\nNodes which will be deployed. If omitted, no on-premises licensing discount is\napplied. Values are:\n\n Windows_Server - The on-premises license is for Windows\nServer.\n Windows_Client - The on-premises license is for Windows Client.\n"
        },
        "containerConfiguration": {
          "$ref": "#/definitions/ContainerConfiguration",
          "description": "If specified, setup is performed on each Compute Node in the Pool to allow\nTasks to run in containers. All regular Tasks and Job manager Tasks run on this\nPool must specify the containerSettings property, and all other Tasks may\nspecify it."
        },
        "diskEncryptionConfiguration": {
          "$ref": "#/definitions/DiskEncryptionConfiguration",
          "description": "If specified, encryption is performed on each node in the pool during node\nprovisioning."
        },
        "nodePlacementConfiguration": {
          "$ref": "#/definitions/NodePlacementConfiguration",
          "description": "This configuration will specify rules on how nodes in the pool will be\nphysically allocated."
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMExtension"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "VMExtension[]",
          "description": "If specified, the extensions mentioned in this configuration will be installed\non each node."
        },
        "osDisk": {
          "$ref": "#/definitions/OSDisk",
          "description": "Settings for the operating system disk of the compute node (VM)."
        }
      },
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Virtual\nMachines infrastructure.",
      "required": [
        "imageReference",
        "nodeAgentSKUId"
      ]
    },
    "VirtualMachineConfigurationUpdate": {
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to an Azure Virtual Machines Marketplace Image or a Shared Image\nGallery Image. To get the list of all Azure Marketplace Image references\nverified by Azure Batch, see the 'List Supported Images' operation."
        },
        "nodeAgentSKUId": {
          "type": "string",
          "description": "The Batch Compute Node agent is a program that runs on each Compute Node in the\nPool, and provides the command-and-control interface between the Compute Node\nand the Batch service. There are different implementations of the Compute Node\nagent, known as SKUs, for different operating systems. You must specify a\nCompute Node agent SKU which matches the selected Image reference. To get the\nlist of supported Compute Node agent SKUs along with their list of verified\nImage references, see the 'List supported Compute Node agent SKUs' operation."
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "This property must not be specified if the imageReference property specifies a\nLinux OS Image."
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "DataDisk[]",
          "description": "This property must be specified if the Compute Nodes in the Pool need to have\nempty data disks attached to them. This cannot be updated. Each Compute Node\ngets its own disk (the disk is not a file share). Existing disks cannot be\nattached, each attached disk is empty. When the Compute Node is removed from\nthe Pool, the disk and all data associated with it is also deleted. The disk is\nnot formatted after being attached, it must be formatted before use - for more\ninformation see\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux\nand\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine."
        },
        "licenseType": {
          "type": "string",
          "description": "This only applies to Images that contain the Windows operating system, and\nshould only be used when you hold valid on-premises licenses for the Compute\nNodes which will be deployed. If omitted, no on-premises licensing discount is\napplied. Values are:\n\n Windows_Server - The on-premises license is for Windows\nServer.\n Windows_Client - The on-premises license is for Windows Client.\n"
        },
        "containerConfiguration": {
          "$ref": "#/definitions/ContainerConfigurationUpdate",
          "description": "If specified, setup is performed on each Compute Node in the Pool to allow\nTasks to run in containers. All regular Tasks and Job manager Tasks run on this\nPool must specify the containerSettings property, and all other Tasks may\nspecify it."
        },
        "diskEncryptionConfiguration": {
          "$ref": "#/definitions/DiskEncryptionConfiguration",
          "description": "If specified, encryption is performed on each node in the pool during node\nprovisioning."
        },
        "nodePlacementConfiguration": {
          "$ref": "#/definitions/NodePlacementConfiguration",
          "description": "This configuration will specify rules on how nodes in the pool will be\nphysically allocated."
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMExtension"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "VMExtension[]",
          "description": "If specified, the extensions mentioned in this configuration will be installed\non each node."
        },
        "osDisk": {
          "$ref": "#/definitions/OSDisk",
          "description": "Settings for the operating system disk of the compute node (VM)."
        }
      },
      "description": "The configuration for Compute Nodes in a Pool based on the Azure Virtual\nMachines infrastructure."
    },
    "VirtualMachineInfo": {
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to an Azure Virtual Machines Marketplace Image or a Shared Image\nGallery Image. To get the list of all Azure Marketplace Image references\nverified by Azure Batch, see the 'List Supported Images' operation."
        }
      },
      "description": "Info about the current state of the virtual machine."
    },
    "WindowsConfiguration": {
      "type": "object",
      "properties": {
        "enableAutomaticUpdates": {
          "type": "boolean",
          "description": "If omitted, the default value is true."
        }
      },
      "description": "Windows operating system settings to apply to the virtual machine."
    },
    "WindowsUserConfiguration": {
      "type": "object",
      "properties": {
        "loginMode": {
          "$ref": "#/definitions/LoginMode",
          "description": "The default value for VirtualMachineConfiguration Pools is 'batch' and for\nCloudServiceConfiguration Pools is 'interactive'."
        }
      },
      "description": "Properties used to create a user Account on a Windows Compute Node."
    },
    "object": {
      "type": "object",
      "properties": {}
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchApplicationListHeaders.maxresults": {
      "name": "maxresults",
      "in": "query",
      "required": false,
      "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
      "default": 1000,
      "minimum": 1,
      "maximum": 1000,
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "BatchApplicationListHeaders.ocp-date": {
      "name": "ocp-date",
      "in": "header",
      "required": false,
      "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
      "format": "date-time-rfc1123",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchClientRequestHeaders.client-request-id": {
      "name": "client-request-id",
      "in": "header",
      "required": false,
      "description": "The caller-generated request identity, in the form of a GUID with no decoration\nsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.",
      "format": "uuid",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchClientRequestHeaders.ocp-date": {
      "name": "ocp-date",
      "in": "header",
      "required": false,
      "description": "The time the request was issued. Client libraries typically set this to the\ncurrent system clock time; set it explicitly if you are calling the REST API\ndirectly.",
      "format": "date-time-rfc1123",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchClientRequestHeaders.return-client-request-id": {
      "name": "return-client-request-id",
      "in": "header",
      "required": false,
      "description": "Whether the server should return the client-request-id in the response.",
      "default": false,
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "BatchClientRequestHeaders.timeOut": {
      "name": "timeOut",
      "in": "query",
      "required": false,
      "description": "The maximum number of items to return in the response. A maximum of 1000\napplications can be returned.",
      "default": 30,
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      },
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "BatchJobFileClientRequestHeaders.filePath": {
      "name": "filePath",
      "in": "path",
      "required": true,
      "description": "The path to the Task file that you want to get the content of.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchJobFileClientRequestHeaders.jobId": {
      "name": "jobId",
      "in": "path",
      "required": true,
      "description": "The ID of the Job that contains the Task.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchJobFileClientRequestHeaders.taskId": {
      "name": "taskId",
      "in": "path",
      "required": true,
      "description": "The ID of the Task whose file you want to retrieve.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchMatchHeaders.If-Match": {
      "name": "if-match",
      "in": "header",
      "required": false,
      "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice exactly matches the value specified by the client.",
      "x-ms-client-name": "If-Match",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchMatchHeaders.If-None-Match": {
      "name": "if-none-match",
      "in": "header",
      "required": false,
      "description": "An ETag value associated with the version of the resource known to the client.\nThe operation will be performed only if the resource's current ETag on the\nservice does not match the value specified by the client.",
      "x-ms-client-name": "If-None-Match",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchModifiedSinceHeaders.If-Modified-Since": {
      "name": "if-modified-since",
      "in": "header",
      "required": false,
      "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nbeen modified since the specified time.",
      "x-ms-client-name": "If-Modified-Since",
      "format": "date-time-rfc1123",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchModifiedSinceHeaders.If-Unmodified-Since": {
      "name": "if-unmodified-since",
      "in": "header",
      "required": false,
      "description": "A timestamp indicating the last modified time of the resource known to the\nclient. The operation will be performed only if the resource on the service has\nnot been modified since the specified time.",
      "x-ms-client-name": "If-Unmodified-Since",
      "format": "date-time-rfc1123",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchPoolFileClientRequestHeaders.filePath": {
      "name": "filePath",
      "in": "path",
      "required": true,
      "description": "The path to the file or directory that you want to delete.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchPoolFileClientRequestHeaders.nodeId": {
      "name": "nodeId",
      "in": "path",
      "required": true,
      "description": "The ID of the Compute Node from which you want to delete the file.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchPoolFileClientRequestHeaders.poolId": {
      "name": "poolId",
      "in": "path",
      "required": true,
      "description": "The ID of the Pool that contains the Compute Node.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BatchPoolHeaders": {
      "name": "poolId",
      "in": "path",
      "required": true,
      "description": "The ID of the Pool to get.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
